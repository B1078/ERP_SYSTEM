@{
    string? UserName = ViewContext.HttpContext.Session.GetString("UserName");
    string? StateId = ViewContext.HttpContext.Session.GetString("StateId");
    string? CntryId = ViewContext.HttpContext.Session.GetString("CntryId");
    string? BrchId = ViewContext.HttpContext.Session.GetString("BrchId");
    DateTime currentDate = DateTime.Now;
    string formattedDate = currentDate.ToString("dd-MM-yyyy");
}

<div class="col-xl-12 col-md-12">
    <div class="card table-card p-2 mb-0 Div_navigation">
        <div class="row">
            <div class="col-md-12">
                <button class="btn text-center btn-sm btn-primary btn_first p-2" title="Get First Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_backward p-2" title="Get Privious Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary p-2 btn_forward" title="Get Next Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_last p-2" title="Get Last Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_reload p-2" title="Reload" style="width:50px; font-size:18px;">
                    <i class="fa fa-refresh"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="card table-card mt-2">
        <div class="card-header">
            <h5 class="webtitle">Purchase Request</h5>
            <div class="card-header-right">
                <ul class="list-unstyled card-option">
                    <li><i class="fa fa fa-wrench open-card-option"></i></li>
                    <li><i class="fa fa-window-maximize full-card"></i></li>
                    <li><i class="fa fa-minus minimize-card"></i></li>
                    <li><i class="fa fa-refresh reload-card"></i></li>
                    <li hidden><i class="fa fa-trash close-card"></i></li>
                </ul>
            </div>
        </div>
        <div class="card-block shadow">
            <!-- Row start -->
            <form id="Header_Form">
                <div class="row p-2">
                    <div class="col-md-12 col-lg-12 col-xl-12 ">
                        <div class="row  mt-1 mb-3">
                            <div class="col-md-3">
                                <label class="switch">
                                    <input type="checkbox" value="Y" checked name="IsActive" id="IsActive" class="toggleSwitch form-control form-control-sm">
                                    <span class="slider"></span>
                                </label>
                            </div> 
                            <div class="col-md-7">
                              
                            </div>
                            <div class="col-md-2 text-center mt-1  mb-1">
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-secondary w-100  dropdown-toggle" id="CopyTo" type="button" data-toggle="dropdown" aria-expanded="false" disabled>
                                        Copy To
                                    </button>
                                    <div class="dropdown-menu w-100">
                                        <a  data-value="PR" class="dropdown-item CopyToDrop" href="@Url.Action("PurchaseQuotation","PurchaseQuotation")" >Purchase Quotation</a>
                                        <a data-value="PR" class="dropdown-item CopyToDrop" href="@Url.Action("PurchaseOrder","PurchaseOrder")">Purchase Order</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div class="row mt-1 mb-0 p-1  ">
                            <div class="col-md-12  col-lg-12 col-xl-12">
                                <div class="row">
                                    <input hidden name="PurReqId" id="PurReqId" value="" type="text" placeholder="PurReqId" class="form-control form-control-sm Form_Elem" />
                                    <input hidden name="Trans_type" id="Trans_type" value="P" type="text" placeholder="Trans_type" class="form-control form-control-sm Form_Elem" />
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="ReqtType">Role</label>
                                        <select style="border:10px solid red!important" id="ReqtType" name="ReqtType" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Type</option>
                                            <option value="U">User</option>
                                            <option value="E">Employee</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="ReqtId">Requester</label>
                                        <select id="ReqtId" name="ReqtId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Requester</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="ReqtId"> Name</label>
                                        <input readonly name="Reqtname" id="Reqtname" oninput="MaxLengthInp(this,100)" type="text" placeholder="Name" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="DeptId">Department</label>
                                        <select id="DeptId" name="DeptId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Department</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label class="" for="Notify">Notify</label>
                                        <br />
                                        <label class="switch">
                                            <input type="checkbox" value="N" name="Notify" id="Notify" class="toggleSwitch form-control ml-2 form-control-sm">
                                            <span class="slider"></span>
                                        </label>
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="EmailAddr">Email</label>
                                        <input name="EmailAddr" id="EmailAddr" readonly oninput="MaxLengthInp(this,100)" type="email" placeholder="Email" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="StateId">Place of Supply</label>
                                        <select id="StateId" name="StateId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Place of Supply</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="BrchId">Branch</label>
                                        <select id="BrchId" name="BrchId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Branch</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="BrchGSTINNo"> Branch  Reg.No</label>
                                        <input name="BrchGSTINNo" id="BrchGSTINNo" oninput="MaxLengthInp(this,20)" type="text" placeholder="Branch Reg No" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="FinyrId">Financial year</label>
                                        <select id="FinyrId" name="FinyrId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Manual</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="FinyrNum">No</label>
                                        <input name="FinyrNum" id="FinyrNum" readonly oninput="MaxLengthInp(this,100)" type="number" placeholder="No" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="Status">Status</label>
                                        <select readonly disabled id="Status" name="Status" class="form-control form-control-sm  Form_Elem">
                                            <option value="O">Open</option>
                                            <option value="C">Close</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="PostingDt">Posting Date</label>
                                        <input name="PostingDt" id="PostingDt" type="date" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="ValidUntilDt">Valid Until</label>
                                        <input name="ValidUntilDt" id="ValidUntilDt" type="date" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="DocumentDt">Document Date</label>
                                        <input name="DocumentDt" id="DocumentDt" type="date" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="RequiredDt">Required Date</label>
                                        <input name="RequiredDt" id="RequiredDt" type="date" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="DocType">Item/ Service Type</label>
                                        <select id="DocType" name="DocType" class="form-control form-control-sm  Form_Elem">
                                            <option value="I">Items</option>
                                            <option value="S">Service</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="EmpId">Owner</label>
                                        <select name="EmpId" id="EmpId" class="form-control form-control-sm Form_Elem">
                                            <option value="">Select Owner</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6 mt-1 mb-1">
                                        <label for="Remark" oninput="MaxLengthInp(this,200)">Remark</label>
                                        <textarea name="Remarks" id="Remarks" class="form-control form-control-sm Form_Elem"></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 col-xl-12 mt-2 ">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs  tabs" role="tablist">
                        <li class="nav-item active">
                            <a class="nav-link" data-toggle="tab" id="Contents_Tab" href="#Contents" role="tab">Contents</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#Attachment" role="tab">Attachment</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#AllItems" role="tab">All Purchase Request List</a>
                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content tabs card-block">
                        <div class="tab-pane p-1 active " id="Contents" role="tabpanel">
                            <div id="Contents_mst_form" class="w-100 mt-2 p-2">
                                <div class="row border">
                                    <div class="col-md-12  p-2 ">
                                        <div class="row mt-0 mb-1">
                                            <div class="col-md-12 text-right">
                                                <button type="button" id="AddCpd" class="btn btn-sm btn-primary">Add Row</button>
                                            </div>
                                        </div>
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table1">
                                            </table>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="tab-pane p-3 m-0 mt-2" id="Attachment" role="tabpanel">
                            <div class="row  p-3  mt-2 border">
                                <div class="col-md-12 text-right table-responsive mt-3">
                                    <button type="button" id="Addrow" class="btn btn-primary btn-sm mb-2">Add New Row</button>
                                </div>
                                <div class="col-md-12  table-responsive mt-3" style="height:300px!important;">
                                    <table class="table border  table-striped   table-hover table-bordered w-100" id="AttachmentTable">
                                        <thead>
                                            <tr>
                                                <th class="p-2" nowrap>Sr.No</th>
                                                <th class="p-2" nowrap>Add/Update</th>
                                                <th class="p-2" nowrap>Remark</th>
                                                <th class="p-2" nowrap>File Name</th>
                                                <th class="p-2" nowrap>File Extention</th>
                                                <th class="p-2 d-none" nowrap>File Data</th>
                                                <th class="p-2 d-none" nowrap>PurRAttchDetId</th>
                                                <th class="p-2 d-none" nowrap>Flag</th>
                                                <th class="p-2 text-center" nowrap>View</th>
                                                <th class="p-2 text-center" nowrap>Delete</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane p-3 w-100" id="AllItems" role="tabpanel">
                            <div class="row p-3  mt-2 border">
                                <div class="table-responsive">
                                    <table class="table border  table-striped   table-hover table-bordered w-100" id="Table">
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="CreatedBy">Created By</label>
                                <input name="CreatedBy" id="CreatedBy" readonly type="text" value="@UserName" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="UpdatedBy">Updated By</label>
                                <input name="UpdatedBy" id="UpdatedBy" readonly type="text" value="@UserName" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="CreateDate">Create Date</label>
                                <input name="CreateDate" id="CreateDate" readonly type="text" value="@formattedDate" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="UpdateDate">Update Date</label>
                                <input name="UpdateDate" id="UpdateDate" readonly type="text" value="@formattedDate" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 mt-3">
                                <br>
                                <button type="button" id="Form_Update_btn" style="display:none; width:80px;" class="btn mt-1 mb-1 ml-1 mr-1 btn-sm text-white btn-info">Update</button>
                                <button type="button" id="Form_Save_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm mt-1 mb-1 btn-success">Save</button>
                                <button type="button" id="Form_Draft_btn" style=" width:80px; background-color:darkgrey" class="btn ml-1 mt-1 mb-1 mr-1 btn-sm text-white">Draft</button>
                                <button type="button" id="Form_Delete_btn" style="display:none; width:80px;" class="btn mt-1 mb-1 ml-1 mr-1 btn-sm btn-danger">Delete</button>
                                <button type="button" id="Form_Resume_btn" style=" width:80px; background-color:orange" class="btn ml-1 mt-1 mb-1 mr-1 btn-sm text-white">Resume</button>
                                <button type="reset" id="Form_reset_btn" style=" width:80px;" class="btn ml-1 mr-1 mt-1 mb-1 btn-sm btn-dark">Reset</button>
                            </div>
                            <div class="col-md-2 mt-3">
                                <label for="TotBefDis">Total Before Discount</label>
                                <input readonly name="TotBefDis" id="TotBefDis" type="number" value="0.00" placeholder="Total Before Discount" class="form-control form-control-sm Address_Form_Elem" />
                            </div>
                            <div class="col-md-2 mt-3">
                                <label for="Freight">Freight</label>
                                <div class="input-group">
                                    <button type="button" style="height:31px!important;" class="btn btn-sm btn-primary w-25 AddFreight "><i class="fa fa-plus"></i></button>
                                    <input readonly style="height:31px!important; width:60%!important;" value="0.00" name="Freight" id="Freight" oninput="MaxLengthInp(this,10)" type="text" placeholder="Freight" class="form-control  form-control-sm Form_Elem" />
                                </div>
                            </div>
                            <div class="col-md-2 mt-3">
                                <label for="Tax">Tax</label>
                                <input readonly name="Tax" id="Tax" type="number" value="0.00" placeholder="Tax" class="form-control form-control-sm Address_Form_Elem" />
                            </div>
                            <div class="col-md-2 mt-3">
                                <label for="TotPayDue">Total Payment Due</label>
                                <input readonly name="TotPayDue" id="TotPayDue" type="number" value="0.00" placeholder="Total Payment Due" class="form-control form-control-sm Address_Form_Elem" />
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <!-- Row end -->
    </div>
</div>
<!-- Image Modal-->
<div class="modal" id="DocumentViewer">
    <div class="modal-content" style="height: 90vh; margin-top: 5vh;">
        <div class="card-header bg-white border-0">
            <a class="downloadLink " style="display: none;"><button type="button" class="btn  btn-primary p-1">Download Document</button> </a>
            <span class="close closeModal" id="">&times;</span>
        </div>
        <div class="card-body viewerbody border p-2 text-center" style="overflow-y:scroll!important;overflow-x:scroll">
            <div class="table-responsive pdfdocument-viewer w-100">
            </div>
            <div class=" image-container document-viewer document-viewer"></div>
        </div>
    </div>
</div>
<!--Freight Modal -->
<div class="modal" id="myModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Freight Charges</h5>
            <span class="close closeModalInstallments" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="card-body border">
                <div class="table-responsive" style="height:500px;">
                    <table class="table border  table-striped   table-hover table-bordered w-100" id="Freighttbl">
                        <thead>
                            <tr>
                                <th class=" p-2 text-center" nowrap>Line No</th>
                                <th class=" p-2 text-center d-none" nowrap>PurRFretId</th>
                                <th class=" p-2 text-center" nowrap>Freight Name</th>
                                <th class=" p-2 text-center" nowrap>Remarks</th>
                                <th class=" p-2 text-center" nowrap>TaxCode</th>
                                <th class=" p-2 text-right" nowrap>Total Tax Amount</th>
                                <th class=" p-2 text-right" nowrap>Net Amount</th>
                                <th class=" p-2 text-center" nowrap>Status</th>
                                <th class=" p-2 text-center" nowrap>Project</th>
                                <th class=" p-2 text-right" nowrap>Gross Amount</th>
                                <th class=" p-2 text-right d-none" nowrap>FretId</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="row mb-3">
                    <div class="col-md-12">
                        <button type="button" id="Ok_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-success">Ok</button>
                        <button type="button" id="FreigthCancebtn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-danger">Cancel</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<!--Draft Modal -->
<div class="modal" id="DraftModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Draft Records</h5>
            <span class="close closeModalInstallments" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="card-body border">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table3">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!--View Tax Info  Modal -->
<div class="modal" id="TAXMODAL">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Tax Charges</h5>
            <span class="close closeModalInstallments" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="card-body border">
                <div class="table-responsive" style="height:500px;">
                    <table class="table border table-striped table-hover table-bordered w-100" id="FreightTAXtbl">
                        <thead>
                            <tr>
                                <th class="p-2 text-center d-none" nowrap>PurRTaxId</th>
                                <th class="p-2 text-center PurReqId d-none" nowrap>PurReqId</th>
                                <th class="p-2 text-center LineNum d-none" nowrap>Line nun</th>
                                <th class="p-2 text-center d-none" nowrap>Tax_type</th>
                                <th class="p-2 text-center d-none" nowrap>TaxCodeId</th>
                                <th class="p-2 text-center " nowrap>Tax Code</th>
                                <th class="p-2 text-center" nowrap>Tax Type Code</th>
                                <th class="p-2 text-center " nowrap>Tax Formula</th>
                                <th class="p-2 text-center d-none" nowrap>TaxTypeId</th>
                                <th class="p-2 text-right" nowrap> Type Per</th>
                                <th class="p-2 text-right " nowrap>Tax Sum</th>
                                <th class="p-2 text-right d-none" nowrap>Tax Cal Rate</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        function Loader() {
            $(".Loader1").toggleClass('d-none');
        }
         //SET Default Date
         {
            var DraftFlag = "";
            DefaultDate();
             function DefaultDate(){
                var date = new Date();
                var formattedDate = date.toISOString().split('T')[0];
                $("#PostingDt").val(formattedDate);
                $("#DocumentDt").val(formattedDate);
             }
          
         }
        //Add Attchmement and View Row
        {
            $('#Form_Resume_btn').click(function () {
                $('#DraftModal').modal('show');
            });
            $('.close').click(function () {
                $('#DraftModal').modal('hide');
            });
            //Region Attachment
            $("#Addrow").click(function () {
                var Index = $("#AttachmentTable tbody tr").length;
                var list = "<tr>";
                list += "<td>" + parseInt(Index + 1) + "</td>"; // Add the index to the first column
                list += "<td class='p-0' nowrap><input class='p-1 form-control form-control-sm selectfile' type='file' placeholder='Choose File'/></td>";
                list += "<td class='p-0 align-items-center Remark' nowrap><textarea style='height:34px!important;' class='form-control form-control-sm'></textarea></td>";
                list += "<td class=' align-items-center filename' nowrap></td>";
                list += "<td class=' align-items-center fileExt' nowrap></td>";
                list += "<td class=' align-items-center d-none fileData' nowrap></td>";
                list += "<td class=' align-items-center d-none attachId' nowrap></td>";
                list += "<td class='text-center p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 ViewAttchment btn-sm btn-primary'>View</button></td>";
                list += "<td class='text-center p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 DeleteAttchment btn-sm btn-danger'>Delete</button></td>";
                list += "</tr>";
                $("#AttachmentTable tbody").append(list);
            });
            $(document).on("change", ".selectfile", function () {
                var tableRow = $(this).closest('tr');
                var fileInput = $(this)[0];
                if (fileInput.files.length > 0) {
                    var file = fileInput.files[0];
                    var fileName = file.name;
                    var fileExt = fileName.split('.').pop().toLowerCase();
                    tableRow.find(".filename").text(fileName); // Display file name
                    tableRow.find(".fileExt").text(fileExt);
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var fileData = e.target.result;
                        tableRow.find(".fileData").text(fileData); // Display file data or handle it as needed
                    };
                    if (fileExt === 'xls' || fileExt === 'xlsx' || fileExt === 'csv') {
                        reader.readAsBinaryString(file);
                    } else {
                        reader.readAsDataURL(file);
                    }
                }
            });
            $(document).on("click", ".ViewAttchment", function () {
                var tableRow = $(this).closest('tr');
                var fileData = tableRow.find(".fileData").text();
                var fileExt = tableRow.find(".fileExt").text();
                var filename = tableRow.find(".filename").text();
                $('.document-viewer').html("");
                $('.pdfdocument-viewer').html("");
                if (fileExt === 'xls' || fileExt === 'xlsx') {
                    var workbook = XLSX.read(fileData, { type: 'binary' });
                    var sheetName = workbook.SheetNames[0];
                    var excelData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], { header: 1 });
                    var tableHtml = '<table class="table table-bordered table-striped   table-hover table-bordered w-100" border="1px">';
                    for (var i = 0; i < excelData.length; i++) {
                        tableHtml += '<tr>';
                        for (var j = 0; j < excelData[i].length; j++) {
                            var cellValue = excelData[i][j];
                            var colspan = 1;
                            while (j + colspan < excelData[i].length && excelData[i][j + colspan] === cellValue) {
                                colspan++;
                            }
                            if (colspan > 1) {
                                tableHtml += '<td colspan="' + colspan + '">' + cellValue + '</td>';
                                j += colspan - 1;
                            } else {
                                tableHtml += '<td>' + cellValue + '</td>';
                            }
                        }

                        tableHtml += '</tr>';
                    }
                    tableHtml += '</table>';
                    $(".document-viewer").html(tableHtml);
                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (fileExt === 'csv') {
                    // Render CSV file as HTML table
                    var csvData = Papa.parse(fileData, { header: true, skipEmptyLines: true });
                    var tableHtml = '<table class="table table-bordered table-striped   table-hover table-bordered w-100">';
                    csvData.data.forEach(function (row) {
                        tableHtml += '<tr>';
                        for (var key in row) {
                            tableHtml += '<td>' + row[key] + '</td>';
                        }
                        tableHtml += '</tr>';
                    });
                    tableHtml += '</table>';

                    $(".document-viewer").html(tableHtml);

                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:text/csv;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (fileExt === 'pdf') {
                    renderPdf(fileData);
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:application/pdf;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (['jpg', 'jpeg', 'png', 'gif'].includes(fileExt)) {
                    var imageHtml = '<img src="' + fileData + '" />';
                    $(".document-viewer").html(imageHtml);
                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', fileData);
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                }
                else {
                    //  $(".document-viewer").text('Unsupported document type.');
                    // $('.downloadLink').hide();
                }
                $("#DocumentViewer").fadeIn();
            });
            function renderPdf(pdfData) {
                if (pdfData) {
                    const objectElement = $('<object>');
                    objectElement.attr('data', pdfData);
                    objectElement.attr('type', 'application/pdf');
                    objectElement.css('width', '100%');
                    objectElement.css('height', '700px');
                    $('.pdfdocument-viewer').html(objectElement);
                } else {
                    $('.pdfdocument-viewer').text('No Data Found!');
                }
            }
        }
        //Get Dropdown
        {
            var ItemData = [];
            var TaxData1 = [];
            var WarehouseData = [];
            var VendorData = [];
            var UOMCODEData = [];
            var SERVICECODEData = [];
            var Branchdata = [];
            var CurrencyData = [];
            var ItemDropdown, ItemNameDropdown,ServiceDropdown, VendorDropdown, TaxDataDropdown, TaxDataDropdown, UOMDropdown, CurrencyDropdown, WarehouseDropdown, BranchDropdown;
            //Get Item
            $.ajax({
                url: '@Url.Action("ITEM", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        ItemData = response;
                        ItemDropdown = `<select data-value="A" style='width:200px' class="form-control ItemId select21 form-control-sm Form_Elem">
                                                    <option value="">Select Item</option> ${ItemData.map(item => `<option value="${item.ItemId}">${item.ItemCode}</option>`).join('')}</select>`;
                        ItemNameDropdown = `<select data-value="A" style='width:200px' class="form-control ItemName select21 form-control-sm Form_Elem">
                                                        <option value="">Select Item</option> ${ItemData.map(item => `<option value="${item.ItemId}">${item.ItemName}</option>`).join('')}</select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //TAXCODE
            $.ajax({
                url: '@Url.Action("TAXCODE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        TaxData1 = response;
                        TaxDataDropdown = `<select style='width:140px' class="form-control  TaxCodeId form-control-sm Form_Elem">
                                                            <option value="">Select Tax</option> ${TaxData1.map(item => `<option value="${item.TaxCodeId}">${item.TaxCode}</option>`).join('')}</select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //GET Vendor
            $.ajax({
                url: '@Url.Action("VENDOR", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        VendorData = response;
                        VendorDropdown = `<select style='width:140px' class="form-control BPId select21 form-control-sm Form_Elem">
                                                            <option value="">Select Vendor</option>  ${VendorData.map(item => `<option value="${item.BPId}">${item.BPName}</option>`).join('')} </select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //GET WAREHOUSE
            $.ajax({
                url: '@Url.Action("WAREHOUSE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    WarehouseData = response;
                    WarehouseDropdown = `<select style='width:160px' class="form-control  WhsId form-control-sm Form_Elem">
                                                                                        <option value="">Select Warehouse</option> ${WarehouseData.map(item => `<option value="${item.WhsId}">${item.WhsName}</option>`).join('')} </select>`;
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //Get UOMCODE
            $.ajax({
                url: '@Url.Action("UOMCODE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        UOMCODEData = response;
                        UOMDropdown = `<select style='width:140px' class="form-control  select21 UomId form-control-sm Form_Elem">
                                                            <option value="">Select UOM</option> ${UOMCODEData.map(item => `<option value="${item.UomId}">${item.UomCode}</option>`).join('')} </select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //Get country
            $.ajax({
                url: '@Url.Action("COUNTRY", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        CurrencyData = response;
                        CurrencyDropdown = `<select style='width:140px' class="form-control select21 CntryId form-control-sm Form_Elem">
                                                 <option value="">Select Currency</option> ${CurrencyData.map(item => `<option value="${item.CntryId}">${item.CntryCurrCode}</option>`).join('')} </select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //SAC CODE
            $.ajax({
                url: '@Url.Action("SAC", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        SERVICECODEData = response;
                        ServiceDropdown = `<select style='width:200px' class="form-control ServiceId select21 form-control-sm Form_Elem">
                                                        <option value="">Select Service</option>${SERVICECODEData.map(item => `<option value="${item.ServiceId}">${item.ServiceName}</option>`).join('')} </select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // Get STATE
            $.ajax({
                url: '@Url.Action("STATE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Place of Supply</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].StateId + "'>" + response[i].StateCode + "-" + response[i].StateName + "</option>";
                        }
                        $("#StateId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // get finacial year
            var FyData;
            $.ajax({
                url: '@Url.Action("FINACIALY", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        FyData = response;
                        let list = "<option value=''>Select Financial Year</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].FinyrId + "'>" + response[i].Finyr + "</option>";
                        }
                        $("#FinyrId").html(list);

                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // Event FinyrId Change
            $("#FinyrId").change(function () {
                var Id = $(this).val();
                if(Id ==""){
                    $("#FinyrNum").prop('readonly', true).val("");
                    return false;
                }
                for (var i = 0; i < FyData.length; i++) {
                    if (Id == FyData[i].FinyrId) {
                        if (FyData[i].Finyr.trim() == "Manual") {
                            $("#FinyrNum").prop('readonly', false).val(FyData[i].FinyrStNum);
                        } else {
                            $("#FinyrNum").prop('readonly', true).val(FyData[i].FinyrStNum);
                        }
                        return; // Exit the loop once a match is found
                    }
                }
            });
            // GET Branch

            $.ajax({
                url: '@Url.Action("GET", "BranchMaster")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    Branchdata = response;
                    let list = "<option value=''>Select Branch</option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].BrchId + "'>" + response[i].BrchName + "</option>";
                    }
                    BranchDropdown = `<select style='width:140px' class="form-control  ItemBrchId form-control-sm Form_Elem">
                                                                                                <option value="">Select Branch</option> ${Branchdata.map(item => `<option value="${item.BrchId}">${item.BrchName}</option>`).join('')} </select>`;
                    $("#BrchId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            $("#BrchId").change(function () {
                var ID = $(this).val();
                var requester = Branchdata.find(item => item.BrchId == ID);
                if (requester) {
                    $("#BrchGSTINNo").val(requester.BrchGSTINNo);
                } else {
                    $("#BrchGSTINNo").val("");
                }
            })

            // Get  Owner
            $.ajax({
                url: '@Url.Action("EMPLOYEE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select Owner </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].EmpId + "'>" + response[i].EmpFname + "   " + response[i].EmpLname + "</option>";

                    }
                    $("#EmpId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            // Get  Location
            $.ajax({
                url: '@Url.Action("LOCATION", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select Location </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].LocId + "'>" + response[i].LocName + "</option>";

                    }
                    $("#LocId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            //Get Department
            $.ajax({
                url: '@Url.Action("DEPARTMENT", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select Department </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].DeptId + "'>" + response[i].DeptName + "</option>";
                    }
                    $("#DeptId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });


        }
        // function to infoprice change event
        {

            function bindBCPrice(valueBCPrice) {
                $("#Table1").on("input", ".InfoPrice", function () {
                    var value = $(this).val();
                    var row = $(this).closest('tr'); // Get the current row
                    var AcPrice = row.find('.Tbl_ActualPrice').text();

                    if (value == valueBCPrice) {
                        row.find('.Tbl_PriceUpd').text("A");
                    } else {
                        row.find('.Tbl_PriceUpd').text("M");
                    }

                    if (value == AcPrice) {
                        row.find('.Tbl_PriceUpd').text("A");
                    } else {
                        row.find('.Tbl_PriceUpd').text("M");
                    }
                });
            }
        }
        //Region Add Details
        {
            $("#AddCpd").click(function () {
                var row = "";
                var tablelength = $("#Table1 tbody tr").length;
                if(tablelength >0){
                    var Lastrow = $("#Table1 tbody tr:last"),
                        BPId = $(".Tbl_BPId select").val(),
                        DocType = $("#DocType").val(),
                        Requester = $("#ReqtId").val(),
                        PlaseOfSupply = $("#StateId").val(),
                        RequiredDt = $("#RequiredDt").val(),
                        Closet = Lastrow.closest("tr"),
                        ItemId = Closet.find(".Tbl_ItemId select").val(),
                        ServiceId = Closet.find(".Tbl_ServiceId select").val(),
                        WhsId = Closet.find(".Tbl_WhsId select").val(),
                        ItemBrchId = Closet.find(".Tbl_ItemBrchId select").val(),
                        Location = Closet.find(".Tbl_LocName").text();

                    if (Requester === "") {
                        Swal.fire("Please Select Requester..!", "", "warning");
                        $("#BPId").addClass("border-danger");
                        return false;
                    } else {
                        $("#BPId").removeClass("border-danger");
                    } 
                    if (PlaseOfSupply === "") {
                        Swal.fire("Please Select Please Of Supply..!", "", "warning");
                        $("#StateId").addClass("border-danger");
                        return false;
                    } else {
                        $("#StateId").removeClass("border-danger");
                    } 
                    if (RequiredDt === "") {
                        Swal.fire("Please Select Required Date", "", "warning");
                        $("#RequiredDt").addClass("border-danger");
                        return false;
                    } else {
                        $("#RequiredDt").removeClass("border-danger");
                    }
                    var ItemHide="";
                    var ServeiceHide="";
                    if(DocType=="S"){
                        ItemHide="d-none"
                        ServeiceHide=""
                        if (ServiceId === "" || ServiceId === "0") {
                            Swal.fire("Please Add Service Details In Last Row", "", "warning");
                            return false;
                        }
                    }else{
                            ItemHide = "";
                            ServeiceHide = "d-none";
                        if (ItemId === "") {
                            Swal.fire("Please Add Record In Last Row", "", "warning");
                            return false;
                        }
                        if (WhsId === "") {
                            Swal.fire("Please Add Warehouse In Last Row", "", "warning");
                            Closet.find(".Tbl_WhsId select").addClass("border-danger");
                            return false;
                        } else {
                            Closet.find(".Tbl_WhsId select").removeClass("border-danger");
                        }
                    }

                    row += "<tr>";
                    row += "<td>" + parseInt(tablelength + 1) + "</td>";
                    row += `<td><i class="fa fa-edit CPDtable_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  CPDtable_delete"></i></td>`;
                    row += `<td class='text-center Tbl_BarCode ${ItemHide}'>0</td>`;
                    row += "<td class=' d-none text-center Tbl_LineNum'></td>";
                    row += "<td class=' d-none text-center tbl_Main_ID'></td>";
                    row += "<td class=' d-none text-center Tbl_PurReqId'>" + $("#PurReqId").val() + "</td>";
                    row += `<td class='text-center Tbl_ItemId ${ItemHide}'></td>`;
                    row += `<td class='text-center Tbl_ItemName ${ItemHide}'></td>`;
                    row += `<td class='text-center Tbl_ServiceId ${ServeiceHide}'></td>`;
                    row += `<td class='text-center Tbl_BPId'>${BPId}</td>`;
                    row += `<td class='text-center Tbl_ItemReqdDt'>${RequiredDt}</td>`;
                    row += `<td class='text-center Tbl_Qty ${ItemHide}'> 0</td>`;
                    row += `<td class='text-center Tbl_TaxCodeId'></td>`;
                    row += `<td class='text-center Tbl_InfoPrice '>0.00</td>`;
                    row += `<td class='text-center Tbl_DisPer'> 0</td>`;
                    row += `<td class='text-center Tbl_TaxAmmount'>0.00</td>`;
                    row += `<td class='text-center Tbl_TotalLC'>0.00</td>`;
                    row += `<td class='text-center Tbl_UomId  ${ItemHide} text-center'></td>`;
                    row += `<td class='text-center Tbl_CntryId  ${ItemHide} text-center'></td>`;
                    row += `<td class='text-center Tbl_WhsId ${ItemHide} text-center'>${WhsId}</td>`;
                    row += `<td class='text-center Tbl_ItemBrchId ${ItemHide} text-center'>${ItemBrchId}</td>`;
                    row += `<td class='text-center Tbl_LocName'>${Location}</td>`;
                    row += `<td class='text-center Tbl_GLAcctName'></td>`;
                    row += `<td class='text-right  Tbl_Hsn ${ItemHide}'></td>`;
                    row += "<td class='text-center Tbl_BaseDocLineNum'></td>";
                    row += "<td class='text-center Tbl_BaseDocEntry'></td>";
                    row += "<td class='text-center Tbl_BaseDocType'></td>";
                    row += `<td class='text-right Tbl_OpenQty'>0</td>`;
                    row += `<td class='text-right Tbl_RowStatus'>O</td>`;
                    row += `<td class='text-center Tbl_CreditMemoQty'>0</td>`;
                    row += `<td class='text-center Tbl_ActualPrice'></td>`;
                    row += `<td class='text-center Tbl_PriceUpd'>A</td>`;
                    row += "</tr>";
                    var dataTable = $('#Table1').DataTable();
                    var newRow = $(row).appendTo('#Table1 tbody');
                    dataTable.row.add(newRow).draw(false);
                    $('.select21').css({ width: "width:120px", backgroundColor: "white" }).select2();
                }
            })
        }
        //Event Input
        {
            // Barcode Change BarCodeInp
            $(document).on("change", ".BarCodeInp", function () {
                var BarcodeEANType = "12";
                var currentval = $(this).val();
                var $this = $(this)
                var $row = $(this).closest("tr");
                var BarCode = CreateBarcode(currentval, BarcodeEANType)
                $(this).val(BarCode);
                $.ajax({
                    url: '@Url.Action("GETBARCODEID", "GetDropdownData")',
                    type: 'GET',
                    data: { "Barcode": BarCode },
                    dataType: 'json',
                    success: function (response) {
                        if (response.length > 0) {
                            $row.find('.Tbl_ItemName select').val(response[0].ItemId).trigger("change");
                            updateInfoPrice($row, response[0].ItemId);
                        } else {
                            swal.fire("Item Not Found", "Please Check Barcode...!", "warning");
                            $this.val("");
                            $row.find('.Tbl_ItemName select').val("").trigger("change");
                            $row.find('.Tbl_ItemCode select').val("").trigger("change");
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            })
            function CreateBarcode(IncrementCount, EANType1) {
                const EANType = parseInt(EANType1);
                let Barcode = "";
                let IncrementCountlength = IncrementCount.length;
                var Val1 = EANType - IncrementCountlength;
                for (i = 0; i < Val1; i++) {
                    Barcode += "0";
                }
                Barcode += IncrementCount;
                if (Barcode.length == EANType) {
                    return Barcode;
                } else {
                    notify("PLese Check Out Your Prifix Values Or Initial Count ", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    return false;
                }
            }
            // Item Name Change
            $(document).on("change", ".ItemName", function () {
                var $row = $(this).closest("tr");
                var itemId = $(this).val();
                var data = $(this).data('value');
                if (data == "A") {
                    $row.find('.Tbl_ItemId select').data("value", "M"); // Update data attribute value
                    $row.find('.Tbl_ItemId select').val(itemId).trigger("change");
                    LoadWhs(itemId, $row)
                    ItemChange($row, itemId)
                    GetBarcode(itemId, $row)
                    updateInfoPrice($row, itemId)
                }
                $(this).data("value", "A"); // Update data attribute value for ItemName
            });
            // Item Id Change
            $(document).on("change", ".ItemId", function () {
                var $row = $(this).closest("tr");
                var itemId = $(this).val();
                var data = $(this).data('value');
                if (data == "A") {
                    $row.find('.Tbl_ItemName select').data("value", "M"); // Update data attribute value
                    $row.find('.Tbl_ItemName select').val(itemId).trigger("change");
                    ItemChange($row, itemId);
                    LoadWhs(itemId, $row)
                    GetBarcode(itemId, $row)
                    updateInfoPrice($row, itemId)
                }
                $(this).data("value", "A"); // Update data attribute value for ItemId
            });
            function updateInfoPrice($row, itemId) {
                // Find the item in ItemData array
                var item = ItemData.find(item => item.ItemId == itemId);
                if (item) {
                    var priceListId = item.PListId;
                    $.ajax({
                        url: '@Url.Action("GETPRICE", "PurchaseRequest")',
                        type: 'GET',
                        data: { Itemid: itemId, Pricelistid: priceListId },
                        dataType: 'json',
                        success: function (response) {
                            var basePrice = response.length > 0 ? parseFloat(response[0].Price).toFixed(2) : "0.00";
                            $row.find('.Tbl_InfoPrice input').val(basePrice);
                            $row.find('.Tbl_ActualPrice').text(basePrice);
                            Calculation($row);
                        },
                        error: function (xhr, status, error) {
                            console.log("AJAX Error:", status, error);
                            handleError(xhr.responseText);
                        }
                    });
                }
            }
            //Item Id Change
            function ItemChange($row, itemId) {
              
                $row.find('.Tbl_UomId select').val("").trigger("change");
                $row.find('.Tbl_CntryId select').val("").trigger("change");
                $row.find('.Tbl_TaxCodeId select').val("").trigger("change");
                $row.find('.Tbl_InfoPrice input').val(0.00);
                $row.find('.Tbl_Hsn').text("");
                $row.find('.Tbl_Qty input').val(1);
                $row.find('.Tbl_BarCode').val("");
                // Find the item in ItemData array
                var item = ItemData.find(item => item.ItemId == itemId);
                if (item) {
                    // Populate and select the UOM
                    $.ajax({
                        url: '@Url.Action("UOMCODES", "GetDropdownData")',
                        type: 'GET',
                        dataType: 'json',
                        data: { "ItemId": itemId },
                        success: function (response) {
                            console.log(response);
                            var Tablelength = $("#Table1 tbody tr").length;
                            var Selectedvalue = Tablelength >= 2 ? $("#Table1 tbody tr").eq(0).find(".Tbl_UomId select").val() : "";

                            var Options = `<option value="">Select UOM</option>
                                       ${response.map(uom => `<option value="${uom.UomId}" ${uom.UomId == Selectedvalue ? 'selected' : ''}>${uom.UomName}</option>`).join('')}`;
                            $row.find(".Tbl_UomId select").html(Options).val(item.PurUOM);
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                    $row.find('.Tbl_UomId select').val(item.PurUOM).trigger("change");
                    $row.find('.Tbl_CntryId select').val(item.CntryId).trigger("change");
                    $row.find('.Tbl_Hsn').text(item.HSNNo);
                    // $row.find('.Tbl_Weight').text(item.SalsWeight || 0);
                    $row.find('.Tbl_Qty input').val(1);
                    var barcodeId = item.BarCodeId;
                    if (barcodeId) {
                        $.ajax({
                            url: '@Url.Action("GETBARCODE","PurchaseRequest")',
                            type: 'GET',
                            data: { BarCodeId: barcodeId },
                            dataType: 'json',
                            success: function (response) {
                                if (response.length > 0) {
                                    $row.find('.Tbl_BarCode input').val(response[0].BarCode);
                                }
                            },
                            error: function (error) {
                                handleError(error);
                            }
                        });
                    } else {
                        $row.find('.Tbl_BarCode input').val("");
                    }
                    var priceListId = item.PListId;
                    $.ajax({
                        url: '@Url.Action("GETPRICE", "PurchaseRequest")',
                        type: 'GET',
                        data: { Itemid: itemId, Pricelistid: priceListId },
                        dataType: 'json',
                        success: function (response) {
                            var basePrice = response.length > 0 ? parseFloat(response[0].Price).toFixed(2) : "0.00";
                            $row.find('.Tbl_InfoPrice input').val(basePrice);
                            $row.find('.Tbl_ActualPrice').text(basePrice);
                            Calculation($row);
                        },
                        error: function (xhr, status, error) {
                            console.log("AJAX Error:", status, error);
                            handleError(xhr.responseText);
                        }
                    });

                }
            }
            function handleError(error) {
                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                console.error('Error:', error.responseText);
            }
            function GetBarcode(ItemId, $row) {
                $.ajax({
                    url: '@Url.Action("GETBARCODENAME", "GetDropdownData")',
                    type: 'GET',
                    dataType: 'json',
                    data: { "ItemId": ItemId },
                    success: function (response) {
                        if (response.length > 0) {
                            $row.find('.Tbl_BarCode input').val(response[0].BarCode);
                        } else {
                            $row.find('.Tbl_BarCode input').val("");
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            function LoadWhs(ItemId, $row) {
                $.ajax({
                    url: '@Url.Action("WAREHOUSEVIAITEM", "GetDropdownData")',
                    type: 'GET',
                    dataType: 'json',
                    data: { "ItemCode": ItemId },
                    success: function (response) {
                        var Tablelength = $("#Table1 tbody tr").length;
                        if (parseInt(Tablelength) >= 2) {
                            var Selectedvalue = $("#Table1 tbody tr").eq(0).find(".Tbl_WhsId select").val(); // Corrected selector
                            var Options = `<option value="">Select Warehouse</option>
                                 ${response.map(item => `<option value="${item.WhsId}" ${item.WhsId == Selectedvalue ? 'selected' : ''}>${item.WhsName}</option>`).join('')}`;
                            $row.find(".Tbl_WhsId select").html(Options);
                        } else {
                            var Options = `<option value="">Select Warehouse</option>
                           ${response.map(item => `<option value="${item.WhsId}">${item.WhsName}</option>`).join('')}`;
                            $row.find(".Tbl_WhsId select").html(Options);
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            //Warehouse Change
            $(document).on("change", ".WhsId", function () {
                var $row = $(this).closest("tr");
                var Id = $(this).val();
                if (Id == "" || Id == null || Id == undefined) {
                    $row.find('.Tbl_ItemBrchId select').val("").trigger("change");
                    $row.find('.Tbl_LocName').text("");
                    return false;
                }
                var data = WarehouseData.find(item => item.WhsId == Id);
                if (data) {
                    var BrchId = data.BrchId;
                    $row.find('.Tbl_ItemBrchId select').val(BrchId).trigger("change");
                    $.ajax({
                        url: '@Url.Action("LOCATIONNAME", "GetDropdownData")',
                        type: 'GET',
                        data: { BranchId: BrchId },
                        success: function (response) {
                            if (response && response.length > 0) {
                                var LocName = response[0].LocName;
                                $row.find('.Tbl_LocName').text(LocName);
                            } else {
                                $row.find('.Tbl_LocName').text(""); // Clear if no data returned
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching location name:', error);
                            $row.find('.Tbl_LocName').text(""); // Clear on error
                        }
                    });
                }
            });
            //calculated Input Change
            $(document).on("input", ".InfoPrice,.Qty", function () {
                var $row = $(this).closest("tr"); // Cache the jQuery object for the current row

                // Convert text values to numbers for comparison
                var OpenQty = parseFloat($row.find('.Tbl_OpenQty').text());
                var Qty = parseFloat($row.find('.Tbl_Qty input').val());
                var BaseDocType = $row.find('.Tbl_BaseDocType').text();
                if ($(this).val() < 1) {
                    $(this).val(1);
                    Swal.fire("<h5>Not Allowed To Enter Negative Values...!</h5>", '', 'warning');
                    Calculation($row);
                    return false;
                } else {
                    if (BaseDocType == "") {
                        Calculation($row);
                    } else {
                        if (Qty <= OpenQty && BaseDocType !== "") {
                            Calculation($row);
                        } else {
                            $row.find('.Tbl_Qty input').val(OpenQty)
                            Swal.fire("<h5>Quantity Should Be Less Than Or Equal To Base Document Item Open Quantity...!</h5>", "", "warning");
                        }
                    }
                }
            });
          
            $(document).on("input", ".DisPer", function () {
                var $row = $(this).closest("tr"); // Cache the jQuery object for the current row
                // Convert text values to numbers for comparison
                var OpenQty = parseFloat($row.find('.Tbl_OpenQty').text());
                var Qty = parseFloat($row.find('.Tbl_Qty input').val());
                var BaseDocType = $row.find('.Tbl_BaseDocType').text();
                if ($(this).val() < 0) {
                    $(this).val(0);
                    Swal.fire("<h5>Not Allowed To Enter Negative Values...!</h5>", '', 'warning');
                    Calculation($row);
                    return false;
                } else {
                    Calculation($row);
                }
            });
            $(document).on("change", ".TaxCodeId", function () {
                var $row = $(this).closest("tr");
                Calculation($row);
            });
            // Role Change
            var RequesterData = [];
            $("#ReqtType").change(function () {
                var Val = $("#ReqtType").val();
                if (Val == "") {
                    $("#EmailAddr").val("");
                    $("#DeptId").val("").trigger('change');
                    $("#Reqtname").val("");
                    return false;
                }
                if (Val == "U") {
                    $.ajax({
                        url: '@Url.Action("USERS","GetDropdownData")',
                        type: 'GET',
                        dataType: 'json',
                        success: function (response) {
                            RequesterData = response;
                            let list = "<option value=''>Select Requester </option>";
                            for (var i = 0; i < response.length; i++) {
                                list += "<option value='" + response[i].UserId + "'>" + response[i].UserFname + "   " + response[i].UserLname + "</option>";

                            }
                            $("#ReqtId").html(list);
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                } else {
                    $.ajax({
                        url: '@Url.Action("EMPLOYEE","GetDropdownData")',
                        type: 'GET',
                        dataType: 'json',
                        success: function (response) {
                            RequesterData = response;
                            let list = "<option value=''>Select Requester </option>";
                            for (var i = 0; i < response.length; i++) {
                                list += "<option value='" + response[i].EmpId + "'>" + response[i].EmpFname + "  " + response[i].EmpLname + "</option>";

                            }
                            $("#ReqtId").html(list);
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                }

            })
            function LoadRequester(ReqtId) {
                var Val = $("#ReqtType").val();
                if (Val == "") {
                    $("#EmailAddr").val("");
                    $("#DeptId").val("").trigger('change');
                    $("#Reqtname").val("");
                    return false;
                }
                if (Val == "U") {
                    $.ajax({
                        url: '@Url.Action("USERS","GetDropdownData")',
                        type: 'GET',
                        dataType: 'json',
                        success: function (response) {
                            RequesterData = response;
                            let list = "<option value=''>Select Requester </option>";
                            for (var i = 0; i < response.length; i++) {
                                list += "<option value='" + response[i].UserId + "'>" + response[i].UserFname + "   " + response[i].UserLname + "</option>";

                            }
                            $("#ReqtId").html(list);
                            $("#ReqtId").val(ReqtId).trigger("change");
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                } else {
                    $.ajax({
                        url: '@Url.Action("EMPLOYEE","GetDropdownData")',
                        type: 'GET',
                        dataType: 'json',
                        success: function (response) {
                            RequesterData = response;
                            let list = "<option value=''>Select Requester </option>";
                            for (var i = 0; i < response.length; i++) {
                                list += "<option value='" + response[i].EmpId + "'>" + response[i].EmpFname + "   " + response[i].EmpLname + "</option>";

                            }
                            $("#ReqtId").html(list);
                            $("#ReqtId").val(ReqtId).trigger("change");
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                }
            }
            $("#ReqtId").change(function () {
                var ID = $(this).val();
                var RoleId = $("#ReqtType").val();
                    $("#EmailAddr").val("");
                    $("#DeptId").val("").trigger('change');
                    $("#Reqtname").val("");
                    $("#StateId").val("").trigger('change');
                    if (RoleId == "U") {

                        var requester = RequesterData.find(item => item.UserId == ID);
                        if (requester) {
                            $("#Reqtname").val(requester.UserFname + " " + requester.UserLname);
                            $("#DeptId").val(requester.dept_id).trigger('change');
                            $("#EmailAddr").val(requester.UserEmail);
                            $("#StateId").val(requester.StateId).trigger('change');
                        }
                    } else {
                        var requester = RequesterData.find(item => item.EmpId == ID);
                        if (requester) {
                            $("#Reqtname").val(requester.EmpFname + " " + requester.EmpLname);
                            $("#DeptId").val(requester.DeptId).trigger('change');
                            $("#EmailAddr").val(requester.EmpEmail);
                            $("#StateId").val(requester.StateId).trigger('change');
                        }
                    }
            })
            // Bind event handler for RequiredDt input field
            $('#RequiredDt').on('change', function () {
                var dateValue = $(this).val();
                $('.ItemReqdDt').val(dateValue);
            });
            setDefaultStatus();
            $('#DocumentDt').on('change', function () {
                setDefaultStatus();
            });
            function setDefaultStatus() {
                var termDateValue = $('#DocumentDt').val();
                if (termDateValue === '') {
                    $('#ItemRowStatus').val('O');
                } else {
                    $('#ItemRowStatus').val('C');
                }
            }
            $("#DocType").click(function () {
                $(this).data("Flag", "Manual");
            })
            $('#DocType').change(function () {
                var parameter = $(this).data("Flag");
                if (parameter == "Manual") {
                    var selectedValue = $(this).val();
                    var TotPayDue = $("#TotPayDue").val();
                    if (TotPayDue <= 0) {
                        ApplyDetailstable([], "Table1")
                        return false;
                    } else {
                        if (selectedValue != "") {
                            Swal.fire({
                                title: 'Are you sure?',
                                text: 'You lost All Added Item Data In Table..!',
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonText: 'Continue',
                                confirmButtonColor: 'red',
                                cancelButtonText: 'Cancel'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    ApplyDetailstable([], "Table1")
                                } else if (result.dismiss === Swal.DismissReason.cancel) {
                                    Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                                    if (selectedValue == "S") {
                                        $('#DocType').val("I")
                                    } else {
                                        $('#DocType').val("S")
                                    }
                                }
                            });
                        }
                    }
                }
            });
        }
        // Item  Table Calculation
        {
            //Calculation Function
            function Calculation(Row) {

                var InfoPrice = parseFloat(Row.find('.Tbl_InfoPrice input').val()).toFixed(2) || 0;
                var DisPer = parseFloat(Row.find('.Tbl_DisPer input').val()).toFixed(2) || 0;
                var Qty = parseInt(Row.find('.Tbl_Qty input').val()) || 1;
                var TotalLC = parseFloat(Row.find('.Tbl_TotalLC input').val()).toFixed(2);
                var NetAmt = parseFloat(Row.find('.Tbl_NetAmt input').val()).toFixed(2);
                var Mrp = parseFloat(Row.find('.Tbl_MRP input').val()).toFixed(2);
                var TaxCodeId = Row.find('.Tbl_TaxCodeId select').val()
                var requester = TaxData1.find(item => item.TaxCodeId == TaxCodeId);
                var TaxRate, TaxAmount;
                if (requester) {
                    TaxRate = requester.TaxCalRate;
                }
                if (DisPer != 0) {
                    var DisAmt = (InfoPrice * (DisPer / 100));
                    if (DisAmt > 0) {
                        TotalLC = (InfoPrice - DisAmt) * Qty;
                        Row.find('.Tbl_TotalLC input').val(parseFloat(TotalLC).toFixed(2))
                    } else {
                        Row.find('.Tbl_TotalLC input').val(parseFloat(InfoPrice).toFixed(2))
                    }
                }
                else {
                    if (InfoPrice > 0) {
                        TotalLC = InfoPrice * Qty;
                        Row.find('.Tbl_TotalLC input').val(parseFloat(TotalLC).toFixed(2))
                    } else {
                        Row.find('.Tbl_TotalLC input').val(parseFloat(InfoPrice).toFixed(2))
                    }
                }

                if (TaxRate !== "" && TaxRate !== 0 && TaxRate !== undefined) {
                    TaxAmount = TotalLC * (TaxRate / 100);
                } else {
                    TaxAmount = 0;
                }
                Row.find('.Tbl_TaxAmmount input').val(parseFloat(TaxAmount).toFixed(2))
                HeaderCalculation()
            }
        }
        //Heder Calculation
        {
            // Calculate Heder Feilds
            function HeaderCalculation() {
                var rows = $("#Table1 tbody tr"); // Get all rows within the tbody
                var totalLC = 0, infoPrice = 0, taxAmt = 0;
                rows.each(function () {
                    var row = $(this); // Current row
                    totalLC += parseFloat(row.find(".Tbl_TotalLC input").val()) || 0;
                    infoPrice += parseFloat(row.find(".Tbl_InfoPrice input").val()) || 0;
                    taxAmt += parseFloat(row.find(".Tbl_TaxAmmount input").val()) || 0;
                });

                var TotalFreghttax = parseFloat($(".TotalFreghttax").text()) || 0;
                var TotalFreghtNet = parseFloat($(".TotalFreghtNet").text()) || 0;
                taxAmt+= TotalFreghttax;
                $("#Freight").val(TotalFreghtNet);
                $("#TotBefDis").val(totalLC.toFixed(2));
                $("#Tax").val(taxAmt.toFixed(2));
                $("#TotPayDue").val((totalLC + taxAmt + TotalFreghtNet).toFixed(2));
            }
        }
        //Region Select Row Data
        {
            $(document).on("click", ".table_edit", function () {
                var $row = $(this).closest("tr");
                $row.addClass("active");
                BindHederRecords($row, "N")
                DraftFlag="N";
            })
            $(document).on("click", ".table_edit1", function () {
                var $row = $(this).closest("tr");
                DraftFlag = "Y"
                BindHederRecords($row, "Y")
            }) 
            $(document).on("click", ".Duplicate", function () {
                var $row = $(this).closest("tr");
                DraftFlag = "D"
                BindHederRecords($row, "D")
            })

            function BindHederRecords(Row, Flag) {
                var $row = Row;
                var rowObject = {};
                $row.find('td').each(function (index) {
                    var $td = $(this);
                    var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                    if ($td.find('input').length) {
                        rowObject[key] = $td.find('input').val();
                    }
                    else if ($td.find('textarea').length) {
                        rowObject[key] = $td.find('textarea').val();
                    }
                    else if ($td.find('img').length) {
                        rowObject[key] = $td.find('img').attr("src");
                    } else if ($td.find('select').length) {
                        //  rowObject[key] = $td.find('select option:selected').text().trim();
                        //  rowObject['TaxCodeval'] = $td.closest('tr').find('.Taxc option:selected').val();
                        //  rowObject['UomEntryVal'] = $td.closest('tr').find('.Uomc1 option:selected').val();
                    } else {
                        rowObject[key] = $td.text().trim();
                    }
                });
                $("#Addrow").removeAttr("disabled");
                $(".OpBarcode").removeAttr("disabled");
                if (Flag == "N" && Flag != "D") {
                    $("#PurReqId").val(rowObject.PurReqId);
                    ShowBtn()
                    $("#ReqtType").val(rowObject.ReqtType).trigger("change");
                    $("#Remarks").val(rowObject.Remark);
                    LoadRequester(rowObject.ReqtId)
                    $("#CopyTo").prop("disabled",false);
                }else if (Flag == "D") {
                   $("#CopyTo").prop("disabled",true);
                }else{
                    $("#PurReqId").val("");
                    ShowBtn1();
                    $("#CopyTo").prop("disabled", true);
                }
                $("#FinyrNum").val(rowObject.Number);
                $("#BrchGSTINNo").val(rowObject.BranchRegNo);
                $("#Reqtname").val(rowObject.ItemManageBy);
                $("#FinyrId").val(rowObject.FinyrId).trigger("change");;
                $("#BrchId").val(rowObject.BrchId).trigger("change");
                $('#DocType').data("Flag", "Automatic");
                $("#DocType").val(rowObject.DocType).prop("disabled", true).trigger("change")

                LOADFREIGHT(rowObject.PurReqId)
                LoadDetails(rowObject.PurReqId)
                $("#Notify").val(rowObject.Notify);
                if (rowObject.Notify == "Y") {
                    $("#Notify").prop("checked", true);
                }
                if (rowObject.Notify == "N") {
                    $("#Notify").prop("checked", false);
                }
                let FormatedDate = formatAndSetDate(rowObject.PostingDate);
                $("#PostingDt").val(FormatedDate);
                FormatedDate = formatAndSetDate(rowObject.ValidUntilDate);
                $("#ValidUntilDt").val(FormatedDate);
                FormatedDate = formatAndSetDate(rowObject.RequiredDate);
                $("#RequiredDt").val(FormatedDate);
                FormatedDate = formatAndSetDate(rowObject.DocumentDate);
                $("#DocumentDt").val(FormatedDate);
                $("#CntryCode").val(rowObject.CountryCode);
                $("#StateId").val(rowObject.StateId).trigger("change");
                $("#Freight").val(rowObject.Freight);
                $("#Tax").val(rowObject.Tax);
                $("#TotPayDue").val(rowObject.TotalPaymentDue);
                $("#TotBefDis").val(rowObject.TotalBeforeDiscount);
                $("#Status").val(rowObject.Status).trigger("change");
                if (rowObject.Status == "O") {
                    $("#Status,#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", false);
                    $("#CopyTo").prop("disabled", false);
                } else {
                    $("#Status,#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", true);
                    $("#CopyTo").prop("disabled", true);
                }
                $("#EmpId").val(rowObject.EmpId).trigger("change");
                if (Flag == "Y") {
                    Delete(rowObject.PurReqId, "Off");
                    $('#DraftModal').modal('hide');
                }
               
                LoadAttachmentData(rowObject.PurReqId)
                $("#Contents_Tab").click();
            }
        }
        //Region Save And Update
        {
            $("#Form_Save_btn,#Form_Update_btn").click(function () {
                AddRecords("N")
            })
            $("#Form_Draft_btn").click(function () {
                AddRecords("Y")
            })
            function AddRecords(flag) {
                var TotPayDue = $("#TotPayDue").val();
                if (TotPayDue <= 0) {
                    Swal.fire("Please Add Items First..!", "", "warning");
                    return false;
                } 
                let isValid = true;
                let formData = {};
                $("#Header_Form input,select,textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).find('textarea').lenght) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = ["RefNo", "FinyrId", "Num", "DocType", "DeptId", "BPEmail", "PostingDt", "ValidUntilDt", "StateId", "DocumentDt", "RequiredDt"];
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {

                        formData[inputName] = inputValue;
                    }
                    formData["DraftFlag"] = flag;
                    if (DraftFlag == "D" || DraftFlag == "Y") {
                        formData["PurReqId"] = "";

                    }
                });
              
                //Call Api
                if (isValid && formData != "") {
                    $.ajax({
                        url: '@Url.Action("POSTUPDATE", "PurchaseRequest")',
                        type: 'POST',
                        dataType: 'json',
                        data: formData,
                        success: function (response) {
                            if (response !== "") {
                                AddDetails(response.lastId, DraftFlag)
                                AddAttachmentData("#AttachmentTable", response.lastId)
                                AddFreight("#Freighttbl", response.lastId)
                                notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                LoadTableData();
                                LoadDraftTableData()
                               $("#Form_reset_btn").click();
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
            }
        }
        //Region Delete
        {
            $("#Form_Delete_btn").click(function () {
                Delete($("#PurReqId").val());
            })
            $(document).on("click", ".table_delete", function () {
                var $row = $(this).closest("tr");
                var id = $row.find('td.tbl_Main_ID').text();
                Delete(id);
            })
            function Delete(ID, Flag) {
                if (Flag == "Off") {
                    $.ajax({
                        url: '@Url.Action("DELETEMAINDATA", "PurchaseRequest")',
                        type: 'POST',
                        dataType: 'json',
                        data: { Id: ID },
                        success: function (response) {
                            if (response.success) {
                                LoadDraftTableData()
                            } else {
                                notify("Error To Deleting Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'This Purchase  Request Is Permanetly Delete Form system..!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Delete',
                        confirmButtonColor: 'red',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '@Url.Action("DELETEMAINDATA", "PurchaseRequest")',
                                type: 'POST',
                                dataType: 'json',
                                data: { Id: ID },
                                success: function (response) {
                                    if (response.success) {
                                        LoadTableData();
                                        ResetForm()
                                        notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                        Swal.fire('Deleted!', 'Your Details Data has been deleted.', 'success');
                                    } else {
                                        notify("Error To Deleting Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                        }
                    });
                }

            }
            $(document).on("click", ".DeleteAttchment", function () {
                var tableRow = $(this).closest('tr');
                var Id = tableRow.find(".attachId").text();
                DELETEATTACHMENT(Id);
            })
            function DELETEATTACHMENT(ID) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This Attachment Details  Is Permanetly Delete Form system..!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("DELETEATTACHMENT", "PurchaseRequest")',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {
                                    LoadAttachmentData($("#PurReqId").val());
                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    Swal.fire('Deleted!', 'Your Attachment Data has been deleted.', 'success');
                                } else {
                                    notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });
            }
            $(document).on("click", ".CPDtable_delete", function () {
                var $row = $(this).closest("tr");
                var id = $row.find('td.tbl_Main_ID').text();
                var table = $('#Table1').DataTable();
                if (id == "" || id == null) {
                    var index = table.row($row).index();
                    table.row($row).remove().draw();
                    updateSequenceNumbers("#Table1", index);
                    HeaderCalculation()
                } else {
                    DeleteDetails(id);
                }
            })
            function updateSequenceNumbers(table, startIndex) {
                var $tbody = $(table + ' tbody');
                $tbody.find('tr').each(function (idx) {
                    var $currentRow = $(this);
                    if (idx >= startIndex) {
                        var newSequence = idx + 1;
                        $currentRow.find('td:first').text(newSequence);
                    }
                });
            }
            function DeleteDetails(ID) {
                 if($('#Status').val() !="O"){
                     swal.fire("Can't Delete Record ...!","Document Is Closed.","warning")
                     return false;
                 }
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This Purchase Request Details  Is Permanetly Delete Form system..!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DELETEDETAILS", "PurchaseRequest")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {
                                  //  LoadDetails($("#PurReqId").val(),"Y")
                                    updateSequenceNumbers("#Table1", index);
                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                } else {
                                    notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });
            }
        }
        //Function to handle form reset
        {
            $("#Form_reset_btn").click(function () {
                $(".Form_Elem").removeClass("border-danger");
                $("#Header_Form")[0].reset();
                $("#AttachmentTable tbody").html("");
                $("#Barcodetbl tbody").html("");
                $("#Freight, #Tax, #TotPayDue, #TotBefDis").val("0.00");
                $("#Status,#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", false);
                $("#DocType").prop("disabled",false);
                $("#Status").prop("disabled", true);
                 ApplyDetailstable([], "Table1")
                 HideBtn()
                 DefaultDate();
            });
            function ResetForm() {
                $(".Form_Elem").removeClass("border-danger");
                $("#Header_Form")[0].reset();
                $("#Freight, #Tax, #TotPayDue, #TotBefDis").val("0.00");
                $("#AttachmentTable tbody").html("");
                $("#Barcodetbl tbody").html("");
                $("#Form_reset_btn").click();
                $("#Form_Draft_btn").show();
                $("#Form_Resume_btn").show();
                $("#DocType").prop("disabled", false)
                $("#Status,#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", false);
                $("#CopyTo").prop("disabled", true);
                DefaultDate();
                LoadDefFreight()
                ApplyDetailstable([], "Table1")
            }
            function ShowBtn() {
                $("#Form_Delete_btn").hide();
                $("#Form_Update_btn").show();
                $("#Form_Save_btn").hide();
                $("#Form_Draft_btn").hide();
                $("#Form_Resume_btn").hide();
            }
            function ShowBtn1() {
                $("#Form_Delete_btn").show();
                $("#Form_Update_btn").hide();
                $("#Form_Save_btn").show();
                $("#Form_Resume_btn").hide();

            }
            function HideBtn() {
                $("#Form_Save_btn").show();
                $("#Form_Resume_btn").show();
                $("#Form_Draft_btn").show();
                $("#Form_Delete_btn").hide();
                $("#Form_Update_btn").hide();
            }
        }
        //region All functions
        {
            function AddAttachmentData(table, PurReqId) {
                var rowCount = $(table).find('tbody tr').length;
                if (rowCount <= 0) {
                    return false;
                }
                var AttachmentData = [];
                var headers = [];
                $(table).find('thead th').each(function () {
                    headers.push($(this).text().trim().toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()<>]/g, "").replace(/ /gi, ''));
                });
                $(table).find('tbody tr').each(function () {
                    var rowData = {};
                    $(this).find('td').each(function (index) {
                        if (headers[index] == "filedata") {
                            rowData["FileData"] = $(this).text().trim();
                        } else if (headers[index] == "filename") {
                            rowData["FileName"] = $(this).text().trim();
                        } else if (headers[index] == "purrattchdetid") {
                            rowData["PurRAttchDetId"] = $(this).text().trim();
                        } else if (headers[index] == "fileextention") {
                            rowData["FileExt"] = $(this).text().trim();
                        } else if (headers[index] == "remark") {
                            // Use .find('textarea').val() to get the value of textarea
                            rowData["Remark"] = $(this).find('textarea').val();
                        }
                    });
                    rowData["PurReqId"] = PurReqId;
                    AttachmentData.push(rowData);
                });
                $.ajax({
                    url: '@Url.Action("ADDITEMATTACHMENT", "PurchaseRequest")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(AttachmentData),
                    success: function (response) {
                        if (response.success) {
                            //  notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                            LoadAttachmentData($("#PurReqId").val());
                            return true;

                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });

                return AttachmentData;
            }
            function LoadAttachmentData(Id) {
                $.ajax({
                    url: '@Url.Action("GETATACHMENT", "PurchaseRequest")',
                    type: 'GET',
                    dataType: 'json',
                    data: { Id: Id },
                    success: function (response) {
                        $("#AttachmentTable tbody").html("");
                        if (response.length > 0) {
                            var index = 1;
                            for (var i = 0; i < response.length; i++) {
                                var list = "<tr>";
                                list += "<td class='text-center'>" + index + "</td>"; // Add the index to the first column
                                list += "<td class='p-0' nowrap><input class='p-1 form-control form-control-sm selectfile' type='file' placeholder='Choose File'/></td>";
                                list += "<td class='p-0 align-items-center Remark' nowrap><textarea style='height:34px!important;' class='form-control form-control-sm'>" + (response[i].Remark == null ? " " : response[i].Remark) + "</textarea></td>";
                                list += "<td class=' align-items-center filename' nowrap>" + response[i].FileName + "</td>";
                                list += "<td class=' align-items-center fileExt' nowrap>" + response[i].FileExt + "</td>";
                                list += "<td class=' align-items-center d-none fileData' nowrap>" + response[i].FileData + "</td>";
                                list += "<td class=' align-items-center d-none attachId' nowrap>" + response[i].PurRAttchDetId + "</td>";
                                list += "<td class=' align-items-center d-none flag' nowrap>N</td>";
                                list += "<td class='text-center p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 ViewAttchment btn-sm btn-primary'>View</button></td>";
                                list += "<td class='text-center p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 DeleteAttchment btn-sm btn-danger'>Delete</button></td>";
                                list += "</tr>";
                                $("#AttachmentTable tbody").append(list);
                                index++;
                            }
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            }
            LoadTableData();
            LoadDraftTableData();
            function LoadTableData() {
                Loader()
                $.ajax({
                    url: '@Url.Action("GET", "PurchaseRequest")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        Loader()
                        ApplyDatatable(response, "Table")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            function LoadDraftTableData() {
                Loader()
                $.ajax({
                    url: '@Url.Action("GETDRAFT", "PurchaseRequest")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        Loader()
                        ApplyDatatable(response, "Table3")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            //format date
            function formatAndSetDate(inputDate) {
                const parts = inputDate.split(' ');
                const datePart = parts[0];
                const timePart = parts[1];
                const [day, month, year] = datePart.split('-');
                const formattedDate = `${year}-${month}-${day}`;
                const formattedDateTime = `${formattedDate} ${timePart}`;
                return formattedDate;
            }
            function SplitDatebyspace(inputDate) {
                const parts = inputDate.split(' ');
                return parts[0];
            }
            function ApplyDatatable(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no  text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (Table_Id == "Table") {
                                    return '<i class="fa fa-clone Duplicate  text-dark mr-1" title="Duplicate"></i> <i class="fa fa-edit table_edit text-primary mr-1" title="Edit Document"></i>';
                                } else {
                                    return '<i class="fa fa-edit table_edit1 text-primary mr-1" title="Edit Document"></i> <i class="fa fa-trash text-danger mr-2  table_delete" title="Delete Document"></i>';
                                }
                            }
                        },
                        {
                            data: 'IsActive',
                            title: 'Active',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label  class="tblswitch">
                                                                                                  <input type="checkbox" disabled value="`+ data + `" checked name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                          <span class="tblslider"></span>
                                                                                          </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                      <input type="checkbox" disabled value="`+ data + `"  name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                              <span class="tblslider"></span>
                                                                                          </label></center>`;
                                }

                            }
                        },
                        { data: 'PurReqId', title: 'PurReqId', className: 'tbl_PurReqId d-none tbl_Main_ID' },
                        {
                            data: 'ReqtType',
                            title: 'Role ',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "U") {
                                    return `User`;
                                } else {
                                    return `Employee`;
                                }
                            }
                        },
                        { data: 'ReqtType', title: 'ReqtType', className: 'tbl_Roleid d-none' },
                        {
                            data: '',
                            title: 'Requster',
                            className: 'tbl_ReqEmpName text-center',
                            render: function (data, type, row) {
                                if (row.ReqtType == 'U') {
                                    return '' + row.UserFulname + '';
                                } else if (row.ReqtType == 'E') {
                                    return '' + row.ReqEmpName + '';
                                } else {
                                    return ''; // Handle other cases if needed
                                }
                            }
                        },
                        { data: 'ReqtId', title: 'ReqtId', className: 'tbl_ReqtId d-none' },
                        { data: 'DeptName', title: 'Department', className: 'tbl_DeptName text-left' },
                        { data: 'DeptId', title: 'DeptId', className: 'tbl_DeptId d-none ' },
                        {
                            data: 'Notify',
                            title: 'Notify',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                                              <input type="checkbox" disabled value="`+ data + `" checked name="Notify1" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                  <span class="tblslider"></span>
                                                                                                  </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                                  <input type="checkbox" disabled value="`+ data + `"  name="Notify13" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                      <span class="tblslider"></span>
                                                                                                  </label></center>`;
                                }

                            }
                        },
                        { data: 'EmailAddr', title: 'Email', className: 'tbl_EmailAddrtext-center' },
                        { data: 'StateName', title: 'State', className: 'tbl_StateName text-left' },
                        { data: 'StateId', title: 'StateId', className: 'tbl_StateId d-none' },
                        { data: 'BrchName', title: 'Branch', className: 'tbl_BrchName text-left' },
                        { data: 'BrchId', title: 'BrchId', className: 'tbl_BrchId d-none' },
                        { data: 'BrchGSTINNo', title: 'Branch Reg.No', className: 'tbl_Branch Reg.No text-center' },
                        { data: 'Finyr', title: 'Financial Year', className: 'tbl_Finyr text-center' },
                        { data: 'FinyrId', title: 'FinyrId', className: 'tbl_FinyrId d-none' },
                        { data: 'FinyrNum', title: 'Number', className: 'tbl_Num text-right' },
                        {
                            data: 'Status',
                            title: 'Status',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "O") {
                                    return `Open`;
                                } else {
                                    return `Close`;
                                }

                            }
                        },
                        { data: 'Status', title: 'Status', className: 'tbl_Status d-none' },
                        { data: 'PostingDt', title: 'Posting Date', className: 'tbl_PostingDt text-center' },
                        { data: 'ValidUntilDt', title: 'Valid Until  Date', className: 'tbl_ValidUntilDt text-center' },
                        { data: 'Documentdt', title: 'Document Date', className: 'tbl_DocumentDt text-center' },
                        { data: 'RequiredDt', title: 'Required Date', className: 'tbl_RequiredDt text-center' },
                        {
                            data: 'DocType',
                            title: 'Document Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "I") {
                                    return `Items`;
                                } else {
                                    return `Service`;
                                }
                            }
                        },
                        { data: 'DocType', title: 'DocType', className: 'tbl_DocType d-none' },
                        { data: 'Owner', title: 'Owner', className: 'tbl_Owner text-left' },
                        { data: 'EmpId', title: 'EmpId', className: 'tbl_EmpId d-none' },
                        { data: 'Remarks', title: 'Remark', className: 'tbl_Remark text-left' },
                        { data: 'TotBefDis', title: 'Total Before Discount', className: 'tbl_TBdiscount text-right' },
                        { data: 'Freight', title: 'Freight', className: 'tbl_Freight text-right' },
                        { data: 'Tax', title: 'Tax', className: 'tbl_Tax text-right' },
                        { data: 'TotPayDue', title: 'Total Payment Due', className: 'tbl_TotPayDue text-right' },

                        { data: 'CreatedBy', title: 'Created By', className: 'tbl_CreatedBy d-none' },
                        { data: 'CreateDate', title: 'Create Date', className: 'tbl_CreateDate d-none' },
                        { data: 'UpdatedBy', title: 'Updated By', className: 'tbl_UpdatedBy d-none' },
                        { data: 'UpdateDate', title: 'Update Date', className: 'tbl_UpdateDate d-none' },
                        // Add more columns as needed
                    ],
                    "columnDefs": [
                        { "targets": 'th', "className": 'dt-no-wrap' }
                    ],
                });
            }
        }
        //Load Details
        {
            function convertValuesToString(obj) {
                for (var key in obj) {
                    if (typeof obj[key] === 'object') {
                        convertValuesToString(obj[key]); // Recursively call for nested objects
                    } else if (typeof obj[key] === null) {
                        obj[""];
                    } else {
                        obj[key] = String(obj[key]); // Convert value to string
                    }
                }
            }
            function removeKeysFromArray(jsonArray) {
                const keysToRemove = ["UpdateDate", "UpdateTS", "UpdatedBy", "CreateDate", "CreateTS", "CreatedBy"];
                // Loop through each object in the array
                jsonArray.forEach(obj => {
                    // Loop through each key to remove
                    keysToRemove.forEach(key => {
                        // Check if the key exists in the object
                        if (obj.hasOwnProperty(key)) {
                            // Remove the key
                            delete obj[key];
                        } else {
                            console.log(`Key "${key}" does not exist in an object.`);
                        }
                    });
                });

                // Return the modified array of JSON objects
                return jsonArray;
            }
            function AddDetails(PurReqId, Flag) {
                var tableData = $('#Table1 tbody tr').map(function () {
                    var tr = $(this);
                    var id = "";
                    if (Flag !== "D" && Flag !== "Y") {
                        id = $(tr).find('.tbl_Main_ID').text()
                    } else {
                        id = "";
                    }
                    return {
                        "LineNum": $(tr).find('.LineNum').text(),
                        "PurRDetId": id,
                        "PurReqId": PurReqId,
                        "ItemId": $(tr).find('.Tbl_ItemId select').val() || "0",
                        "ServiceId": $(tr).find('.Tbl_ServiceId select').val() || "0",
                        "BPId": $(tr).find('.Tbl_BPId select').val(),
                        "ItemReqdDt": $(tr).find('.Tbl_ItemReqdDt input').val(),
                        "Qty": $(tr).find('.Tbl_Qty input').val() || 0,
                        "TaxCodeId": $(tr).find('.Tbl_TaxCodeId select').val(),
                        "InfoPrice": $(tr).find('.Tbl_InfoPrice input').val() || "0",
                        "DisPer": $(tr).find('.Tbl_DisPer input').val() || "0",
                        //"MRP": $(tr).find('.Tbl_MRP input').val() || "0",
                        //"NetAmt": $(tr).find('.Tbl_NetAmt input').val() || "0",
                        "TotalLC": $(tr).find('.Tbl_TotalLC input').val() || "0",
                        "TaxAmountLC": $(tr).find('.Tbl_TaxAmmount input').val() || "0",
                        "UomId": $(tr).find('.Tbl_UomId select').val(),
                        "CntryId": $(tr).find('.Tbl_CntryId select').val(),
                        "WhsId": $(tr).find('.Tbl_WhsId select').val(),
                        "ItemBrchId": $(tr).find('.Tbl_ItemBrchId select').val(),
                        "LocName": $(tr).find('.Tbl_LocName').text(),
                        "GLAcctName": $(tr).find('.Tbl_GLAcctName input').val(),
                        "ItemHSNNo": $(tr).find('.Tbl_Hsn').text(),
                        "BarCode": $(tr).find('.Tbl_BarCode input').val(),
                        "BaseDocLineNum": $(tr).find('.Tbl_BaseDocLineNum').text(),
                        "BaseDocEntry": $(tr).find('.Tbl_BaseDocEntry').text(),
                        "BaseDocType": $(tr).find('.Tbl_BaseDocType').text(),
                        "CreditMemoQty": $(tr).find('.Tbl_CreditMemoQty input').val() || "0",
                        "RowStatus": $(tr).find('.Tbl_RowStatus').text(),
                        "ActualPrice": parseFloat($(tr).find('.Tbl_ActualPrice').text().replace(/,/g, '')).toFixed(2), // Ensure the value is formatted correctly
                        "PriceUpd": $(tr).find('.Tbl_PriceUpd').text(),
                    };
                }).get();
                $.ajax({
                    url: '@Url.Action("ADDITEMDETAILS", "PurchaseRequest")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(tableData),
                    success: function (response) {
                        if (response.success) {
                            // notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                            $("#Create_User_Tab").click();
                            return true;
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            function LoadDetails(ID) {
                Loader()
                $.ajax({
                    url: '@Url.Action("GETITEMDET", "PurchaseRequest")',
                    type: 'GET',
                    data: { PurReqId: ID, Flag: "C" },
                    dataType: 'json',
                    success: function (response) {
                        Loader()
                        ApplyDetailstable(response, "Table1");
                        if (response && response.length > 0) {
                            response.forEach(function (item, index) {
                                var itemId = item.ItemId;
                                var $row = $('#Table1 tbody tr').eq(index); // Adjust for tbody and zero-based index
                                if (itemId) {
                                    GetBarcode(itemId, $row);
                                } else {
                                    console.error('itemId is null or undefined');
                                }
                            });
                        } else {
                            console.error('Response is empty or undefined');
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            ApplyDetailstable([], "Table1")
            //Apply Datatable
            function ApplyDetailstable(jsonData, Table_Id) {
                bindBCPrice();
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var DocType = $("#DocType").val()
                var DValueService=""
                var DValueItem=""
                if (DocType=="S"){
                    DValue =""
                    DValueItem = "d-none";
                }else{
                    DValue = "d-none";
                    DValueItem ="";
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    "pageLength": 100,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no no-wrap  text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                 return   '<center><i class="fa fa-trash text-danger mr-2  CPDtable_delete"></i></center>';
                            }
                        },
                        {
                            data: 'Barcode',
                            title: 'Bar/QR Code',
                            className: 'Tbl_BarCode text-right' + DValueItem,
                            render: function (data, type, row) {
                                return `<input style='width:150px' value="${data}" type="number" placeholder="0000000000000" oninput="MaxLengthInp(this,15)" class="form-control BarCodeInp form-control-sm Form_Elem" />`;
                            }
                        },
                        { data: 'LineNum', title: 'LineNum', className: 'Tbl_LineNum d-none' },
                        { data: 'PurRDetId', title: 'PurRDetId', className: 'tbl_Main_ID d-none' },
                        { data: 'PurReqId', title: 'PurReqId', className: 'Tbl_PurReqId d-none' },
                        {
                            data: 'ItemId',
                            title: 'Item Code',
                            className: 'Tbl_ItemId text-center ' + DValueItem,
                            render: function (data, type, row) {
                                return ItemDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'ItemId',
                            title: 'Item Name',
                            className: 'Tbl_ItemName text-center ' + DValueItem,
                            render: function (data, type, row) {
                                return ItemNameDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'ServiceId',
                            title: 'Service Name',
                            className: 'Tbl_ServiceId text-center ' + DValue,
                            render: function (data, type, row) {
                                return ServiceDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'BPId',
                            title: 'Vender',
                            className: 'Tbl_BPId text-centgr',
                            render: function (data, type, row) {
                                return VendorDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'ItemReqdDt1',
                            title: 'Required Date',
                            className: 'Tbl_ItemReqdDt text-center',
                            render: function (data, type, row) {
                                return `<input  type="date" value="${data}" placeholder="" class="form-control ItemReqdDt form-control-sm Form_Elem" />`;
                            }
                        },
                        {
                            data: 'Qty',
                            title: 'Qty',
                            className: 'Tbl_Qty text-right' + DValueItem,
                            render: function (data, type, row) {
                                return `<input style='width:120px' value="${data}"  type="number" placeholder="Qty"   oninput="MaxLengthInp(this,10)" class="form-control Qty form-control-sm Form_Elem" />`;
                            }
                        },

                        {
                            data: 'TaxCodeId',
                            title: 'Tax',
                            className: 'Tbl_TaxCodeId  text-center',
                            render: function (data, type, row) {
                                return TaxDataDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'InfoPrice',
                            title: 'Info Price',
                            className: 'Tbl_InfoPrice text-right' ,
                            render: function (data, type, row) {
                                return ` <input style='width:120px' type="number" value="${data}" oninput="MaxLengthInp(this,10)"  class="form-control InfoPrice form-control-sm Form_Elem" />`;
                            }
                        },
                        {
                            data: 'DisPer',
                            title: 'Discount',
                            className: 'Tbl_DisPer text-right',
                            render: function (data, type, row) {
                                return `<input style='width:120px' type="number" value="${data}" oninput="MaxLengthInp(this,10)" class="form-control DisPer Discountinp form-control-sm Form_Elem" />`;
                            }
                        },
                        {
                            data: 'TaxAmountLC',
                            title: 'Tax Amount',
                            className: 'Tbl_TaxAmmount text-right',
                            render: function (data, type, row) {
                                return ` <div  style="width:140px!important" class="input-group p-0 m-0">
                                        <button type="button" class="btn btn-sm btn-primary w-25  ViewTaxInfo p-1 "><i class="fa fa-eye"></i></button>
                                        <input  type="number" value="${data}" oninput="MaxLengthInp(this,10)"  readonly class="form-control w-75 TaxAmmount form-control-sm Form_Elem" />
                                </div> `;
                            }
                        },

                        {
                            data: 'TotalLC',
                            title: 'Total LC',
                            className: 'Tbl_TotalLC text-right',
                            render: function (data, type, row) {
                                return ` <input style='width:120px' type="number" value="${data}" oninput="MaxLengthInp(this,10)" readonly  class="form-control TotalLC form-control-sm Form_Elem" />`;
                            }
                        },
                        {
                            data: 'UomId',
                            title: 'Uom',
                            className: 'Tbl_UomId text-center'+DValueItem,
                            render: function (data, type, row) {
                                return UOMDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'CntryId',
                            title: 'Currency',
                            className: 'Tbl_CntryId text-center' + DValueItem,
                            render: function (data, type, row) {
                                return CurrencyDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },

                        {
                            data: 'WhsId',
                            title: 'Warehouse',
                            className: 'Tbl_WhsId text-center'+ DValueItem,
                            render: function (data, type, row) {
                                return WarehouseDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'ItemBrchId',
                            title: 'Branch',
                            className: 'Tbl_ItemBrchId text-center' + DValueItem,
                            render: function (data, type, row) {
                                return BranchDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        { data: "LocName", title: 'Location', className: 'Tbl_LocName text-center' },

                        {
                            data: 'GLAcctName',
                            title: 'Gl Account',
                            className: 'Tbl_GLAcctName text-right',
                            render: function (data, type, row) {
                                return ` <input style='width:120px' type="text" value="${data}" oninput="MaxLengthInp(this,10)"  class="form-control GLAcctName form-control-sm Form_Elem" />`;
                            }
                        },
                        { data: 'ItemHSNNo', title: 'HSN No', className: 'Tbl_Hsn text-right' + DValueItem},
                        { data: 'BaseDocLineNum', title: 'BaseDocLineNum', className: 'Tbl_BaseDocLineNum' },
                        { data: 'BaseDocEntry', title: 'BaseDocEntry', className: 'Tbl_BaseDocEntry' },
                        { data: 'BaseDocType', title: 'BaseDocType', className: 'Tbl_BaseDocType' },
                        { data: 'OpenQty', title: 'Open Qty', className: 'Tbl_OpenQty text-right' },
                        { data: 'RowStatus', title: 'RowStatus', className: 'Tbl_RowStatus text-right' },
                        {
                            data: 'CreditMemoQty',
                            title: 'Credit Memo Qty',
                            className: 'Tbl_CreditMemoQty text-right',
                            render: function (data, type, row) {
                                return ` <input style='width:120px' type="number" value="${data}" oninput="MaxLengthInp(this,10)"  class="form-control CreditMemoQty form-control-sm Form_Elem" />`;
                            }
                        },
                        { data: 'ActualPrice', title: 'Actual Price', className: 'Tbl_ActualPrice  text-right' },
                        { data: 'PriceUpd', title: 'PriceUpd', className: 'Tbl_PriceUpd text-right' },
                    ],
                    "columnDefs": [
                        { "targets": '_all', "className": 'dt-no-wrap' }
                    ],
                });
                $('.select21').css({ width: "width:120px", backgroundColor: "white" }).select2();
                if (DocType === 'S') {
                    $('.Tbl_ServiceId').removeClass('d-none');
                    $('.Tbl_NetAmt').removeClass('d-none');
                    $('.Tbl_MRP').removeClass('d-none');
                    $('.Tbl_ItemId,.Tbl_Qty,.Tbl_UomId,.Tbl_CntryId,.Tbl_ItemBrchId,.Tbl_WhsId,.Tbl_Hsn,.Tbl_BarCode').addClass('d-none');
                } else {
                    $('.Tbl_ServiceId').addClass('d-none');
                    $('.Tbl_NetAmt').addClass('d-none');
                    $('.Tbl_MRP').addClass('d-none');
                    $('.Tbl_ItemId,.Tbl_Qty,.Tbl_UomId,.Tbl_CntryId,.Tbl_ItemBrchId,.Tbl_WhsId,.Tbl_Hsn,.Tbl_BarCode').removeClass('d-none');
                }
                if(jsonData.length >0){
                    HeaderCalculation()
                    ValidateLineRecords(jsonData)
                }
            }
            function ValidateLineRecords(Data) {
                var $tableRows = $("#Table1 tbody tr");
                var tableLength = $tableRows.length;

                for (var i = 0; i < tableLength; i++) {
                    var $row = $tableRows.eq(i);
                    var dataObj = Data[i];
                    if (dataObj.RowStatus == "T") {
                        $row.find("input").prop("readonly", true).css({"background-color": "white"});
                        $row.find("select").prop("disabled", true).css({ "background-color": "white" });
                        $row.find("i").prop("disabled", true)
                    }else if (dataObj.RowStatus =="C") {
                        $row.find("input, select").prop("disabled", true).css({ "background-color": "","color":"black"});;
                        $row.find("input, select").prop("readonly", true).css({ "background-color": "", "color": "black" });
                        $row.find("i").prop("disabled", true)
                     }
                }
            }

        }
        //Freight Region
        {
            $('.AddFreight').click(function () {
                var TotPayDue = $("#TotPayDue").val();
                if (TotPayDue <= 0) {
                    Swal.fire("Please Add Items First..!", "", "warning");
                    return false;
                }else{
                   $('#myModal').modal('show');
                }
            });
            $('.closeModalInstallments ,#FreigthCancebtn').click(function () {
                $('#myModal').modal('hide');
            });


            var TaxData = [];
            var ProjectData = [];
            function LoadFreighttbl(response, tbldata) {
                let $tableBody = $("#Freighttbl tbody");
                $tableBody.html(""); // Clear the table body once
                if (tbldata) {
                    let index = 1;
                    let totalFreghtTax = 0;
                    let TotalFreghtNet = 0;
                    let TotalFreightGross = 0;

                    for (let i = 0; i < tbldata.length; i++) {
                        //Tax Code Drp
                        let taxDataEntry = TaxData.find(item => item.TaxCodeId === tbldata[i].TaxCodeId);

                        let Taxoptions = TaxData.map(taxItem => `<option value="${taxItem.TaxCodeId}" ${taxItem.TaxCodeId === tbldata[i].TaxCodeId ? 'selected' : ''}>${taxItem.TaxCode}</option>`).join('');
                        //Project code Drp
                        let ProjectDataent = ProjectData.find(item => item.PrjId === tbldata[i].PrjId);

                        let Projectoptions = ProjectData.map(PrjItem => `<option value="${PrjItem.PrjId}" ${PrjItem.PrjId === tbldata[i].PrjId ? 'selected' : ''}>${PrjItem.PrjName}</option>`).join('');

                        let list = `
                                      <tr>
                                          <td class='p-1 text-center' nowrap>${index}</td>
                                                      <td class='p-1 text-center d-none PurRFretId' nowrap>${tbldata[i].PurRFretId}</td>
                                          <td class='p-1 text-center FretName' nowrap>${tbldata[i].FretName}</td>
                                          <td class='p-1 text-center' nowrap><textarea style="height:30px;" class='form-control form-control-sm'>${tbldata[i].Remarks}</textarea></td>
                                          <td class='p-1 text-center FreightTaxCode' nowrap>
                                              <select style="height:30px!important;" class='form-control form-control-sm FREIGHTTAXCODE'>
                                                      ${Taxoptions}
                                              </select>
                                          </td>
                                           <td class='p-1 text-right FreightTaxAmmount' nowrap> 
                                           <div  style="width:140px!important" class="input-group p-0 m-0">
                                                <button type="button" class="btn btn-sm btn-primary w-25  ViewTaxInfo1 p-1 "><i class="fa fa-eye"></i></button>
                                                 <input  type="number" value="${tbldata[i].TotTaxAmount}" oninput="MaxLengthInp(this,10)"  readonly class="form-control w-75 FRTaxAmmount form-control-sm Form_Elem" />
                                             </div>
                                          </td>
                                          <td class='p-1 text-right FreightNetAmmount' nowrap><input type="number" value="${tbldata[i].NetAmount}" class="form-control form-control-sm FreigtNetAmt" /></td>
                                          <td class='p-1 text-center FreightStatus' nowrap>${tbldata[i].Status}</td>
                                                  <td class='p-1 text-center FREIGHTPROJECT' nowrap>
                                                      <select style="height:30px!important;" class='form-control form-control-sm FREIGHTPROJECT'>
                                                              ${Projectoptions}
                                                  </select>
                                              </td>
                                          <td class='p-1 text-right FreightGrssAmt' nowrap>${tbldata[i].GrossAmount}</td>
                                          <td class='p-1 text-right d-none FretId' nowrap>${tbldata[i].FretId}</td>
                                      </tr>`;
                        $tableBody.append(list);
                        index++;
                        // Add TotTaxAmount to totalFreghtTax for each iteration
                        totalFreghtTax += parseFloat(tbldata[i].TotTaxAmount);
                        TotalFreghtNet += parseFloat(tbldata[i].NetAmount);
                        TotalFreightGross += parseFloat(tbldata[i].GrossAmount);
                    }

                    // After the loop, append the total to the table
                    let totalList = `
                                  <tr>
                                      <th class='p-1 text-center' colspan="4" nowrap></th>
                                          <th class='p-1 text-right TotalFreghttax'  nowrap>${totalFreghtTax.toFixed(2)}</th>
                                      <th class='p-1 text-right TotalFreghtNet'  nowrap>${TotalFreghtNet.toFixed(2)}</th>
                                      <th class='p-1 text-center' colspan="2" nowrap></th>
                                      <th class='p-1 text-right TotalFreightGross'  nowrap>${TotalFreightGross.toFixed(2)}</th>
                                  </tr>`;
                    $tableBody.append(totalList);

                }
                else {
                    let index = 1;
                    for (let i = 0; i < response.length; i++) {
                        let list = `
                                      <tr>
                                         <td class='p-1 text-center' nowrap>${index}</td>
                                         <td class='p-1 text-center d-none ' nowrap></td>
                                                 <td class='p-1 text-center  FretName' nowrap>${response[i].FretName}</td>
                                         <td class='p-1 text-center' nowrap><textarea style="height:30px;" class='form-control  form-control-sm'></textarea></td>
                                              <td class='p-1 text-center FreightTaxCode' nowrap><select style="height:30px!important;" class='form-control form-control-sm FREIGHTTAXCODE'></select></td>
                                              <td class='p-1 text-right FreightTaxAmmount' nowrap> <div  style="width:140px!important" class="input-group p-0 m-0">
                                                <button type="button" class="btn btn-sm btn-primary w-25  ViewTaxInfo1 p-1 "><i class="fa fa-eye"></i></button>
                                             <input  type="number" value="0.00" oninput="MaxLengthInp(this,10)"  readonly class="form-control w-75 FRTaxAmmount form-control-sm Form_Elem" />
                               </div></td>
                                         <td class='p-1 text-right FreightNetAmmount' nowrap><input type="number" value="0.00" class="form-control form-control-sm FreigtNetAmt" /></td>
                                         <td class='p-1 text-center FreightStatus' nowrap>O</td>
                                         <td class='p-1  text-center' nowrap><select style="height:30px!important;" class='form-control form-control-sm FREIGHTPROJECT'></select></td>
                                         <td class='p-1 text-right FreightGrssAmt' nowrap>0.00</td>
                                         <td class='p-1 text-right d-none FretId' nowrap>${response[i].FretId}</td>
                                      </tr>`;
                        $tableBody.append(list);
                        index++;
                    }
                    let list = `
                                          <tr>
                                             <th class='p-1 text-center' colspan="4" nowrap></th>
                                             <th class='p-1 text-right TotalFreghttax'  nowrap>0.00</th>
                                             <th class='p-1 text-right TotalFreghtNet'  nowrap>0.00</th>
                                             <th class='p-1 text-center' colspan="2" nowrap></th>
                                             <th class='p-1 text-right TotalFreightGross'  nowrap>0.00</th>
                                          </tr>`;
                    $tableBody.append(list);
                }
            }
            LoadDefFreight()
            function LoadDefFreight() {
                $.ajax({
                    url: '@Url.Action("FREIGTHRECORDPER","GetDropdownData")',
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        if (response.length > 0) {
                            LoadFreighttbl(response);
                            // Load FREIGHTTAXCODE
                            $.ajax({
                                url: '@Url.Action("FREIGHTTAXCODE", "GetDropdownData")',
                                type: 'GET',
                                dataType: 'json',
                                success: function (response) {
                                    if (response.length > 0) {
                                        TaxData = response;
                                        let list = "<option value=''>Select Tax </option>";
                                        for (var i = 0; i < response.length; i++) {
                                            list += "<option value='" + response[i].TaxCodeId + "'>" + response[i].TaxCode + "</option>";
                                        }
                                        $(".FREIGHTTAXCODE").html(list);
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                            // Load Project
                            $.ajax({
                                url: '@Url.Action("PROJECT", "GetDropdownData")',
                                type: 'GET',
                                dataType: 'json',
                                success: function (response) {
                                    if (response.length > 0) {
                                        ProjectData = response;
                                        let list = "<option value=''>Select Project</option>";
                                        for (var i = 0; i < response.length; i++) {
                                            list += "<option value='" + response[i].PrjId + "'>" + response[i].PrjCode + "-" + response[i].PrjName + "</option>";
                                        }
                                        $(".FREIGHTPROJECT").html(list);
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });

            }
            $(document).on("input", ".FreigtNetAmt", function () {
                CalculateFreight()
            })
            $(document).on("change", ".FREIGHTTAXCODE", function () {
                CalculateFreight()
            })
            // Freight Calculation
            function CalculateFreight() {
                var $tableRows = $("#Freighttbl tbody tr");
                var TotalFreghttax = 0,
                    TotalFreghtNet = 0,
                    TotalFreightGross = 0;

                $tableRows.each(function () {
                    var $row = $(this);
                    var taxCodeId = $row.find(".FreightTaxCode select").val();
                    var netAmt = parseFloat($row.find(".FreightNetAmmount input").val()) || 0;
                    var data = TaxData.find(item => item.TaxCodeId == taxCodeId);
                    var taxRate = data ? parseFloat(data.TaxCalRate) : 0;
                    var taxAmount = isNaN(taxRate) ? 0 : (netAmt * (taxRate / 100));
                    var grossAmt = taxAmount + netAmt;
                    $row.find("td .FRTaxAmmount").val(taxAmount.toFixed(2));
                    $row.find(".FreightGrssAmt").text(grossAmt.toFixed(2));
                    TotalFreghttax += taxAmount;
                    TotalFreghtNet += netAmt;
                    TotalFreightGross += grossAmt;
                });
                // Update last row totals
                $(".TotalFreghttax").text(TotalFreghttax.toFixed(2));
                $(".TotalFreghtNet").text(TotalFreghtNet.toFixed(2));
                $(".TotalFreightGross").text(TotalFreightGross.toFixed(2));
            }
            //Add Freight To Document
            $("#Ok_btn").click(function () {
                HeaderCalculation()
                $('#myModal').modal('hide');
            });
            function AddFreight(table, PurReqId) {
                var rowCount = $(table).find('tbody tr').length;
                if (rowCount <= 0) {
                    return false;
                }
                var FreightData = [];
                var headers = [];
                $(table).find('thead th').each(function () {
                    headers.push($(this).text().trim().toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()<>]/g, "").replace(/ /gi, ''));
                });

                $(table).find('tbody tr').each(function (rowIndex) {
                    var totalRows = $(table).find('tbody tr').length;
                    if (rowIndex === totalRows - 1) {
                        return;
                    }
                    var rowData = {};

                    $(this).find('td').each(function (index) {
                        switch (headers[index]) {
                            case "purrfretid":
                                rowData["PurRFretId"] = $(this).text().trim();
                                break;
                            case "remarks":
                                rowData["Remarks"] = $(this).find('textarea').val();
                                break;
                            case "taxcode":
                                rowData["TaxCodeId"] = $(this).find('.FREIGHTTAXCODE').val();
                                break;
                            case "totaltaxamount":
                                rowData["TotTaxAmount"] = $(this).find('.FRTaxAmmount').val();
                                break;
                            case "netamount":
                                rowData["NetAmount"] = $(this).find('input').val();
                                break;
                            case "status":
                                rowData["Status"] = $(this).text();
                                break;
                            case "project":
                                rowData["PrjId"] = $(this).find('.FREIGHTPROJECT').val();
                                break;
                            case "grossamount":
                                rowData["GrossAmount"] = $(this).text();
                                break;
                            case "fretid":
                                rowData["FretId"] = $(this).text();
                                break;
                            default:
                                break;
                        }
                    });
                    rowData["PurReqId"] = PurReqId;
                    FreightData.push(rowData);
                });
                if(FreightData.length){
                     $.ajax({
                        url: '@Url.Action("ADDFREIGHT", "PurchaseRequest")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(FreightData),
                        success: function (response) {
                            if (response.success) {
                                LoadDefFreight()
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                }else{}
               
            }
        // Load freight data
            function LOADFREIGHT(ID) {
                $.ajax({
                    url: '@Url.Action("GETFREIGHT", "PurchaseRequest")',
                    type: 'GET',
                    data: { PurReqId: ID },
                    dataType: 'json',
                    success: function (response) {
                        if (response.length > 0) {
                            LoadFreighttbl('', response)
                        } else {
                            LoadDefFreight()
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
        }
        //View Tax Info 
        {
            function fetchDataAndBindToTable(id, lineNum, flag) {
                $.ajax({
                    url: '@Url.Action("TAXFRIGHT", "PurchaseRequest")',
                    method: 'GET',
                    data: { id: id, lineNum: lineNum, flag: flag },
                    success: function (response) {
                        // Check if response is valid
                        if (response && response.length > 0) {
                            OpenTaxModal(response);
                        } else {
                            console.log('No data found.');
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle AJAX error
                        console.error('Error:', error);
                    }
                });
            }
            function OpenTaxModal(data) {
                $('#TAXMODAL').modal('show');
                $('#FreightTAXtbl tbody').empty(); // Clear existing rows in the table
                if (data && data.length > 0) {
                    data.forEach(function (item) {
                        var newRow = `<tr>
                        <td class="p-2 text-center d-none">${item.PurRTaxId}</td>
                        <td class="p-2 text-center d-none">${item.PurReqId}</td>
                        <td class="p-2 text-center d-none">${item.LineNum}</td>
                        <td class="p-2 text-center d-none">${item.Tax_type}</td>
                        <td class="p-2 text-center d-none">${item.TaxCodeId}</td>
                        <td class="p-2 text-center">${item.TaxCode}</td>
                        <td  class="p-2 text-center ">${item.TaxTypeCode}</td>
                        <td class="p-2 text-center">${item.TaxFormula}</td>
                        <td class="p-2 text-center d-none">${item.TaxTypeId}</td>
                            <td class="p-2 text-right">${item.TaxTypePer}%</td>
                    <td class="p-2 text-right">${item.TaxSum.toFixed(2)}</td>
                        <td class="p-2 text-right d-none">${item.TaxCalRate}</td>
                </tr>`;
                        $('#FreightTAXtbl tbody').append(newRow);
                    });
                } else {
                    // console.log('No data found.');
                }
            }

            $(document).on('click', '.ViewTaxInfo', function () {
                var closestRow = $(this).closest("tr");
                var id = $("#PurReqId").val();
                var lineNum = closestRow.find(".Tbl_LineNum").text();
                var flag = "T";
                fetchDataAndBindToTable(id, lineNum, flag);
            });
            $(document).on('click', '.ViewTaxInfo1', function () {
                var closestRow = $(this).closest("tr");
                var id = $("#PurReqId").val();
                var lineNum = closestRow.find(".FretId").text();
                var flag = "F";
                fetchDataAndBindToTable(id, lineNum, flag);
            });

            // Close Modal
            $('.closeModalInstallments').click(function () {
                $('#TAXMODAL').modal('hide');
            });

            // Close Modal on Cancel button click
            $('#FreigthCancebtn').click(function () {
                $('#TAXMODAL').modal('hide');
            });

        }
        //Region Copy To
        {
            $(".CopyToDrop").click(function(){
                var value = $(this).data('value');
                var obj = {
                    Id: $("#PurReqId").val(),
                    Docflag:value,
                    BPId:'',
                }
                sessionStorage.setItem("CopyTodata", JSON.stringify(obj))
            })
        }
        // Region Navigation
        {
            var $table = $("#Table");
            $table.find("tbody tr:first").addClass("active");
            $(".btn_forward").click(function () {
                var $currentRow = $table.find(".active");
                var $nextRow = $currentRow.next("tr");
                if ($nextRow.length > 0) {
                    $currentRow.removeClass("active");
                    $nextRow.addClass("active");
                    BindHederRecords($nextRow,"N");
                } else {
                    var $firstRow = $table.find("tbody tr:first");
                    $table.find(".active").removeClass("active");
                    $firstRow.addClass("active");
                    BindHederRecords($firstRow,"N");

                }
            });
            $(".btn_backward").click(function () {
                var $currentRow = $table.find(".active");
                var $prevRow = $currentRow.prev("tr");
                if ($prevRow.length > 0) {
                    $currentRow.removeClass("active");
                    $prevRow.addClass("active");
                    BindHederRecords($prevRow,"N");
                } else {
                    var $lastRow = $table.find("tr:last");
                    $table.find(".active").removeClass("active");
                    $lastRow.addClass("active");
                    BindHederRecords($lastRow,"N");
                }
            });
            $(".btn_first").click(function () {
                var $firstRow = $table.find("tbody tr:first");
                $table.find(".active").removeClass("active");
                $firstRow.addClass("active");
                BindHederRecords($firstRow);
            });
            $(".btn_last").click(function () {
                var $lastRow = $table.find("tr:last");
                $table.find(".active").removeClass("active");
                $lastRow.addClass("active");
                BindHederRecords($lastRow,"N");
            });
            $(".btn_reload").click(function () {
                // $("#Finacial_year_form")[0].reset();
                $('#Form_reset_btn').click()
                HideBtn()
            });
        }
    });
</script>

