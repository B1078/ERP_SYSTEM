@{
    string? UserName = ViewContext.HttpContext.Session.GetString("UserName");
    string? StateId = ViewContext.HttpContext.Session.GetString("StateId");
    string? CntryId = ViewContext.HttpContext.Session.GetString("CntryId");
    string? BrchId = ViewContext.HttpContext.Session.GetString("BrchId");
    DateTime currentDate = DateTime.Now;
    string formattedDate = currentDate.ToString("dd-MM-yyyy");
}


<div class="col-xl-12 col-md-12">
    <div class="card table-card p-2 mb-0 Div_navigation">
        <div class="row">
            <div class="col-md-12">
                <button class="btn text-center btn-sm btn-primary btn_first p-2" title="Get First Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_backward p-2" title="Get Privious Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary p-2 btn_forward" title="Get Next Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_last p-2" title="Get Last Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_reload p-2" title="Reload" style="width:50px; font-size:18px;">
                    <i class="fa fa-refresh"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="card table-card mt-2">
        <div class="card-header">
            <h5 class="webtitle">Inventory Transfer Request</h5>
            <div class="card-header-right">
                <ul class="list-unstyled card-option">
                    <li><i class="fa fa fa-wrench open-card-option"></i></li>
                    <li><i class="fa fa-window-maximize full-card"></i></li>
                    <li><i class="fa fa-minus minimize-card"></i></li>
                    <li><i class="fa fa-refresh reload-card"></i></li>
                    <li hidden><i class="fa fa-trash close-card"></i></li>
                </ul>
            </div>

        </div>
        <div class="card-block shadow">
            <!-- Row start -->
            <form id="Header_Form">
                <div class="row p-2">
                    <div class="col-md-12 col-lg-12 col-xl-12 ">
                        <div class="row   mt-1 mb-3 ">
                            <div class="col-md-12  col-lg-12 col-xl-12">
                                <div class="row">
                                    <div class="col-md-12 col-lg-8 col-xl-8  mt-1 mb-1">
                                        <div class="col-auto">
                                            <label class="switch">
                                                <input type="checkbox" value="Y" checked name="IsActive" id="IsActive" class="toggleSwitch form-control form-control-sm">
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-4  col-xl-2  text-center mt-1 mb-1 ">
                                        <div class="dropdown d-none" id="specificDropdown">
                                            <button class="btn btn-sm btn-outline-secondary w-100  dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false" disabled>
                                                Copy From
                                            </button>
                                            <div class="dropdown-menu w-100">
                                                <span data-value="GRPO" class="dropdown-item  CopyDrop">Goods Receipt PO </span>
                                                <span data-value="APINV" class="dropdown-item  CopyDrop">AP/Invoice</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-4 col-xl-2 text-center mt-1  mb-1">
                                        <div class="dropdown   ">
                                            <button class="btn btn-sm btn-outline-secondary w-100  dropdown-toggle" id="CopyTo" type="button" data-toggle="dropdown" aria-expanded="false" disabled>
                                                Copy To
                                            </button>
                                            <div class="dropdown-menu w-100">
                                                <a data-value="ITR" class="dropdown-item CopyToDrop" href="@Url.Action("InventoryTransfer","InventoryTransfer")">Inventory Transfer</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div class="row mt-1 mb-0 p-1">
                            <div class="col-md-12  col-lg-12 col-xl-12">
                                <div class="row">
                                    <input hidden name="InvTransReqId" id="InvTransReqId" value="" type="text" placeholder="InvTransReqId" class="form-control form-control-sm Form_Elem" />
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="">Number</label>
                                        <input name="DocNum" id="DocNum" oninput="MaxLengthInp(this,15)" type="number" readonly placeholder="Number" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="BPId">Business Partner</label>
                                        <select id="BPId" name="BPId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Business Partner</option>
                                        </select>
                                    </div>
                                   
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="BPContPerId">Contact Person</label>
                                        <select id="BPContPerId" name="BPContPerId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Contact Person</option>
                                        </select>
                                    </div>
                                   
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="BPAddrId">Ship To</label>
                                        <select id="BPAddrId" name="BPAddrId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Ship To </option>
                                        </select>
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="FinyrId">Financial year</label>
                                        <select id="FinyrId" name="FinyrId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Manual</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="FinyrNum"> Financial No</label>
                                        <input name="FinyrNum" id="FinyrNum" readonly oninput="MaxLengthInp(this,100)" type="number" placeholder="No" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="PListId">Price List</label>
                                        <select id="PListId" name="PListId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Manual</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="Status">Status</label>
                                        <select readonly disabled id="Status" name="Status" class="form-control form-control-sm  Form_Elem">
                                            <option value="O">Open</option>
                                            <option value="C">Closed</option>
                                            <option value="N">Cancelled</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2 mt-1 mb-1">
                                        <label for="SalsEmpId">Sales Employee </label>
                                        <select name="SalsEmpId" id="SalsEmpId" class="form-control form-control-sm Form_Elem">
                                            <option value="">Select Buyer</option>
                                        </select>
                                    </div>

                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="PostingDt">Posting Date</label>
                                        <input name="PostingDt" id="PostingDt" type="date" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="DueDt">Due Date</label>
                                        <input name="DueDt" id="DueDt" type="date" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="DocumentDt">Document Date</label>
                                        <input name="DocumentDt" id="DocumentDt" type="date" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-2  mt-1 mb-1">
                                        <label for="JrnlMemo"> General Memo</label>
                                        <input name="JrnlMemo" id="JrnlMemo" oninput="MaxLengthInp(this,100)" type="text" placeholder="General Memo" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-5 mt-1 mb-1">
                                        <label for="Remark" oninput="MaxLengthInp(this,200)">Remark</label>
                                        <textarea name="Remarks" id="Remarks" class="form-control form-control-sm Form_Elem"></textarea>
                                    </div>
                                    <div class="col-md-5 mt-1 mb-1">
                                        <label for="PickRmrk" oninput="MaxLengthInp(this,200)">Pick Remark</label>
                                        <textarea name="PickRmrk" id="PickRmrk" class="form-control form-control-sm Form_Elem"></textarea>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="FromWhsId">From WareHouse</label>
                                        <select id="FromWhsId1" name="FromWhsId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">From WaheHouse</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="WhsId">To WareHouse</label>
                                        <select id="WhsId1" name="WhsId" class="form-control WhsId1  form-control-sm  Form_Elem">
                                            <option value="">Select To WareHouse </option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 col-lg-12 col-xl-12 mt-2 ">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs  tabs" role="tablist">
                        <li class="nav-item active">
                            <a class="nav-link active" data-toggle="tab" id="Contents_Tab" href="#Contents" role="tab">Contents</a>
                        </li>
                        <li class="nav-item ">
                            <a class="nav-link" data-toggle="tab" id="Logistic_tab" href="#Logistic" role="tab">Logistic</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#Attachment" role="tab">Attachment</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#AllItems" role="tab">All Inventory Transfer List</a>
                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content tabs card-block">
                        <div class="tab-pane p-1 active " id="Contents" role="tabpanel">
                            <div id="Contents_mst_form" class="w-100 mt-2 p-2">
                                <div class="row border">
                                    <div class="col-md-12  p-2 ">
                                        <div class="row mt-0 mb-1">
                                            <div class="col-md-12 text-right">
                                                <button type="button" id="AddCpd" class="btn btn-sm btn-primary">Add Row</button>
                                            </div>
                                        </div>
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table1">
                                            </table>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="tab-pane p-3 m-0 mt-2" id="Logistic" role="tabpanel">
                            <div class="row p-3  mt-2 border ">
                                <div class="col-md-3 ">
                                    <label for="ShipToAddr" oninput="MaxLengthInp(this,200)">Ship To:</label>
                                    <textarea name="ShipToAddr" id="ShipToAddr" class="form-control form-control-sm Form_Elem"></textarea>
                                </div>
                                <div class="col-md-3 d-none ">
                                    <label for="BillToAddr" oninput="MaxLengthInp(this,200)">Bill To:</label>
                                    <textarea name="BillToAddr" id="BillToAddr" class="form-control form-control-sm Form_Elem"></textarea>
                                </div>
                                <div class="col-md-2 mt-1 mb-1">
                                    <label for="DutyStatus">Duty Status</label>
                                    <select id="DutyStatus" name="DutyStatus" class="form-control form-control-sm  Form_Elem">
                                        <option value="O">With Payment Of Duty</option>
                                        <option value="C">Without Payment Of Duty</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane p-3 m-0 mt-2" id="Attachment" role="tabpanel">
                            <div class="row  p-3  mt-2 border">
                                <div class="col-md-12 text-right table-responsive mt-3">
                                    <button type="button" id="Addrow" class="btn btn-primary btn-sm mb-2">Add New Row</button>
                                </div>
                                <div class="col-md-12  table-responsive mt-3" style="height:300px!important;">
                                    <table class="table border  table-striped   table-hover table-bordered w-100" id="AttachmentTable">
                                        <thead>
                                            <tr>
                                                <th class="p-2" nowrap>Sr.No</th>
                                                <th class="p-2" nowrap>Add/Update</th>
                                                <th class="p-2" nowrap>Remark</th>
                                                <th class="p-2" nowrap>File Name</th>
                                                <th class="p-2" nowrap>File Extention</th>
                                                <th class="p-2 d-none" nowrap>File Data</th>
                                                <th class="p-2 d-none" nowrap>AttchDetId</th>
                                                <th class="p-2 d-none" nowrap>Flag</th>
                                                <th class="p-2 text-center" nowrap>View</th>
                                                <th class="p-2 text-center" nowrap>Delete</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane p-3 w-100" id="AllItems" role="tabpanel">
                            <div class="row p-3  mt-2 border">
                                <div class="table-responsive">
                                    <table class="table border  table-striped   table-hover table-bordered w-100" id="Table">
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="CreatedBy">Created By</label>
                                <input name="CreatedBy" id="CreatedBy" readonly type="text" value="@UserName" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="UpdatedBy">Updated By</label>
                                <input name="UpdatedBy" id="UpdatedBy" readonly type="text" value="@UserName" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="CreateDate">Create Date</label>
                                <input name="CreateDate" id="CreateDate" readonly type="text" value="@formattedDate" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="UpdateDate">Update Date</label>
                                <input name="UpdateDate" id="UpdateDate" readonly type="text" value="@formattedDate" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3 mt-3">
                                <br>
                                <button type="button" id="Form_Update_btn" style="display:none; width:80px;" class="btn mt-1 mb-1 ml-1 mr-1 btn-sm text-white btn-info">Update</button>
                                <button type="button" id="Form_Save_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm mt-1 mb-1 btn-success">Save</button>
                                <button type="button" id="Form_Draft_btn" style=" width:80px; background-color:darkgrey" class="btn ml-1 mt-1 mb-1 mr-1 btn-sm text-white">Draft</button>
                                <button type="button" id="Form_Delete_btn" style="display:none; width:80px;" class="btn mt-1 mb-1 ml-1 mr-1 btn-sm btn-danger">Delete</button>
                                <button type="button" id="Form_Resume_btn" style=" width:80px; background-color:orange" class="btn ml-1 mt-1 mb-1 mr-1 btn-sm text-white">Resume</button>
                                <button type="reset" id="Form_reset_btn" style=" width:80px;" class="btn ml-1 mr-1 mt-1 mb-1 btn-sm btn-dark">Reset</button>
                            </div>

                        </div>
                    </div>
                </div>
        </div>
        </form>
    </div>
    <!-- Row end -->
</div>
</div>
<!-- Image Modal-->
<div class="modal" id="DocumentViewer">
    <div class="modal-content" style="height: 90vh; margin-top: 5vh;">
        <div class="card-header bg-white border-0">
            <a class="downloadLink " style="display: none;"><button type="button" class="btn  btn-primary p-1">Download Document</button> </a>
            <span class="close closeModal" id="">&times;</span>
        </div>
        <div class="card-body viewerbody border p-2 text-center" style="overflow-y:scroll!important;overflow-x:scroll">
            <div class="table-responsive pdfdocument-viewer w-100">
            </div>
            <div class=" image-container document-viewer document-viewer"></div>
        </div>
    </div>
</div>
<!--Freight Modal -->
<div class="modal" id="myModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Freight Charges</h5>
            <span class="close closeModalInstallments" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="card-body border">
                <div class="table-responsive" style="height:500px;">
                    <table class="table border  table-striped   table-hover table-bordered w-100" id="Freighttbl">
                        <thead>
                            <tr>
                                <th class=" p-2 text-center" nowrap>Line No</th>
                                <th class=" p-2 text-center d-none" nowrap>gdrreqfretid</th>
                                <th class=" p-2 text-center" nowrap>Freight Name</th>
                                <th class=" p-2 text-center" nowrap>Remarks</th>
                                <th class=" p-2 text-center" nowrap>TaxCode</th>
                                <th class=" p-2 text-right" nowrap>Total Tax Amount</th>
                                <th class=" p-2 text-right" nowrap>Net Amount</th>
                                <th class=" p-2 text-center" nowrap>Status</th>
                                <th class=" p-2 text-center" nowrap>Project</th>
                                <th class=" p-2 text-right" nowrap>Gross Amount</th>
                                <th class=" p-2 text-right d-none" nowrap>FretId</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="row mb-3">
                    <div class="col-md-12">
                        <button type="button" id="Ok_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-success">Ok</button>
                        <button type="button" id="FreigthCancebtn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-danger">Cancel</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<!--Draft Modal -->
<div class="modal" id="DraftModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Draft Records</h5>
            <span class="close closeModalInstallments" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="card-body border">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table3">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- COPY FROM MODAL -->
<div class="modal" id="CopyFromModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Copy From</h5>
            <span class="close closeModalInstallments" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="card-body border">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table4">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Tax information Modal -->
<div class="modal" id="Tax_Modal">
    <div class="modal-content">
        <div class="card-header bg-white border-0 p-1">
            <div class="row">
                <div class="col-6">
                    <h4>Tax Information</h4>
                </div>
                <div class="col-6 text-right">
                    <span class="close closeModal" id="">&times;</span>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <form id="Pay_term_form" class="w-100 mt-4 p-4 border">
                <div class="row justify-content-end mt-1 mb-3">
                </div>
                <div class="row">
                    <div class="col-md-3 mt-1 mb-1">
                        <input name="GDRReqTaxDetId" id="GDRReqTaxDetId" type="text" hidden oninput="MaxLengthInp(this,100)" placeholder="BPTaxId" class="form-control form-control-sm Tax_Info_inp" />
                        <label for="TaxId0">P.A.N.NO.</label>
                        <input name="TaxId0" id="TaxId0" type="text" oninput="MaxLengthInp(this,100)" placeholder="P.A.N.NO." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId1">P.A.N.Circle NO.</label>
                        <input name="TaxId1" id="TaxId1" type="text" oninput="MaxLengthInp(this,100)" placeholder="P.A.N. Circle NO." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId2">P.A.N.Ward NO.</label>
                        <input name="TaxId2" id="TaxId2" type="text" oninput="MaxLengthInp(this,100)" placeholder="P.A.N. Ward NO." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId3">P.A.N.Assessing Officer</label>
                        <input name="TaxId3" id="TaxId3" type="text" oninput="MaxLengthInp(this,100)" placeholder="P.A.N.Assessing Officer" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId4">Deductee Ref.No</label>
                        <input name="TaxId4" id="TaxId4" type="text" oninput="MaxLengthInp(this,100)" placeholder="Deductee Ref.No" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId5">LST/VAT No.</label>
                        <input name="TaxId5" id="TaxId5" type="text" oninput="MaxLengthInp(this,100)" placeholder="LST/VAT No." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId6">CST No.</label>
                        <input name="TaxId6" id="TaxId6" type="text" oninput="MaxLengthInp(this,100)" placeholder="CST No" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId7">TAN No.</label>
                        <input name="TaxId7" id="TaxId7" type="text" oninput="MaxLengthInp(this,100)" placeholder="TAN No" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId8">Service Tax No.</label>
                        <input name="TaxId8" id="TaxId8" type="text" oninput="MaxLengthInp(this,100)" placeholder="Service Tax No." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId9">Company Type</label>
                        <input name="TaxId9" id="TaxId9" type="text" oninput="MaxLengthInp(this,100)" placeholder="Company Type" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId10">Nature Of Business</label>
                        <input name="TaxId10" id="TaxId10" type="text" oninput="MaxLengthInp(this,100)" placeholder="Nature Of Business" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId11">Assessee Type</label>
                        <input name="TaxId11" id="TaxId11" type="text" oninput="MaxLengthInp(this,100)" placeholder="Assessee Type" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId12">TIN No.</label>
                        <input name="TaxId12" id="TaxId12" type="text" oninput="MaxLengthInp(this,100)" placeholder="TIN No." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId13">ITR Filling</label>
                        <input name="TaxId13" id="TaxId13" type="text" oninput="MaxLengthInp(this,100)" placeholder="ITR Filling" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="GSTINType"> GST Type</label>
                        <select name="GSTINType" id="GSTINType" type="text" class="form-control  form-control-sm Tax_Info_inp">
                            <option value="0">Regular </option>
                            <option value="1">Standard</option>

                        </select>
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="GSTINNo">GSTIN</label>
                        <input name="GSTINNo" id="GSTINNo" type="text" oninput="MaxLengthInp(this,100)" placeholder="GSTIN" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 mt-1 mb-1 ">
                        @* <button type="button" id="Tax_Info_btn" style="width:80px;" class="btn  mr-1 btn-sm btn-success">Save</button> *@
                        @* <button type="button" id="Pay_update_btn" style="width:80px;" class="btn  mr-1 btn-sm btn-primary">update</button> *@

                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var ItemDropdown, ItemNameDropdown, ServiceDropdown, CustomerDropdown, TaxDataDropdown, UOMDropdown, CurrencyDropdown, WarehouseDropdown, fromWarehouseDropdown, BranchDropdown, AggrimentDropdown
        AggrimentDropdown = `<select style='width:200px' class="form-control ServiceId select21 form-control-sm Form_Elem">
                                                                                        <option value="">Select Aggrement</option> </select>`;
        function Loader() {
            $(".Loader1").toggleClass('d-none');
        }

        // GET Warehouse
        {
            // Get  Location
            $.ajax({
                url: '@Url.Action("WAREHOUSE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select WareHouse </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].WhsId + "'>" + response[i].WhsName + "</option>";

                    }
                    $("#WhsId1").html(list);
                    $("#FromWhsId1").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
        }
        //SET Default Date
        {
            var DraftFlag = "";
            DefaultDate();
            function DefaultDate() {
                var date = new Date();
                var formattedDate = date.toISOString().split('T')[0];
                $("#PostingDt").val(formattedDate);
                $("#DocumentDt").val(formattedDate);
            }

        }
        //Add Attchmement and View Row
        {
            $('#Form_Resume_btn').click(function () {
                $('#DraftModal').modal('show');
            });
            $('.close').click(function () {
                $('#DraftModal').modal('hide');
            });
            //Region Attachment
            $("#Addrow").click(function () {
                var Index = $("#AttachmentTable tbody tr").length;
                var list = "<tr>";
                list += "<td>" + parseInt(Index + 1) + "</td>"; // Add the index to the first column
                list += "<td class='p-0' nowrap><input class='p-1 form-control form-control-sm selectfile' type='file' placeholder='Choose File'/></td>";
                list += "<td class='p-0 align-items-center Remark' nowrap><textarea style='height:34px!important;' class='form-control form-control-sm'></textarea></td>";
                list += "<td class=' align-items-center filename' nowrap></td>";
                list += "<td class=' align-items-center fileExt' nowrap></td>";
                list += "<td class=' align-items-center d-none fileData' nowrap></td>";
                list += "<td class=' align-items-center d-none attachId' nowrap></td>";
                list += "<td class='text-center p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 ViewAttchment btn-sm btn-primary'>View</button></td>";
                list += "<td class='text-center p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 DeleteAttchment btn-sm btn-danger'>Delete</button></td>";
                list += "</tr>";
                $("#AttachmentTable tbody").append(list);
            });
            $(document).on("change", ".selectfile", function () {
                var tableRow = $(this).closest('tr');
                var fileInput = $(this)[0];
                if (fileInput.files.length > 0) {
                    var file = fileInput.files[0];
                    var fileName = file.name;
                    var fileExt = fileName.split('.').pop().toLowerCase();
                    tableRow.find(".filename").text(fileName); // Display file name
                    tableRow.find(".fileExt").text(fileExt);
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var fileData = e.target.result;
                        tableRow.find(".fileData").text(fileData); // Display file data or handle it as needed
                    };
                    if (fileExt === 'xls' || fileExt === 'xlsx' || fileExt === 'csv') {
                        reader.readAsBinaryString(file);
                    } else {
                        reader.readAsDataURL(file);
                    }
                }
            });
            $(document).on("click", ".ViewAttchment", function () {
                var tableRow = $(this).closest('tr');
                var fileData = tableRow.find(".fileData").text();
                var fileExt = tableRow.find(".fileExt").text();
                var filename = tableRow.find(".filename").text();
                $('.document-viewer').html("");
                $('.pdfdocument-viewer').html("");
                if (fileExt === 'xls' || fileExt === 'xlsx') {
                    var workbook = XLSX.read(fileData, { type: 'binary' });
                    var sheetName = workbook.SheetNames[0];
                    var excelData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], { header: 1 });
                    var tableHtml = '<table class="table table-bordered table-striped   table-hover table-bordered w-100" border="1px">';
                    for (var i = 0; i < excelData.length; i++) {
                        tableHtml += '<tr>';
                        for (var j = 0; j < excelData[i].length; j++) {
                            var cellValue = excelData[i][j];
                            var colspan = 1;
                            while (j + colspan < excelData[i].length && excelData[i][j + colspan] === cellValue) {
                                colspan++;
                            }
                            if (colspan > 1) {
                                tableHtml += '<td colspan="' + colspan + '">' + cellValue + '</td>';
                                j += colspan - 1;
                            } else {
                                tableHtml += '<td>' + cellValue + '</td>';
                            }
                        }

                        tableHtml += '</tr>';
                    }
                    tableHtml += '</table>';
                    $(".document-viewer").html(tableHtml);
                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (fileExt === 'csv') {
                    // Render CSV file as HTML table
                    var csvData = Papa.parse(fileData, { header: true, skipEmptyLines: true });
                    var tableHtml = '<table class="table table-bordered table-striped   table-hover table-bordered w-100">';
                    csvData.data.forEach(function (row) {
                        tableHtml += '<tr>';
                        for (var key in row) {
                            tableHtml += '<td>' + row[key] + '</td>';
                        }
                        tableHtml += '</tr>';
                    });
                    tableHtml += '</table>';

                    $(".document-viewer").html(tableHtml);

                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:text/csv;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (fileExt === 'pdf') {
                    renderPdf(fileData);
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:application/pdf;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (['jpg', 'jpeg', 'png', 'gif'].includes(fileExt)) {
                    var imageHtml = '<img src="' + fileData + '" />';
                    $(".document-viewer").html(imageHtml);
                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', fileData);
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                }
                else {
                    //  $(".document-viewer").text('Unsupported document type.');
                    // $('.downloadLink').hide();
                }
                $("#DocumentViewer").fadeIn();
            });
            function renderPdf(pdfData) {
                if (pdfData) {
                    const objectElement = $('<object>');
                    objectElement.attr('data', pdfData);
                    objectElement.attr('type', 'application/pdf');
                    objectElement.css('width', '100%');
                    objectElement.css('height', '700px');
                    $('.pdfdocument-viewer').html(objectElement);
                } else {
                    $('.pdfdocument-viewer').text('No Data Found!');
                }
            }
        }
        //Get Dropdown
        {
            var ItemData = [];
            var TaxData1 = [];
            var WarehouseData = [];
            var CustomerData = [];
            var UOMCODEData = [];
            var SERVICECODEData = [];
            var Branchdata = [];
            var CurrencyData = [];
            //Get Item
            $.ajax({
                url: '@Url.Action("ITEM", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        ItemData = response;
                        ItemDropdown = `<select data-value="A" style='width:200px' class="form-control ItemId select21 form-control-sm Form_Elem">
                                                     <option value="">Select Item</option> ${ItemData.map(item => `<option value="${item.ItemId}">${item.ItemCode}</option>`).join('')}</select>`;
                        ItemNameDropdown = `<select data-value="A" style='width:200px' class="form-control ItemName select21 form-control-sm Form_Elem">
                                                         <option value="">Select Item</option> ${ItemData.map(item => `<option value="${item.ItemId}">${item.ItemName}</option>`).join('')}</select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //TAXCODE
            $.ajax({
                url: '@Url.Action("TAXCODE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        TaxData1 = response;
                        TaxDataDropdown = `<select style='width:140px' class="form-control  TaxCodeId form-control-sm Form_Elem">
                                                                                            <option value="">Select Tax</option> ${TaxData1.map(item => `<option value="${item.TaxCodeId}">${item.TaxCode}</option>`).join('')}</select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //GET Vendor
            $.ajax({
                url: '@Url.Action("BUSINESSPARTNER", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        CustomerData = response;
                        CustomerDropdown = `<option value="">Select Business Partner</option>  ${CustomerData.map(item => `<option value="${item.BPId}">${item.BPCode}-${item.BPName} </option>`).join('')}`;
                        $("#BPId").html(CustomerDropdown);
                        CustomerDropdown = `<option value="">Select Consolidating Business Partner</option>  ${CustomerData.map(item => `<option value="${item.BPId}">${item.BPCode}-${item.BPName} </option>`).join('')}`;
                        $("#ConsolidatingBPId").html(CustomerDropdown);
                        checkCopyTo()
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //GET WAREHOUSE
            $.ajax({
                url: '@Url.Action("WAREHOUSE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    WarehouseData = response;
                    WarehouseDropdown = `<select style='width:160px' class="form-control  WhsId form-control-sm Form_Elem">
                                                                                                                        <option value="">Select Warehouse</option> ${WarehouseData.map(item => `<option value="${item.WhsId}">${item.WhsName}</option>`).join('')} </select>`;
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // //Get Price List
            $.ajax({
                url: '@Url.Action("PriceList", "GoodsReceipt")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select Price List </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].PListId + "'>" + response[i].PListName + "</option>";
                    }
                    $("#PListId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            //GET WAREHOUSE
            var fromWarehouseDropdown = '<select><option value="">Loading...</option></select>';

            // AJAX call to populate the dropdown
            $.ajax({
                url: '@Url.Action("WAREHOUSE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    WarehouseData = response;
                    fromWarehouseDropdown = '<select><option value="">Select Warehouse</option>';
                    WarehouseData.forEach(function (item) {
                        fromWarehouseDropdown += '<option value="' + item.WhsId + '">' + item.WhsName + '</option>';
                    });
                    fromWarehouseDropdown += '</select>';
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });


            //Get UOMCODE
            $.ajax({
                url: '@Url.Action("UOMCODE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        UOMCODEData = response;
                        UOMDropdown = `<select style='width:140px' class="form-control  select21 UomId form-control-sm Form_Elem">
                                                                                            <option value="">Select UOM</option> ${UOMCODEData.map(item => `<option value="${item.UomId}">${item.UomCode}</option>`).join('')} </select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //Get country
            $.ajax({
                url: '@Url.Action("COUNTRY", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        CurrencyData = response;
                        var Option = ` <option value="">Select Currency</option> ${CurrencyData.map(item => `<option value="${item.CntryId}">${item.CntryCurrCode}</option>`).join('')}`;
                        $("#CntryId").html(Option);
                        CurrencyDropdown = `<select style='width:140px' class="form-control select21 CntryId form-control-sm Form_Elem">
                                                                                 <option value="">Select Currency</option> ${CurrencyData.map(item => `<option value="${item.CntryId}">${item.CntryCurrCode}</option>`).join('')} </select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //SAC CODE
            $.ajax({
                url: '@Url.Action("SAC", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        SERVICECODEData = response;
                        ServiceDropdown = `<select style='width:200px' class="form-control ServiceId select21 form-control-sm Form_Elem">
                                                                                        <option value="">Select Service</option>${SERVICECODEData.map(item => `<option value="${item.ServiceId}">${item.ServiceName}</option>`).join('')} </select>`;
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });

            // Get STATE
            $.ajax({
                url: '@Url.Action("STATE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Place of Supply</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].StateId + "'>" + response[i].StateCode + "-" + response[i].StateName + "</option>";
                        }
                        $("#StateId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // get finacial year
            var FyData;
            $.ajax({
                url: '@Url.Action("FINACIALY", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        FyData = response;
                        let list = "<option value=''>Select Financial Year</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].FinyrId + "'>" + response[i].Finyr + "</option>";
                        }
                        $("#FinyrId").html(list);

                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // Event FinyrId Change
            $("#FinyrId").change(function () {
                var Id = $(this).val();
                if (Id == "") {
                    $("#FinyrNum").prop('readonly', true).val("");
                    return false;
                }
                for (var i = 0; i < FyData.length; i++) {
                    if (Id == FyData[i].FinyrId) {
                        if (FyData[i].Finyr.trim() == "Manual") {
                            $("#FinyrNum").prop('readonly', false).val(FyData[i].FinyrStNum);
                        } else {
                            $("#FinyrNum").prop('readonly', true).val(FyData[i].FinyrStNum);
                        }
                        return; // Exit the loop once a match is found
                    }
                }
            });
            // GET Branch

            $.ajax({
                url: '@Url.Action("GET", "BranchMaster")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    Branchdata = response;
                    let list = "<option value=''>Select Branch</option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].BrchId + "'>" + response[i].BrchName + "</option>";
                    }
                    BranchDropdown = `<select style='width:140px' class="form-control  ItemBrchId form-control-sm Form_Elem">
                                                                                                                                <option value="">Select Branch</option> ${Branchdata.map(item => `<option value="${item.BrchId}">${item.BrchName}</option>`).join('')} </select>`;
                    $("#BrchId").html(list);
                    $("#BrchId").val(@BrchId).trigger("change");
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            $("#BrchId").change(function () {
                var ID = $(this).val();
                var requester = Branchdata.find(item => item.BrchId == ID);
                if (requester) {
                    $("#BrchGSTINNo").val(requester.BrchGSTINNo);
                } else {
                    $("#BrchGSTINNo").val("");
                }
            })

            // Get  Owner
            $.ajax({
                url: '@Url.Action("EMPLOYEE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select Owner </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].EmpId + "'>" + response[i].EmpFname + "   " + response[i].EmpLname + "</option>";

                    }
                    $("#EmpId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            // Get  SALESEMPLOYEE
            $.ajax({
                url: '@Url.Action("SALESEMPLOYEE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select Sales Employee </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].SalsEmpId + "'>" + response[i].SalsEmpName + "</option>";

                    }
                    $("#SalsEmpId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            // Get  Location
            $.ajax({
                url: '@Url.Action("LOCATION", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select Location </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].LocId + "'>" + response[i].LocName + "</option>";

                    }
                    $("#LocId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            //Get Department
            $.ajax({
                url: '@Url.Action("DEPARTMENT", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    let list = "<option value=''>Select Department </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].DeptId + "'>" + response[i].DeptName + "</option>";
                    }
                    $("#DeptId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
            //Shiping Type
            $.ajax({
                url: '@Url.Action("SHIPINGTYPE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Shipping Type </option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].ShipTypeId + "'>" + response[i].ShipTypeName + "</option>";
                        }
                        $("#ShipTypeId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // Get Payment terms
            $.ajax({
                url: '@Url.Action("GET", "PaymentTerms")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    PayTearmsData = response;
                    let list = "<option value=''>Select Payment Terms</option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].PymntTId + "'>" + response[i].PymntCode + "</option>";
                    }
                    $("#PymntTId").html(list);
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
        }
        //Event Input
        {

            $(document).on("change", ".BarCodeInp", function () {
                var BarcodeEANType = "12";
                var currentval = $(this).val();
                var $row = $(this).closest("tr");
                var BarCode = CreateBarcode(currentval, BarcodeEANType)
                $(this).val(BarCode);
                $.ajax({
                    url: '@Url.Action("GETBARCODEID", "GetDropdownData")',
                    type: 'GET',
                    data: { "Barcode": BarCode },
                    dataType: 'json',
                    success: function (response) {
                        if (response.length > 0) {
                            $row.find('.Tbl_ItemName select').val(response[0].ItemId).trigger("change");
                        } else {
                            $(this).val("");
                            swal.fire("Item Not Found", "Please Check Barcode...!", "warning");
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            })

            function CreateBarcode(IncrementCount, EANType1) {
                const EANType = parseInt(EANType1);
                let Barcode = "";
                let IncrementCountlength = IncrementCount.length;
                var Val1 = EANType - IncrementCountlength;
                for (i = 0; i < Val1; i++) {
                    Barcode += "0";
                }
                Barcode += IncrementCount;
                if (Barcode.length == EANType) {
                    return Barcode;
                } else {
                    notify("PLese Check Out Your Prifix Values Or Initial Count ", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    return false;
                }
            }


            // Item Name Change
            $(document).on("change", ".ItemName", function () {
                var $row = $(this).closest("tr");
                var itemId = $(this).val();
                var data = $(this).data('value');
                if (data == "A") {
                    $row.find('.Tbl_ItemId select').data("value", "M"); // Update data attribute value
                    $row.find('.Tbl_ItemId select').val(itemId).trigger("change");
                    ItemChange($row, itemId);
                    LoadWhs(itemId, $row)
                    GetBarcode(itemId, $row)
                }
                $(this).data("value", "A"); // Update data attribute value for ItemName
            });

            // Item Id Change
            $(document).on("change", ".ItemId", function () {
                var $row = $(this).closest("tr");
                var itemId = $(this).val();
                var data = $(this).data('value');
                if (data == "A") {
                    $row.find('.Tbl_ItemName select').data("value", "M"); // Update data attribute value
                    $row.find('.Tbl_ItemName select').val(itemId).trigger("change");
                    ItemChange($row, itemId);
                    LoadWhs(itemId, $row)
                    GetBarcode(itemId, $row)
                }
                $(this).data("value", "A"); // Update data attribute value for ItemId
            });
            function LoadWhs(ItemId, $row) {
                $.ajax({
                    url: '@Url.Action("WAREHOUSEVIAITEM", "GetDropdownData")',
                    type: 'GET',
                    dataType: 'json',
                    data: { "ItemCode": ItemId },
                    success: function (response) {
                        var Options = `<option value="">Select Warehouse</option>
                                           ${response.map(item => `<option value="${item.WhsId}">${item.WhsName}</option>`).join('')}`;
                        $row.find(".Tbl_WhsId select").html(Options);
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            // Get Barcode
            function GetBarcode(ItemId, $row) {
                $.ajax({
                    url: '@Url.Action("GETBARCODENAME", "GetDropdownData")',
                    type: 'GET',
                    dataType: 'json',
                    data: { "ItemId": ItemId },
                    success: function (response) {
                        if (response.length > 0) {
                            $row.find('.Tbl_BarCode input').val(response[0].BarCode);
                        } else {
                            $row.find('.Tbl_BarCode input').val("");
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            //Item Id Change
            function ItemChange($row, itemId) {
                $row.find('.Tbl_UomId select').val("").trigger("change");
                $row.find('.Tbl_CntryId select').val("").trigger("change");
                $row.find('.Tbl_TaxCodeId select').val("").trigger("change");
                $row.find('.Tbl_InfoPrice input').val(0.00);
                $row.find('.Tbl_Hsn').text("");
                $row.find('.Tbl_Qty input').val(1);
                $row.find('.Tbl_BarCode input').val("");
                // Find the item in ItemData array
                var item = ItemData.find(item => item.ItemId == itemId);
                if (item) {
                    // Populate and select the UOM
                    $.ajax({
                        url: '@Url.Action("UOMCODES", "GetDropdownData")',
                        type: 'GET',
                        dataType: 'json',
                        data: { "ItemId": itemId },
                        success: function (response) {

                            var Tablelength = $("#Table1 tbody tr").length;
                            var Selectedvalue = Tablelength >= 2 ? $("#Table1 tbody tr").eq(0).find(".Tbl_UomId select").val() : "";

                            var Options = `<option value="">Select UOM</option>
                            ${response.map(uom => `<option value="${uom.UomId}" ${uom.UomId == Selectedvalue ? 'selected' : ''}>${uom.UomName}</option>`).join('')}`;
                            $row.find(".Tbl_UomId select").html(Options).val(item.PurUOM);
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                    $row.find('.Tbl_UomId select').val(item.PurUOM).trigger("change");
                    $row.find('.Tbl_CntryId select').val(item.CntryId).trigger("change");
                    $row.find('.Tbl_Hsn').text(item.HSNNo);
                    // $row.find('.Tbl_Weight').text(item.SalsWeight || 0);
                    $row.find('.Tbl_Qty input').val(1);
                    var barcodeId = item.BarCodeId;
                    if (barcodeId) {
                        $.ajax({
                            url: '@Url.Action("GETBARCODE", "InventoryTransfer")',
                            type: 'GET',
                            data: { BarCodeId: barcodeId },
                            dataType: 'json',
                            success: function (response) {
                                if (response.length > 0) {
                                    $row.find('.Tbl_BarCode input').val(response[0].BarCode);
                                }
                            },
                            error: function (error) {
                                handleError(error);
                            }
                        });
                    } else {
                        $row.find('.Tbl_BarCode').val("");
                    }
                    var priceListId = item.PListId;
                    $.ajax({
                        url: '@Url.Action("GETPRICE", "Delivery")',
                        type: 'GET',
                        data: { Itemid: itemId, Pricelistid: priceListId },
                        dataType: 'json',
                        success: function (response) {
                            var basePrice = response.length > 0 ? parseFloat(response[0].Price).toFixed(2) : "0.00";
                            bindBCPrice(basePrice);

                            $row.find('.Tbl_InfoPrice input').val(basePrice);
                            $row.find('.Tbl_ActualPrice').text(basePrice);
                            Calculation($row);
                        },
                        error: function (xhr, status, error) {
                            console.log("AJAX Error:", status, error);
                            handleError(xhr.responseText);
                        }
                    });
                }
            }
            function handleError(error) {
                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                console.error('Error:', error.responseText);
            }

            //Warehose Change
            var MyLoc;
            $(document).on("change", ".WhsId, .WhsId1", function () {
                var $row = $(this).closest("tr");
                var Id = $(this).val();
                var ItemId = $row.find('.Tbl_ItemId select').val();
                if (Id == "" || Id == null || Id == undefined) {
                    $row.find('.Tbl_ItemBrchId select').val("").trigger("change");
                    $row.find('.Tbl_LocName').text("");
                    $row.find('.Tbl_WhsQty_Input').val(""); // Clear the quantity field

                    return false;
                }
                var data = WarehouseData.find(item => item.WhsId == Id);
                if (data) {
                    var BrchId = data.BrchId;
                    $.ajax({
                        url: '@Url.Action("LOCATIONNAME", "GetDropdownData")',
                        type: 'GET',
                        data: { BranchId: BrchId },
                        success: function (response) {
                            if (response && response.length > 0) {
                                var LocName = response[0].LocName;
                                MyLoc = LocName
                                $row.find('.Tbl_LocName').text(LocName);
                            } else {
                                $row.find('.Tbl_LocName').text(""); // Clear if no data returned
                            }
                            LoadWhsQty(ItemId, Id, $row);
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching location name:', error);
                            $row.find('.Tbl_LocName').text(""); // Clear on error
                        }
                    });
                }
            })
            function LoadWhsQty(ItemId, WhsId, $row) {
                $.ajax({
                    url: '@Url.Action("WAREHOUSEQTY", "GetDropdownData")',
                    type: 'GET',
                    dataType: 'json',
                    data: { "ItemId": ItemId, "WhsId": WhsId },
                    success: function (response) {
                        if (response.length > 0 && response[0].WhsQty !== undefined) {
                            $row.find(".Tbl_WhsQty_Input").val(response[0].WhsQty);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error:", status, error);
                    }
                });
            }
            //calculated Input Change
            $(document).on("input", ".InfoPrice,.Qty", function () {
                var $row = $(this).closest("tr"); // Cache the jQuery object for the current row

                // Convert text values to numbers for comparison
                var OpenQty = parseFloat($row.find('.Tbl_OpenQty').text());
                var Qty = parseFloat($row.find('.Tbl_Qty input').val());
                var BaseDocType = $row.find('.Tbl_BaseDocType').text();
                if ($(this).val() < 1) {
                    $(this).val(1);
                    Swal.fire("<h5>Not Allowed To Enter Negative Values...!</h5>", '', 'warning');
                    Calculation($row);
                    return false;
                } else {
                    if (BaseDocType == "") {
                        Calculation($row);
                    } else {
                        if (Qty <= OpenQty && BaseDocType !== "") {
                            Calculation($row);
                        } else {
                            $row.find('.Tbl_Qty input').val(OpenQty)
                            Swal.fire("<h5>Quantity Should Be Less Than Or Equal To Base Document Item Open Quantity...!</h5>", "", "warning");
                        }
                    }
                }
            });

            $(document).on("input", ".DisPer", function () {
                var $row = $(this).closest("tr"); // Cache the jQuery object for the current row
                // Convert text values to numbers for comparison
                var OpenQty = parseFloat($row.find('.Tbl_OpenQty').text());
                var Qty = parseFloat($row.find('.Tbl_Qty input').val());
                var BaseDocType = $row.find('.Tbl_BaseDocType').text();
                if ($(this).val() < 0) {
                    $(this).val(0);
                    Swal.fire("<h5>Not Allowed To Enter Negative Values...!</h5>", '', 'warning');
                    Calculation($row);
                    return false;
                } else {
                    Calculation($row);
                }
            });
            $(document).on("change", ".TaxCodeId", function () {
                var $row = $(this).closest("tr");
                Calculation($row);
            });
            var AddressDetails = [];
            // BPID Change
            $("#BPId").change(function () {
                var ID = $(this).val();
                var Data = CustomerData.find(item => item.BPId == ID);
                $("#CurSource").val("").trigger('change');
                $("#CntryId").val("").trigger('change');
                $("#StateId").val("").trigger('change');
                $("#PymntTId").val("").trigger('change');
                $("#BPContPerId").html(` <option value="">Select Contact Person</option>`)
                if (Data) {
                    $("#CurSource").val(Data.BPCurrType).trigger('change');
                    $("#CntryId").val(Data.CntryId).trigger('change');
                    $("#StateId").val(Data.StateId).trigger('change');
                    $("#PymntTId").val(Data.PymntTId).trigger('change');
                }
                //Aggriment Detail
                if (ID) {
                    $.ajax({
                        url: '@Url.Action("GETBLANKETAGGRIMENT", "InventoryTransferRequest")',
                        type: 'GET',
                        data: { Id: ID },
                        dataType: 'json',
                        success: function (response) {
                            if (response.length > 0) {
                                AggrimentDropdown = `<select style='width:200px' class="form-control ServiceId select21 form-control-sm Form_Elem">
                                                                                                            <option value="">Select Aggrement</option>${response.map(item => `<option value="${item.BlKAId}">${item.BlKAId}</option>`).join('')} </select>`;
                            } else {
                                AggrimentDropdown = `<select style='width:200px' class="form-control ServiceId select21 form-control-sm Form_Elem">
                                                                                                    <option value="">Select Aggrement</option> </select>`;
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                    $.ajax({
                        url: '@Url.Action("BPADDRESS", "GetDropdownData")',
                        type: 'GET',
                        data: { BPID: ID },
                        dataType: 'json',
                        success: function (response) {
                            if (response.length > 0) {
                                AddressDetails = response;
                                var Dropdown = `<option value="">Select Ship To</option> ${response.filter(item => item.AddrType === 'S') // Filter out items where AddrType is not 'B'
                                    .map(item => `<option value="${item.BPAddrId}">${item.Addr}</option>`)
                                    .join('')}`;
                                $("#BPAddrId").html(Dropdown);

                                for (var i = 0; i < response.length; i++) {
                                    if (response[i].AddrType == "B") {
                                        $("#BillToAddr").val(response[i].Addr);
                                    } else {
                                        $("#ShipToAddr").val(response[i].Addr);
                                    }
                                }
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });

                    $.ajax({
                        url: '@Url.Action("BPCONTACTPERSON", "GetDropdownData")',
                        type: 'GET',
                        data: { BPID: ID },
                        dataType: 'json',
                        success: function (response) {
                            if (response.length > 0) {
                                var Dropdown = ` <option value="">Select Contact Person</option> ${response.map(item => `<option value="${item.BPContDetId}">${item.Title} ${item.Fname} ${item.Lname}</option>`).join('')}`;
                                $("#BPContPerId").html(Dropdown);
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
            })
            $("#BPAddrId").change(function () {
                var Id = $(this).val();
                var Data = AddressDetails.find(item => item.BPAddrId == Id);
                if (Data) {
                    $("#GSTINNo").val(Data.GSTINNo)
                }
            })
            function LOADBPDATA(BPContPerId, BPAddrId) {
                var ID = $("#BPId").val();
                var Data = CustomerData.find(item => item.BPId == ID);
                // $("#CurSource").val("").trigger('change');
                // $("#CntryId").val("").trigger('change');
                // $("#StateId").val("").trigger('change');
                // $("#PymntTId").val("").trigger('change');
                // $("#BPContPerId").html(` <option value="">Select Contact Person</option>`)
                // if (Data) {
                //     $("#CurSource").val(Data.BPCurrType).trigger('change');
                //     $("#CntryId").val(Data.CntryId).trigger('change');
                //     $("#StateId").val(Data.StateId).trigger('change');
                //     $("#PymntTId").val(Data.PymntTId).trigger('change');
                // }
                //Aggriment Detail
                if (ID) {
                    $.ajax({
                        url: '@Url.Action("GETBLANKETAGGRIMENT", "InventoryTransferRequest")',
                        type: 'GET',
                        data: { Id: ID },
                        dataType: 'json',
                        success: function (response) {
                            if (response.length > 0) {
                                AggrimentDropdown = `<select style='width:200px' class="form-control ServiceId select21 form-control-sm Form_Elem">
                                                                                                                <option value="">Select Aggrement</option>${response.map(item => `<option value="${item.BlKAId}">${item.BlKAId}</option>`).join('')} </select>`;
                            } else {
                                AggrimentDropdown = `<select style='width:200px' class="form-control ServiceId select21 form-control-sm Form_Elem">
                                                                                                        <option value="">Select Aggrement</option> </select>`;
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                    $.ajax({
                        url: '@Url.Action("BPADDRESS", "GetDropdownData")',
                        type: 'GET',
                        data: { BPID: ID },
                        dataType: 'json',
                        success: function (response) {
                            if (response.length > 0) {
                                var Dropdown = `<option value="">Select Ship To</option> ${response.filter(item => item.AddrType === 'S') // Filter out items where AddrType is not 'B'
                                    .map(item => `<option value="${item.BPAddrId}">${item.Addr}</option>`)
                                    .join('')}`;
                                $("#BPAddrId").html(Dropdown);
                                $("#BPAddrId").val(BPAddrId).trigger("change");

                                for (var i = 0; i < response.length; i++) {
                                    if (response[i].AddrType == "B") {
                                        $("#BillToAddr").val(response[i].Addr);
                                    } else {
                                        $("#ShipToAddr").val(response[i].Addr);
                                    }
                                }
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });

                    $.ajax({
                        url: '@Url.Action("BPCONTACTPERSON", "GetDropdownData")',
                        type: 'GET',
                        data: { BPID: ID },
                        dataType: 'json',
                        success: function (response) {
                            if (response.length > 0) {
                                var Dropdown = ` <option value="">Select Contact Person</option> ${response.map(item => `<option value="${item.BPContDetId}">${item.Title} ${item.Fname} ${item.Lname}</option>`).join('')}`;
                                $("#BPContPerId").html(Dropdown);
                                $("#BPContPerId").val(BPContPerId).trigger("change");
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
            }
            // Bind event handler for RequiredDt input field
            // $('#RequiredDt').on('change', function () {
            //     var dateValue = $(this).val();
            //     $('.ItemReqdDt').val(dateValue);
            // });
            //$('#Status').on('change', function () {
            //    var Status = $(this).val();
            //    if (Status == "O") {
            //        $("#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", false);
            //    } else {
            //         $("#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", true);
            //    }
            //});
            //Discount Event
            $(document).on('input', '.Discountinp', function () {
                var discount = parseFloat($(this).val());
                if (isNaN(discount)) {
                    $(this).val(0.00);
                } else if (discount >= 100) {
                    $(this).val(100);
                } else {
                    $(this).val(discount);
                }
            });
            setDefaultStatus();
            $('#DocumentDt').on('change', function () {
                setDefaultStatus();
            });
            function setDefaultStatus() {
                var termDateValue = $('#DocumentDt').val();
                if (termDateValue === '') {
                    $('#ItemRowStatus').val('O');
                } else {
                    $('#ItemRowStatus').val('C');
                }
            }
            $("#DocType").click(function () {
                $(this).data("Flag", "Manual");
            })
            $('#DocType').change(function () {
                var parameter = $(this).data("Flag");
                if (parameter == "Manual") {
                    var selectedValue = $(this).val();
                    var TotPayDue = $("#TotPayDue").val();
                    if (TotPayDue <= 0) {
                        ApplyDetailstable([], "Table1")
                        return false;
                    } else {
                        if (selectedValue != "") {
                            Swal.fire({
                                title: 'Are you sure?',
                                text: 'You lost All Added Item Data In Table..!',
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonText: 'Continue',
                                confirmButtonColor: 'red',
                                cancelButtonText: 'Cancel'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    ApplyDetailstable([], "Table1")
                                } else if (result.dismiss === Swal.DismissReason.cancel) {
                                    Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                                    if (selectedValue == "S") {
                                        $('#DocType').val("I")
                                    } else {
                                        $('#DocType').val("S")
                                    }
                                }
                            });
                        }
                    }
                }
            });
        }
        // function to infoprice change event
        {

            function bindBCPrice(valueBCPrice) {
                $("#Table1").on("input", ".InfoPrice", function () {
                    var value = $(this).val();
                    var row = $(this).closest('tr'); // Get the current row
                    var AcPrice = row.find('.Tbl_ActualPrice').text();

                    if (value == valueBCPrice) {
                        row.find('.Tbl_PriceUpd').text("A");
                    } else {
                        row.find('.Tbl_PriceUpd').text("M");
                    }

                    if (value == AcPrice) {
                        row.find('.Tbl_PriceUpd').text("A");
                    } else {
                        row.find('.Tbl_PriceUpd').text("M");
                    }
                });
            }
        }
        // warehouse selction
        {
            $('#FromWhsId1').change(function () {
                var fromWarehouse = $(this).val();
            });
            $('#WhsId1').change(function () {
                var toWarehouse = $(this).val();
            });
        }
        //Region Add Details
        {
            $("#AddCpd").click(function () {
                var row = "";
                var tablelength = $("#Table1 tbody tr").length;
                var fromWhsId = $('#FromWhsId1').val();
                var toWhsId = $('#WhsId1').val();

                if (tablelength > 0) {
                    var Lastrow = $("#Table1 tbody tr:last"),
                        BPId = $(".Tbl_BPId select").val(),
                        DocType = $("#DocType").val(),
                        BP = $("#BPId").val(),
                        PlaseOfSupply = $("#StateId").val(),
                        Closet = Lastrow.closest("tr"),
                        ItemId = Closet.find(".Tbl_ItemId select").val(),
                        ServiceId = Closet.find(".Tbl_ServiceId select").val(),
                        ItemBrchId = Closet.find(".Tbl_ItemBrchId select").val(),
                        Taxcode = Closet.find(".Tbl_TaxCodeId select").val(),
                        BlKAId = Closet.find(".Tbl_BlKAId select").val();
                    Location = Closet.find(".Tbl_LocName").text();

                    if (BP === "") {
                        Swal.fire("Please Select Business Partner..!", "", "warning");
                        $("#BPId").addClass("border-danger");
                        return false;
                    } else {
                        $("#BPId").removeClass("border-danger");
                    }
                    if (PlaseOfSupply === "") {
                        Swal.fire("Please Select Place Of Supply..!", "", "warning");
                        $("#StateId").addClass("border-danger");
                        return false;
                    } else {
                        $("#StateId").removeClass("border-danger");
                    }
                    var ItemHide = "";
                    var ServeiceHide = "";
                    if (DocType == "S") {
                        ItemHide = "d-none"
                        ServeiceHide = ""
                        if (ServiceId === "" || ServiceId === "0") {
                            Swal.fire("Please Add Service Details In Last Row", "", "warning");
                            return false;
                        }
                    } else {
                        ItemHide = "";
                        ServeiceHide = "d-none";
                        if (ItemId === "") {
                            Swal.fire("Please Add Record In Last Row", "", "warning");
                            return false;
                        }
                        if (toWhsId === "") {
                            Swal.fire("Please Add Warehouse In Last Row", "", "warning");
                            Closet.find(".Tbl_WhsId select").addClass("border-danger");
                            return false;
                        } else {
                            Closet.find(".Tbl_WhsId select").removeClass("border-danger");
                        }
                    }

                    row += "<tr>";
                    row += "<td>" + parseInt(tablelength + 1) + "</td>";
                    row += `<td><i class="fa fa-edit CPDtable_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  CPDtable_delete"></i></td>`;
                    row += `<td class='text-center Tbl_BarCode ${ItemHide}'>0</td>`;
                    row += "<td class=' d-none text-center Tbl_LineNum'></td>";
                    row += "<td class=' d-none text-center tbl_Main_ID'></td>";
                    row += "<td class=' d-none text-center Tbl_PurReqId'>" + $("#InvTransReqId").val() + "</td>";

                    row += `<td class='text-center Tbl_ItemId ${ItemHide}'></td>`;
                    row += `<td class='text-center Tbl_ItemName ${ItemHide}'></td>`;
                    row += `<td class='text-center Tbl_ServiceId ${ServeiceHide}'></td>`;
                    row += `<td class='text-center Tbl_Qty ${ItemHide}'> 1</td>`;
                    row += `<td class='text-right Tbl_QtyInWhs ${ItemHide}'> 0</td>`;
                    row += `<td class='text-center Tbl_UomId  ${ItemHide} text-center'></td>`;
                    row += `<td class='text-center Tbl_FromWhsId ${ItemHide} text-center'>${fromWhsId}</td>`;
                    row += `<td class='text-center Tbl_WhsId ${ItemHide} text-center'>${toWhsId}</td>`;
                    row += `<td class='text-center Tbl_LocName'>${MyLoc ? MyLoc : Location}</td>`;
                    row += `<td class='text-center Tbl_Remarks'></td>`;
                    row += "<td class='text-center Tbl_BaseDocLineNum'></td>";
                    row += "<td class='text-center Tbl_BaseDocEntry'></td>";
                    row += "<td class='text-center Tbl_BaseDocType'></td>";
                    row += `<td class='text-right Tbl_OpenQty'>0</td>`;
                    row += `<td class='text-right Tbl_RowStatus'>O</td>`;
                    row += "</tr>";

                    var dataTable = $('#Table1').DataTable();
                    var newRow = $(row).appendTo('#Table1 tbody');
                    dataTable.row.add(newRow).draw(false);
                    $('.select21').css({ width: "120px", backgroundColor: "white" }).select2();
                }
            })
        }
        // Item  Table Calculation
        {
            // Calculate Discount Amount
            $(document).on("change", "#DisAmt", function () {
                var Discountper = $("#DisPer").val() || 0;
                var DiscountAmt = $("#DisAmt").val() || 0;
                var TotPayDue = 0;
                var rows = $("#Table1 tbody tr");
                var InfoPrice = 0, DisPer = 0;
                rows.each(function () {
                    var row = $(this); // Current row
                    InfoPrice = parseFloat(row.find(".Tbl_InfoPrice input").val()) || 0;
                    DisPer = parseFloat(row.find('.Tbl_DisPer input').val()).toFixed(2) || 0;
                    var Qty = parseFloat(row.find('.Tbl_Qty input').val()).toFixed(2) || 0;
                    if (DisPer != 0) {
                        var DisAmt = (InfoPrice * (DisPer / 100));
                        if (DisAmt > 0) {
                            TotPayDue += (InfoPrice - DisAmt) * Qty;
                        } else {
                            TotPayDue += InfoPrice * Qty;;
                        }
                    }
                    else {
                        if (InfoPrice > 0) {
                            TotPayDue += InfoPrice * Qty;
                        } else {
                            TotPayDue += InfoPrice;
                        }
                    }
                });
                Discountper = (DiscountAmt / TotPayDue) * 100;
                $("#DisPer").val(parseFloat(Discountper).toFixed(2) || 0);
                CalculateHeaderDiscount()
            })
            $(document).on("change", "#DisPer", function () {
                var Discountper = $("#DisPer").val() || 0;
                var DiscountAmt = $("#DisAmt").val() || 0;
                var TotPayDue = 0;
                var rows = $("#Table1 tbody tr");
                var InfoPrice = 0, DisPer = 0;
                rows.each(function () {
                    var row = $(this); // Current row
                    InfoPrice = parseFloat(row.find(".Tbl_InfoPrice input").val()) || 0;
                    DisPer = parseFloat(row.find('.Tbl_DisPer input').val()).toFixed(2) || 0;
                    var Qty = parseFloat(row.find('.Tbl_Qty input').val()).toFixed(2) || 0;
                    if (DisPer != 0) {
                        var DisAmt = (InfoPrice * (DisPer / 100));
                        if (DisAmt > 0) {
                            TotPayDue += (InfoPrice - DisAmt) * Qty;
                        } else {
                            TotPayDue += InfoPrice * Qty;;
                        }
                    }
                    else {
                        if (InfoPrice > 0) {
                            TotPayDue += InfoPrice * Qty;
                        } else {
                            TotPayDue += InfoPrice;
                        }
                    }
                });
                if (Discountper > 0) {
                    DiscountAmt = TotPayDue * (Discountper / 100);
                    $("#DisAmt").val(parseFloat(DiscountAmt).toFixed(2) || 0)
                    CalculateHeaderDiscount()
                } else {
                    $("#DisAmt").val(0.00)
                    CalculateHeaderDiscount()
                }
            })

            function GetDiscoutAmt() {
                var Discountper = $("#DisPer").val() || 0;
                var DiscountAmt = $("#DisAmt").val() || 0;
                var TotPayDue = 0;
                var rows = $("#Table1 tbody tr");
                var InfoPrice = 0, DisPer = 0;
                rows.each(function () {
                    var row = $(this); // Current row
                    InfoPrice = parseFloat(row.find(".Tbl_InfoPrice input").val()) || 0;
                    DisPer = parseFloat(row.find('.Tbl_DisPer input').val()).toFixed(2) || 0;
                    var Qty = parseFloat(row.find('.Tbl_Qty input').val()).toFixed(2) || 0;
                    if (DisPer != 0) {
                        var DisAmt = (InfoPrice * (DisPer / 100));
                        if (DisAmt > 0) {
                            TotPayDue += (InfoPrice - DisAmt) * Qty;
                        } else {
                            TotPayDue += InfoPrice * Qty;;
                        }
                    }
                    else {
                        if (InfoPrice > 0) {
                            TotPayDue += InfoPrice * Qty;
                        } else {
                            TotPayDue += InfoPrice;
                        }
                    }
                });
                if (Discountper > 0) {
                    DiscountAmt = TotPayDue * (Discountper / 100);
                    return parseFloat(DiscountAmt).toFixed(2) || 0;
                } else {
                    return 0;
                }
            }
            function CalculateHeaderDiscount() {
                var Discountper = parseFloat($("#DisPer").val()) || 0;
                var HederDisAmt = parseFloat($("#DisAmt").val()) || 0;
                var TotPayDue = parseFloat($("#TotPayDue").val()) || 0;
                var TotBefDis = parseFloat($("#TotBefDis").val()) || 0;
                $("#Table1 tbody tr").each(function () {
                    var $row = $(this);
                    var InfoPrice = parseFloat($row.find('.Tbl_InfoPrice input').val()) || 0;
                    var DisPer = parseFloat($row.find('.Tbl_DisPer input').val()) || 0;
                    var Qty = parseFloat($row.find('.Tbl_Qty input').val()) || 0;
                    var TaxCodeId = $row.find('.Tbl_TaxCodeId select').val();
                    var FinalTotallc = $row.find('.Tbl_FinalTotallc input').val();
                    var requester = TaxData1.find(item => item.TaxCodeId == TaxCodeId);
                    var TaxRate, TaxAmount;
                    if (requester) {
                        TaxRate = requester.TaxCalRate;
                    }
                    var TotalLC;
                    if (DisPer != 0) {
                        var DisAmt = InfoPrice * (DisPer / 100);
                        TotalLC = (InfoPrice - DisAmt) * Qty;
                    } else {
                        TotalLC = InfoPrice * Qty;
                    }
                    if (Discountper != 0) {
                        var calculatedAmount = (TotalLC / TotBefDis) * HederDisAmt;
                        TotalLC -= calculatedAmount;
                    }
                    if (TaxRate !== "" && TaxRate !== 0 && TaxRate !== undefined) {
                        TaxAmount = TotalLC * (TaxRate / 100);
                    } else {
                        TaxAmount = 0;
                    }
                    $row.find('.Tbl_TaxAmmount input').val(parseFloat(TaxAmount).toFixed(2));
                    $row.find('.Tbl_FinalTotallc input').val(TotalLC.toFixed(2));
                });
                HeaderCalculation();
            }

            function Calculation(Row) {
                var InfoPrice = parseFloat(Row.find('.Tbl_InfoPrice input').val()) || 0;
                var DisPer = parseFloat(Row.find('.Tbl_DisPer input').val()) || 0;
                var Qty = parseInt(Row.find('.Tbl_Qty input').val()) || 1;
                var TotalLC;
                var TaxCodeId = Row.find('.Tbl_TaxCodeId select').val();
                var TotPayDue = parseFloat($('#TotPayDue').val()) || 0;
                var HederDisAmt = GetDiscoutAmt();//parseFloat($('#DisAmt').val()) || 0;
                $("#DisAmt").val(HederDisAmt)
                var Discountper = parseFloat($('#DisPer').val()) || 0;
                var requester = TaxData1.find(item => item.TaxCodeId == TaxCodeId);
                var TaxRate, TaxAmount;
                if (requester) {
                    TaxRate = requester.TaxCalRate;
                }
                if (DisPer != 0) {
                    var DisAmt = InfoPrice * (DisPer / 100);
                    TotalLC = (InfoPrice - DisAmt) * Qty;
                } else {
                    TotalLC = InfoPrice * Qty;
                }
                Row.find('.Tbl_TotalLC input').val(parseFloat(TotalLC).toFixed(2));
                if (TaxRate !== "" && TaxRate !== 0 && TaxRate !== undefined) {
                    if (Discountper != 0) {
                        var CalculatedAmmount = (TotalLC / TotPayDue) * HederDisAmt;
                        TotalLC -= CalculatedAmmount;
                    }
                    TaxAmount = TotalLC * (TaxRate / 100);
                } else {
                    TaxAmount = 0;
                }
                Row.find('.Tbl_TaxAmmount input').val(parseFloat(TaxAmount).toFixed(2));
                HeaderCalculation();
                CalculateHeaderDiscount();
            }
        }
        //Heder Calculation
        {
            // Calculate Heder Feilds
            function HeaderCalculation() {
                var rows = $("#Table1 tbody tr"); // Get all rows within the tbody
                var totalLC = 0, infoPrice = 0, taxAmt = 0, FinalTotallc = 0;
                rows.each(function () {
                    var row = $(this); // Current row
                    totalLC += parseFloat(row.find(".Tbl_TotalLC input").val()) || 0;
                    FinalTotallc += parseFloat(row.find(".Tbl_FinalTotallc input").val()) || 0;
                    infoPrice += parseFloat(row.find(".Tbl_InfoPrice input").val()) || 0;
                    taxAmt += parseFloat(row.find(".Tbl_TaxAmmount input").val()) || 0;
                });

                var TotalFreghttax = parseFloat($(".TotalFreghttax").text()) || 0;
                var TotalFreghtNet = parseFloat($(".TotalFreghtNet").text()) || 0;
                taxAmt += TotalFreghttax;
                $("#Freight").val(TotalFreghtNet);
                $("#TotBefDis").val(totalLC.toFixed(2));
                $("#Tax").val(taxAmt.toFixed(2));
                var value = (FinalTotallc + taxAmt + TotalFreghtNet).toFixed(2)
                var roundedValue = Math.round(value);
                var roundingAmount = (roundedValue - value).toFixed(2);
                $("#TotPayDue").val(roundedValue);
                $("#Rounding").val(roundingAmount);
            }
        }
        //Region Select Row Data
        {
            $(document).on("click", ".table_edit", function () {
                var $row = $(this).closest("tr");
                $row.addClass("active");
                BindHederRecords($row, "N")
                DraftFlag = "N";
            })
            $(document).on("click", ".table_edit1", function () {
                var $row = $(this).closest("tr");
                DraftFlag = "Y"
                BindHederRecords($row, "Y")
                $("#InvTransReqId").val("");
            })
            $(document).on("click", ".Duplicate", function () {
                var $row = $(this).closest("tr");
                DraftFlag = "D"
                BindHederRecords($row, "D")
                $("#InvTransReqId").val("");
            })

            function BindHederRecords(Row, Flag) {

                var $row = Row;
                var rowObject = {};
                $row.find('td').each(function (index) {
                    var $td = $(this);
                    var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                    if ($td.find('input').length) {
                        rowObject[key] = $td.find('input').val();
                    }
                    else if ($td.find('textarea').length) {
                        rowObject[key] = $td.find('textarea').val();
                    }
                    else if ($td.find('img').length) {
                        rowObject[key] = $td.find('img').attr("src");
                    } else if ($td.find('select').length) {
                        //  rowObject[key] = $td.find('select option:selected').text().trim();
                        //  rowObject['TaxCodeval'] = $td.closest('tr').find('.Taxc option:selected').val();
                        //  rowObject['UomEntryVal'] = $td.closest('tr').find('.Uomc1 option:selected').val();
                    } else {
                        rowObject[key] = $td.text().trim();
                    }
                });
                $("#Addrow").removeAttr("disabled");
                $(".OpBarcode").removeAttr("disabled");
                if (Flag == "N" && Flag != "D") {
                    $("#InvTransReqId").val(rowObject.InvTransReqId);
                    $("#CopyTo").prop("disabled", false);
                    ShowBtn()
                    $("#Remarks").val(rowObject.Remarks);
                    $("#PickRmrk").val(rowObject.PickRemark);
                } else {
                    $("#CopyTo").prop("disabled", true);
                    $("#InvTransReqId").val("");
                    ShowBtn1();
                }
                $("#FinyrNum").val(rowObject.Number);
                $("#DocNum").val(rowObject.DocumentNo);
                $("#BPId").val(rowObject.BPId).trigger("change");
                LOADBPDATA(rowObject.BPContPerId, rowObject.BPAddrId)
                $("#JrnlMemo").val(rowObject.GeneralMemo);
                $("#FinyrId").val(rowObject.FinyrId).trigger("change");
                $("#PListId").val(rowObject.PListId).trigger("change");
                LoadDetails(rowObject.InvTransReqId)
                let FormatedDate = formatAndSetDate(rowObject.PostingDate);
                $("#PostingDt").val(FormatedDate);
                FormatedDate = formatAndSetDate(rowObject.DueDate);
                $("#DueDt").val(FormatedDate);
                //FormatedDate = formatAndSetDate(rowObject.RequiredDate);
                //$("#RequiredDt").val(FormatedDate);
                FormatedDate = formatAndSetDate(rowObject.DocumentDate);
                $("#DocumentDt").val(FormatedDate);
                $("#ShipTypeId").val(rowObject.ShipTypeId).trigger("change");
                $("#DutyStatus").val(rowObject.DutyStatus).trigger("change");
                $("#Status").val(rowObject.Status).trigger("change");
                if (rowObject.Status == "O") {
                    $("#CopyTo").prop("disabled", false);
                    $("#Status,#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", false);
                } else {
                    $("#CopyTo").prop("disabled", true);
                    $("#Status,#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", true);
                }
                $("#SalsEmpId").val(rowObject.SalsEmpId).trigger("change");
                $("#EmpId").val(rowObject.EmpId).trigger("change");

                if (Flag == "Y") {
                    Delete(rowObject.InvTransReqId, "Off");
                    $('#DraftModal').modal('hide');
                }

                $("#Freight").val(rowObject.Freight);
                LoadAttachmentData(rowObject.InvTransReqId)
                $("#Contents_Tab").click();
            }
        }
        //Region Save And Update
        {
            $("#Form_Save_btn,#Form_Update_btn").click(function () {
                AddRecords("N")
            })
            $("#Form_Draft_btn").click(function () {
                AddRecords("Y")
            })
            function AddRecords(flag) {
                var TotPayDue = $("#TotPayDue").val();
                if (TotPayDue <= 0) {
                    Swal.fire("Please Add Items First..!", "", "warning");
                    return false;
                }
                let isValid = true;
                let formData = {};
                $("#Header_Form input,select,textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).find('textarea').lenght) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = ["BPId", "RefNo", "FinyrId", "Num", "DocType", "DeptId", "BPEmail", "EmpId", "PostingDt", "DueDt", "StateId", "DocumentDt", "PymntTId", "Description", "IgnorePrice"];
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {

                        formData[inputName] = inputValue;
                    }
                    formData["DraftFlag"] = flag;
                    if (DraftFlag == "D" || DraftFlag == "Y") {
                        formData["InvTransReqId"] = "";
                    }
                });
                //Call Api
                if (isValid && formData != "") {
                    $.ajax({
                        url: '@Url.Action("POSTUPDATE", "InventoryTransferRequest")',
                        type: 'POST',
                        dataType: 'json',
                        data: formData,
                        success: function (response) {
                            if (response !== "") {

                                AddDetails(response.lastId, DraftFlag)
                                AddAttachmentData("#AttachmentTable", response.lastId)
                                notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                LoadTableData();

                                $("#Form_reset_btn").click();
                          
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
            }
        }
        //Region Delete
        {
            $("#Form_Delete_btn").click(function () {
                Delete($("#InvTransReqId").val());
            })
            $(document).on("click", ".table_delete", function () {
                var $row = $(this).closest("tr");
                var id = $row.find('td.tbl_Main_ID').text();
                Delete(id);
            })
            function Delete(ID, Flag) {
                if ($('#Status').val() != "O") {
                    swal.fire("Can't Delete Record ...!", "Document Is Closed.", "warning")
                    return false;
                } else {
                    if (Flag == "Off") {
                        $.ajax({
                            url: '@Url.Action("DELETEMAINDATA", "InventoryTransferRequest")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {

                                } else {
                                    notify("Error To Deleting Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Are you sure?',
                            text: 'This Goods Return Request  Is Permanetly Delete Form system..!',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Delete',
                            confirmButtonColor: 'red',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                $.ajax({
                                    url: '@Url.Action("DELETEMAINDATA", "InventoryTransferRequest")',
                                    type: 'POST',
                                    dataType: 'json',
                                    data: { Id: ID },
                                    success: function (response) {
                                        if (response.success) {
                                            LoadTableData();
                                            ResetForm()
                                            notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                            Swal.fire('Deleted!', 'Your Details Data has been deleted.', 'success');
                                        } else {
                                            notify("Error To Deleting Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                        }
                                    },
                                    error: function (error) {
                                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                        console.error('Error:', error.responseText);
                                    }
                                });
                            } else if (result.dismiss === Swal.DismissReason.cancel) {
                                Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                            }
                        });
                    }
                }


            }
            $(document).on("click", ".DeleteAttchment", function () {
                var tableRow = $(this).closest('tr');
                var Id = tableRow.find(".attachId").text();
                DELETEATTACHMENT(Id);
            })
            function DELETEATTACHMENT(ID) {
                if ($('#Status').val() != "O") {
                    swal.fire("Can't Delete Record ...!", "Document Is Closed.", "warning")
                    return false;
                } else {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'This Attachment Details  Is Permanetly Delete Form system..!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Delete',
                        confirmButtonColor: 'red',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("DELETEATTACHMENT", "InventoryTransferRequest")',
                                dataType: 'json',
                                data: { Id: ID },
                                success: function (response) {
                                    if (response.success) {
                                        LoadAttachmentData($("#InvTransReqId").val());
                                        notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                        Swal.fire('Deleted!', 'Your Attachment Data has been deleted.', 'success');
                                    } else {
                                        notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                        }
                    });
                }
            }
            $(document).on("click", ".CPDtable_delete", function () {
                var $row = $(this).closest("tr");
                var id = $row.find('td.tbl_Main_ID').text();
                var table = $('#Table1').DataTable();
                if (id == "" || id == null) {
                    var index = table.row($row).index();
                    table.row($row).remove().draw();
                    updateSequenceNumbers("#Table1", index);
                    CalculateHeaderDiscount()
                } else {
                    DeleteDetails(id);
                }
            })
            function updateSequenceNumbers(table, startIndex) {
                var $tbody = $(table + ' tbody');
                $tbody.find('tr').each(function (idx) {
                    var $currentRow = $(this);
                    if (idx >= startIndex) {
                        var newSequence = idx + 1;
                        $currentRow.find('td:first').text(newSequence);
                    }
                });
            }
            function DeleteDetails(ID) {
                if ($('#Status').val() != "O") {
                    swal.fire("Can't Delete Record ...!", "Document Is Closed.", "warning")
                    return false;
                }
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This Purchase Request Details  Is Permanetly Delete Form system..!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DELETEDETAILS", "InventoryTransferRequest")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {
                                    LoadDetails($("#InvTransReqId").val(), "Y")
                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                } else {
                                    notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });
            }
        }

        //Function to handle form reset
        {
            $("#Form_reset_btn").click(function () {
                $(".Form_Elem").removeClass("border-danger");
                $("#Header_Form")[0].reset();
                $("#AttachmentTable tbody").html("");
                $("#Barcodetbl tbody").html("");
                $("#Freight, #Tax, #TotPayDue, #TotBefDis").val("0.00");
                $("#Status,#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", false);
                $("#DocType").prop("disabled", false);
                $("#Status").prop("disabled", true);
                ApplyDetailstable([], "Table1")
                HideBtn()
                DefaultDate();
                $("#BrchId").val(@BrchId).trigger("change");
            });
            function ResetForm() {
                $(".Form_Elem").removeClass("border-danger");
                $("#Header_Form")[0].reset();
                $("#Freight, #Tax, #TotPayDue, #TotBefDis").val("0.00");
                $("#Status,#Form_Update_btn,#Form_Save_btn,#Form_Delete_btn,#Form_Draft_btn").prop("disabled", false);
                $("#AttachmentTable tbody").html("");
                $("#Barcodetbl tbody").html("");
                $("#Form_reset_btn").click();
                $("#Form_Draft_btn").show();
                $("#CopyTo").prop("disabled", true);
                $("#Form_Resume_btn").show();
                $("#DocType").prop("disabled", false)
                DefaultDate();
                LoadDefFreight()
                ApplyDetailstable([], "Table1")
                $("#BrchId").val(@BrchId).trigger("change");
            }
            function ShowBtn() {
                $("#Form_Delete_btn").hide();
                $("#Form_Update_btn").show();
                $("#Form_Save_btn").hide();
                $("#Form_Draft_btn").hide();
                $("#Form_Resume_btn").hide();
            }
            function ShowBtn1() {
                $("#Form_Delete_btn").show();
                $("#Form_Update_btn").hide();
                $("#Form_Save_btn").show();
                $("#Form_Resume_btn").hide();

            }
            function HideBtn() {
                $("#Form_Save_btn").show();
                $("#Form_Resume_btn").show();
                $("#Form_Draft_btn").show();
                $("#Form_Delete_btn").hide();
                $("#Form_Update_btn").hide();
            }
        }
        //region All functions
        {
            function AddAttachmentData(table, InvTransReqId) {
                var rowCount = $(table).find('tbody tr').length;
                if (rowCount <= 0) {
                    return false;
                }
                var AttachmentData = [];
                var headers = [];
                $(table).find('thead th').each(function () {
                    headers.push($(this).text().trim().toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()<>]/g, "").replace(/ /gi, ''));
                });
                $(table).find('tbody tr').each(function () {
                    var rowData = {};
                    $(this).find('td').each(function (index) {
                        if (headers[index] == "filedata") {
                            rowData["FileData"] = $(this).text().trim();
                        } else if (headers[index] == "filename") {
                            rowData["FileName"] = $(this).text().trim();
                        } else if (headers[index] == "attchdetid") {
                            rowData["AttchDetId"] = $(this).text().trim();
                        } else if (headers[index] == "fileextention") {
                            rowData["FileExt"] = $(this).text().trim();
                        } else if (headers[index] == "remark") {
                            // Use .find('textarea').val() to get the value of textarea
                            rowData["Remark"] = $(this).find('textarea').val();
                        }
                    });
                    rowData["DocId"] = InvTransReqId;
                    AttachmentData.push(rowData);
                });
                $.ajax({
                    url: '@Url.Action("ADDITEMATTACHMENT", "InventoryTransferRequest")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(AttachmentData),
                    success: function (response) {
                        if (response.success) {
                            //  notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                            LoadAttachmentData($("#InvTransReqId").val());
                            return true;

                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });

                return AttachmentData;
            }
            function LoadAttachmentData(Id) {
                $.ajax({
                    url: '@Url.Action("GETATACHMENT", "InventoryTransferRequest")',
                    type: 'GET',
                    dataType: 'json',
                    data: { Id: Id },
                    success: function (response) {
                        $("#AttachmentTable tbody").html("");
                        if (response.length > 0) {
                            var index = 1;
                            for (var i = 0; i < response.length; i++) {
                                var list = "<tr>";
                                list += "<td class='text-center'>" + index + "</td>"; // Add the index to the first column
                                list += "<td class='p-0' nowrap><input class='p-1 form-control form-control-sm selectfile' type='file' placeholder='Choose File'/></td>";
                                list += "<td class='p-0 align-items-center Remark' nowrap><textarea style='height:34px!important;' class='form-control form-control-sm'>" + (response[i].Remark == null ? " " : response[i].Remark) + "</textarea></td>";
                                list += "<td class=' align-items-center filename' nowrap>" + response[i].FileName + "</td>";
                                list += "<td class=' align-items-center fileExt' nowrap>" + response[i].FileExt + "</td>";
                                list += "<td class=' align-items-center d-none fileData' nowrap>" + response[i].FileData + "</td>";
                                list += "<td class=' align-items-center d-none attachId' nowrap>" + response[i].AttchDetId + "</td>";
                                list += "<td class=' align-items-center d-none flag' nowrap>N</td>";
                                list += "<td class='text-center p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 ViewAttchment btn-sm btn-primary'>View</button></td>";
                                list += "<td class='text-center p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 DeleteAttchment btn-sm btn-danger'>Delete</button></td>";
                                list += "</tr>";
                                $("#AttachmentTable tbody").append(list);
                                index++;
                            }
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            }
            LoadTableData();
            function LoadTableData() {
                Loader()
                $.ajax({
                    url: '@Url.Action("GET", "InventoryTransferRequest")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        if (response && response.length > 0) {
                            var lastRow = response[response.length - 1];
                            var lastDocNum = lastRow.DocNum;
                            var newDocNum = lastDocNum + 1;
                            $('#DocNum').val(newDocNum);
                        } else {
                            $('#DocNum').val(1);
                        }
                        Loader();
                        ApplyDatatable(response, "Table");
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }

            //format date
            function formatAndSetDate(inputDate) {
                if (inputDate) {
                    const parts = inputDate.split(' ');
                    const datePart = parts[0];
                    const timePart = parts[1];
                    const [day, month, year] = datePart.split('-');
                    const formattedDate = `${year}-${month}-${day}`;
                    const formattedDateTime = `${formattedDate} ${timePart}`;
                    return formattedDate;
                } else {
                    // Handle the case where inputDate is undefined
                    return null; // Or you can return a default value or throw an error
                }
            }

            function SplitDatebyspace(inputDate) {
                if (inputDate) {
                    const parts = inputDate.split(' ');
                    return parts[0];
                } else {
                    return null; // Or handle the undefined case as needed
                }
            }

            function ApplyDatatable(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no  text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (Table_Id == "Table") {
                                    return '<i class="fa fa-clone Duplicate  text-dark mr-1" title="Duplicate"></i> <i class="fa fa-edit table_edit text-primary mr-1" title="Edit Document"></i>';
                                } else {
                                    return '<i class="fa fa-edit table_edit1 text-primary mr-1" title="Edit Document"></i> <i class="fa fa-trash text-danger mr-2  table_delete" title="Delete Document"></i>';
                                }
                            }
                        },
                        {
                            data: 'IsActive',
                            title: 'Active',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label  class="tblswitch">
                                                                                                                              <input type="checkbox" disabled value="`+ data + `" checked name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                                      <span class="tblslider"></span>
                                                                                                                      </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                                                  <input type="checkbox" disabled value="`+ data + `"  name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                                          <span class="tblslider"></span>
                                                                                                                      </label></center>`;
                                }

                            }
                        },
                        { data: 'InvTransReqId', title: 'InvTransReqId', className: 'tbl_SalsQuotId d-none tbl_Main_ID' },
                        { data: 'DocNum', title: 'Document No', className: 'tbl_Num text-right' },
                        { data: 'BPName', title: 'Name', className: 'tbl_BPName text-left' },
                        { data: 'BPId', title: 'BPId', className: 'tbl_BPId d-none' },
                        { data: 'BPContactName', title: 'Contact Person', className: 'tbl_BPContactPerName  text-left' },
                        { data: 'BPContPerId', title: 'BPContPerId', className: 'tbl_BPContPerId d-none' },
                        { data: 'ShipToAddr', title: 'Address', className: 'tbl_Addr  text-center' },
                        { data: 'BPAddrId', title: 'BPAddrId', className: 'tbl_BPAddrId d-none' },
                        { data: 'Finyr', title: 'Financial Year', className: 'tbl_Finyr text-left' },
                        { data: 'FinyrId', title: 'FinyrId', className: 'tbl_FinyrId d-none' },
                        { data: 'PListName', title: 'PListName', className: 'tbl_PListName text-left' },
                        { data: 'PListId', title: 'PListId', className: 'tbl_FinyrId d-none' },
                        { data: 'FinyrNum', title: 'Number', className: 'tbl_Num text-right' },
                        {
                            data: 'Status',
                            title: 'Status',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "O") {
                                    return `<center>Open</center>`;
                                } else if (data == "C") {
                                    return `<center>Close</center>`;
                                } else {
                                    return `<center>Cancelled</center>`;
                                }

                            }
                        },
                        { data: 'Status', title: 'Status', className: 'tbl_Status d-none' },
                        {
                            data: 'DutyStatus',
                            title: 'DutyStatus',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "O") {
                                    return `<center>With Payment Of Duty</center>`;
                                } else {
                                    return `<center>Without Payment Of Duty</center>`;
                                }

                            }
                        },
                        { data: 'DutyStatus', title: 'DutyStatus', className: 'tbl_DutyStatus d-none' },
                        { data: 'PostingDt', title: 'Posting Date', className: 'tbl_PostingDt text-center' },
                        { data: 'DueDt', title: 'Due Date', className: 'tbl_DeliveryDate text-center' },
                        { data: 'DocumentDt', title: 'Document Date', className: 'tbl_DocumentDt text-center' },
                        //{ data: 'RequiredDt', title: 'Required Date', className: 'tbl_RequiredDt text-center' },
                        { data: 'SalsEmpName', title: 'Sales Employee', className: 'tbl_SalsEmpName text-center' },
                        { data: 'PickRmrk', title: 'PickRemark', className: 'tbl_SalsEmpName text-center' },
                        { data: 'Remarks', title: 'Remarks', className: 'tbl_SalsEmpName text-center' },
                        { data: 'JrnlMemo', title: 'General Memo', className: 'tbl_JrnlMemo text-center' },
                        { data: 'SalsEmpId', title: 'SalsEmpId', className: 'tbl_SalsEmpId d-none' },
                        { data: 'CreatedBy', title: 'Created By', className: 'tbl_CreatedBy d-none' },
                        { data: 'CreateDate', title: 'Create Date', className: 'tbl_CreateDate d-none' },
                        { data: 'UpdatedBy', title: 'Updated By', className: 'tbl_UpdatedBy d-none' },
                        { data: 'UpdateDate', title: 'Update Date', className: 'tbl_UpdateDate d-none' },
                        // Add more columns as needed
                    ],
                    "columnDefs": [
                        { "targets": 'th', "className": 'dt-no-wrap' }
                    ],
                });
            }

        }
        // Dropdowun change function
        {
            function toggleCopyFromDropdown() {
                var BPIdValue = $('#BPId').val();
                var copyFromDropdown = $('#specificDropdown').find('.dropdown-toggle');
                if (BPIdValue) {
                    copyFromDropdown.prop('disabled', false);
                } else {
                    copyFromDropdown.prop('disabled', true);
                }
            }
            toggleCopyFromDropdown();
            $('#BPId').change(function () {
                toggleCopyFromDropdown();
            });
        }
        //Load Details
        {
            function convertValuesToString(obj) {
                for (var key in obj) {
                    if (typeof obj[key] === 'object') {
                        convertValuesToString(obj[key]); // Recursively call for nested objects
                    } else if (typeof obj[key] === null) {
                        obj[""];
                    } else {
                        obj[key] = String(obj[key]); // Convert value to string
                    }
                }
            }
            function removeKeysFromArray(jsonArray) {
                const keysToRemove = ["UpdateDate", "UpdateTS", "UpdatedBy", "CreateDate", "CreateTS", "CreatedBy"];
                // Loop through each object in the array
                jsonArray.forEach(obj => {
                    // Loop through each key to remove
                    keysToRemove.forEach(key => {
                        // Check if the key exists in the object
                        if (obj.hasOwnProperty(key)) {
                            // Remove the key
                            delete obj[key];
                        } else {
                            console.log(`Key "${key}" does not exist in an object.`);
                        }
                    });
                });

                // Return the modified array of JSON objects
                return jsonArray;
            }
            function AddDetails(InvTransReqId, Flag) {
                var tableData = $('#Table1 tbody tr').map(function () {
                    var tr = $(this);
                    var id = "";
                    if (Flag !== "D" && Flag !== "Y") {
                        id = $(tr).find('.tbl_Main_ID').text();
                    } else {
                        id = "";
                    }

                    return {
                        "LineNum": $(tr).find('.Tbl_LineNum').text(),
                        "BarCode": $(tr).find('.Tbl_BarCode input').val(),
                        "InvTransReqDetId": id,
                        "InvTransReqId": InvTransReqId,
                        "ItemId": $(tr).find('.Tbl_ItemId select').val() || "0",
                        "ServiceId": $(tr).find('.Tbl_ServiceId select').val() || "0",
                        "BPId": $('#BPId').val(),
                        "QtyInWhs": $(tr).find('.Tbl_QtyInWhs').text() || "0",
                        "Qty": $(tr).find('.Tbl_Qty input').val() || "0",
                        "UomId": $(tr).find('.Tbl_UomId select').val(),
                        "WhsId": $(tr).find('.Tbl_WhsId select').val(),
                        "LocName": $(tr).find('.Tbl_LocName').text(),
                        "FromWhsId": $(tr).find('.Tbl_FromWhsId select').val(),
                        "Remarks": $(tr).find('.Tbl_Remarks input').val() || "", // Corrected here
                        "BaseDocLineNum": $(tr).find('.Tbl_BaseDocLineNum').text(),
                        "BaseDocEntry": $(tr).find('.Tbl_BaseDocEntry').text(),
                        "BaseDocType": $(tr).find('.Tbl_BaseDocType').text(),
                        "CreditMemoQty": $(tr).find('.Tbl_CreditMemoQty input').val() || "0",
                        "RowStatus": $(tr).find('.Tbl_RowStatus').text(),
                    };
                }).get();
                $.ajax({
                    url: '@Url.Action("ADDITEMDETAILS", "InventoryTransferRequest")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(tableData),
                    success: function (response) {
                        if (response.success) {
                            // notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                            $("#Create_User_Tab").click();
                            return true;
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            function LoadDetails(ID) {
                Loader()
                $.ajax({
                    url: '@Url.Action("GETITEMDET", "InventoryTransferRequest")',
                    type: 'GET',
                    data: { ID: ID, Flag: "C" },
                    dataType: 'json',
                    success: function (response) {
                        Loader()
                        ApplyDetailstable(response, "Table1")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            ApplyDetailstable([], "Table1")
            //Apply Datatable
            function ApplyDetailstable(jsonData, Table_Id) {
                bindBCPrice();
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var DocType = $("#DocType").val()
                var DValueService = ""
                var DValueItem = ""
                if (DocType == "S") {
                    DValue = ""
                    DValueItem = " d-none";
                } else {
                    DValue = " d-none";
                    DValueItem = "";
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '500px',
                    responsive: true,
                    "ordering": true,
                    "pageLength": 100,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    },
                    { width: '20%', targets: 0 }, // Set width of the first column
                    { width: '30%', targets: 1 }  // Set width of the second column
                    ],
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no no-wrap  text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                return '<center><i class="fa fa-trash text-danger mr-2  CPDtable_delete"></i></center>';
                            }
                        },
                        {
                            data: 'BarCode',
                            title: 'Bar/QR Code',
                            className: 'Tbl_BarCode text-right' + DValueItem,
                            render: function (data, type, row) {
                                return `<input style='width:150px' value="${data}" type="number" placeholder="0000000000000" oninput="MaxLengthInp(this,15)" class="form-control BarCodeInp form-control-sm Form_Elem" />`;
                            }
                        },
                        { data: 'LineNum', title: 'LineNum', className: 'Tbl_LineNum d-none' },
                        { data: 'InvTransReqDetId', title: 'InvTransReqDetId', className: 'tbl_Main_ID d-none' },
                        { data: 'InvTransReqId', title: 'InvTransReqId', className: 'Tbl_SalsQuotId d-none' },
                        {
                            data: 'ItemId',
                            title: 'Item Code',
                            className: 'Tbl_ItemId text-center ' + DValueItem,
                            render: function (data, type, row) {
                                return ItemDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'ItemId',
                            title: 'Item Name',
                            className: 'Tbl_ItemName text-center ' + DValueItem,
                            render: function (data, type, row) {
                                return ItemNameDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'ServiceId',
                            title: 'Service Name',
                            className: 'Tbl_ServiceId text-center ' + DValue,
                            render: function (data, type, row) {
                                return ServiceDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'Qty',
                            title: 'Quantity',
                            className: 'Tbl_Qty text-right' + DValueItem,
                            render: function (data, type, row) {
                                return `<input style='width:120px' value="${data}"  type="number" placeholder="Required Qty" oninput="MaxLengthInp(this,10)" class="form-control Qty form-control-sm Form_Elem" />`;
                            }
                        },
                        {
                            data: 'QtyInWhs',
                            title: 'Quantity in Warehouse',
                            className: 'Tbl_QtyInWhs text-right' + DValueItem,
                            render: function (data, type, row) {
                                return `<input style='width:120px' value="${data}" type="number" placeholder="Warehouse  Qty" oninput="MaxLengthInp(this,10)" class="form-control Qty  Tbl_WhsQty_Input form-control-sm Form_Elem" readonly />`;
                            }
                        },
                        {
                            data: 'UomId',
                            title: 'UoM',
                            className: 'Tbl_UomId text-center' + DValueItem,
                            render: function (data, type, row) {
                                return UOMDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'FromWhsId',
                            title: ' from Warehouse',
                            className: 'Tbl_FromWhsId text-center ' + DValueItem,
                            render: function (data, type, row) {
                                return fromWarehouseDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        {
                            data: 'WhsId',
                            title: 'To Warehouse',
                            className: 'Tbl_WhsId text-center ' + DValueItem,
                            render: function (data, type, row) {
                                return WarehouseDropdown.replace(`value="${data}"`, `value="${data}" selected`);
                            }
                        },
                        { data: "LocName", title: 'Location', className: 'Tbl_LocName text-center' + DValueItem, },
                        

                        {
                            data: 'Remarks',
                            title: 'Remarks',
                            className: 'Tbl_Remarks text-center',
                            render: function (data, type, row) {
                                return ` <input style='width:120px' type="text" value="${data}" oninput="MaxLengthInp(this,100)"  class="form-control Remarks form-control-sm Form_Elem" />`;
                            }
                        },
                        { data: 'BaseDocLineNum', title: 'BaseDocLineNum', className: 'Tbl_BaseDocLineNum' },
                        { data: 'BaseDocEntry', title: 'BaseDocEntry', className: 'Tbl_BaseDocEntry' },
                        { data: 'BaseDocType', title: 'BaseDocType', className: 'Tbl_BaseDocType' },
                        { data: 'OpenQty', title: 'Open Qty', className: 'Tbl_OpenQty text-right' },
                        { data: 'RowStatus', title: 'RowStatus', className: 'Tbl_RowStatus text-right' },
                    ],
                    "columnDefs": [
                        { "targets": '_all', "className": 'dt-no-wrap' }
                    ],

                });
                $('.select21').css({ width: "width:120px", backgroundColor: "white" }).select2();
                if (DocType === 'S') {
                    $('.Tbl_ServiceId').removeClass('d-none');
                    $('.Tbl_NetAmt').removeClass('d-none');
                    $('.Tbl_MRP').removeClass('d-none');
                    $('.Tbl_ItemId,.Tbl_Qty,.Tbl_UomId,.Tbl_CntryId,.Tbl_ItemBrchId,.Tbl_WhsId,.Tbl_Hsn,.Tbl_BarCode').addClass('d-none');
                } else {
                    $('.Tbl_ServiceId').addClass('d-none');
                    $('.Tbl_NetAmt').addClass('d-none');
                    $('.Tbl_MRP').addClass('d-none');
                    $('.Tbl_ItemId,.Tbl_Qty,.Tbl_UomId,.Tbl_CntryId,.Tbl_ItemBrchId,.Tbl_WhsId,.Tbl_Hsn,.Tbl_BarCode').removeClass('d-none');
                }
                if (DocType === 'S') {
                    $('.Tbl_WhsId select').prop('disabled', true); // Disable Warehouse dropdown
                } else {
                    $('.Tbl_ItemId select').prop('disabled', true);
                    $('.Tbl_WhsId select').prop('disabled', true); // Disable Item dropdown
                    $('.Tbl_ItemName select').prop('disabled', true); // Disable Item dropdown
                    $('.Tbl_FromWhsId select').prop('disabled', true); // Disable Item dropdown
                    $('.Tbl_BarCode input').prop('disabled', true); // Disable Item dropdown
                    $('.Tbl_Qty input').prop('disabled', true); // Disable Item dropdown
                    $('.Tbl_UomId select').prop('disabled', true); // Disable Item dropdown
                }
                if (jsonData.length > 0) {
                    HeaderCalculation()
                    ValidateLineRecords(jsonData)
                }
            }
            function ValidateLineRecords(Data) {
                var $tableRows = $("#Table1 tbody tr");
                var tableLength = $tableRows.length;

                for (var i = 0; i < tableLength; i++) {
                    var $row = $tableRows.eq(i);
                    var dataObj = Data[i];
                    if (dataObj.RowStatus == "T") {
                        $row.find("input").prop("readonly", true).css({ "background-color": "white" });
                        $row.find("select").prop("disabled", true).css({ "background-color": "white" });
                        $row.find("i").prop("disabled", true)
                    } else if (dataObj.RowStatus == "C") {
                        $row.find("input, select").prop("disabled", true).css({ "background-color": "", "color": "black" });;
                        $row.find("input, select").prop("readonly", true).css({ "background-color": "", "color": "black" });
                        $row.find("i").prop("disabled", true)
                    }
                }
            }
        }

        //Copy From Copy To Region
        {
            $(".CopyToDrop").click(function () {
                var value = $(this).data('value');
                var obj = {
                    Id: $("#InvTransReqId").val(),
                    Docflag: value,
                    BPId: $("#BPId").val(),
                }
                sessionStorage.setItem("CopyTodata", JSON.stringify(obj))
            })
            var table; // Define table globally
            var Copyfromheaderdata = [];
            function checkCopyTo() {
                var copyToData = sessionStorage.getItem("CopyTodata");
                if (copyToData) {
                    var data = JSON.parse(copyToData);
                    $("#BPId").val(data.BPId).trigger("change")
                    if (data.Docflag !== "ITR") {
                        loadCopyFrom(data.Docflag).then(responce => {
                            if (responce) {
                                if (data.Docflag == "PR") {
                                    var rowData = Copyfromheaderdata.find(obj => obj.PurReqId == data.Id);
                                    CopyFromLine(rowData);
                                } else if (data.Docflag == "IT") {
                                    var rowData = Copyfromheaderdata.find(obj => obj.InvTransId == data.Id);
                                    CopyFromLine(rowData);
                                } else if (data.Docflag == "GRPO") {
                                    var rowData = Copyfromheaderdata.find(obj => obj.GRPOId == data.Id);
                                    CopyFromLine(rowData);
                                } else {
                                    alert("Invalid Docflag");
                                }
                                sessionStorage.setItem("CopyTodata", "")
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                        });
                    }

                }
            }
            $(".CopyDrop").click(function () {
                var value = $(this).data('value');
                loadCopyFrom(value)
                $('#CopyFromModal').modal('show'); // Show the modal after updating title
            });
            function loadCopyFrom(value) {
                return new Promise((resolve, reject) => {
                    var Bpid = $("#BPId").val();
                    $.ajax({
                        url: '@Url.Action("GETCOPYFROM", "InventoryTransferRequest")',
                        type: 'GET',
                        data: { Flag: value, BPId: $("#BPId").val() },
                        dataType: 'json',
                        success: function (response) {
                            Copyfromheaderdata = response;
                            COPYFROMTABLE('Table4', response, value); // Pass Value to COPYFROMTABLE
                            // Update modal title based on the selected option
                            if (value === 'PR') {
                                $('#CopyFromModal .modal-title').text('List Of Purchase Request');
                            } else if (value === 'PBA') {
                                $('#CopyFromModal .modal-title').text('List Of Purchase Blanket Agreement');
                            } else if (value === 'PQ') {
                                $('#CopyFromModal .modal-title').text('List Of Purchase Quotation');
                            } else if (value === 'GRPO') {
                                $('#CopyFromModal .modal-title').text('List Of Goods Receipt PO');
                            } else {
                            }
                            resolve(Copyfromheaderdata);
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                });
            }

            function COPYFROMTABLE(Table_Id, jsonData, Value) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var columns = [
                    // Column definition for 'Sr No'
                    {
                        data: null,
                        title: "Sr No",
                        className: 'tbl_Sr_no text-center',
                        render: function (data, type, row, meta) {
                            return meta.row + 1; // 'meta.row' gives the index of the row
                        }
                    },
                    // Column definition for 'Action'
                    {
                        data: null,
                        title: 'Action',
                        className: 'text-center',
                        render: function (data, type, row) {
                            if (Table_Id == "Table4") {
                                return '<i class="fa fa-edit table_getitemdata text-primary mr-1" title="Edit Document"></i>';
                            } else {
                                return '<i class="fa fa-edit table_edit1 text-primary mr-1" title="Edit Document"></i> <i class="fa fa-trash text-danger mr-2 table_delete" title="Delete Document"></i>';
                            }
                        }
                    }
                ];

                // List of columns to display with dynamic names based on Value
                var columnNames = {};

                if (Value === 'GRPO') {
                    columnNames = {
                        'GRPOId': { title: 'GRPOId', className: 'Ctbl_GRPOId d-none' },
                        'DocNum': { title: 'Goods Receipt No', className: 'Ctbl_DocNum' },
                        'PostingDt': { title: 'Posting Date', className: 'Ctbl_PostingDt' },
                        //'ValidUntilDt': { title: 'Valid Date', className: 'Ctbl_PostingDt' },
                        'VendorRefNo': { title: 'Vender Ref Num', className: 'Ctbl_ VendorRefNo ' },
                        'DocumentDt': { title: 'Document Date', className: 'Ctbl_DocumentDt' },
                        //'RequiredDt': { title: 'Required Date', className: 'Ctbl_RequiredDt' },
                        'Remarks': { title: 'Remarks', className: 'Ctbl_Remarks' }
                    };
                }

                Object.keys(columnNames).forEach(function (key) {
                    columns.push({
                        data: key,
                        title: columnNames[key].title,
                        className: columnNames[key].className + ' text-center' // Assign class dynamically
                    });
                });

                $('#' + Table_Id).DataTable({
                    data: jsonData,
                    columns: columns,
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    ordering: true,
                    autoWidth: true,
                    orderCellsTop: false,
                    scrollCollapse: false,
                    columnDefs: [
                        { targets: 'th', className: 'dt-no-wrap' },
                        { targets: 'td', className: 'dt-no-wrap' }
                    ]
                });
            }
            $(document).on('click', '.table_getitemdata', function () {
                var closestTable = $(this).closest('table').DataTable();
                var rowData = closestTable.row($(this).parents('tr')).data();
                CopyFromLine(rowData)
            });
            function CopyFromLine(rowData) {
                Loader()
                if (rowData && rowData.InvTransId) {
                    var idValue = rowData.InvTransId;
                    var data = Copyfromheaderdata.find(item => item.InvTransId == idValue);
                    if (data) {
                        BindHeaderCopyFrom(data)

                    }
                    $.ajax({
                        url: '@Url.Action("GETITEMDET", "InventoryTransfer")', // Change the URL to the appropriate action
                        type: 'GET',
                        data: { ID: idValue, Flag: "O" }, // Change the parameter name if needed
                        dataType: 'json',
                        success: function (response) {
                            Loader()
                            var i = 1;
                            response.forEach(function (item) {
                                item.BaseDocLineNum = item.LineNum;
                                item.BaseDocEntry = data.DocNum;
                                item.BaseDocType = 'IT';
                                item.InvTransReqDetId = "";
                                item.RowStatus = 'O';
                                item.Qty = item.OpenQty;
                                item.InvTransReqId = "";
                                i++;
                            });
                            ApplyDetailstable(response, "Table1");
                            $(".Qty").trigger('input');
                            $('#CopyFromModal').modal('hide');
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                } else {
                    notify('PurReqId or BlKAId not found in the row data or is invalid.', "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                }
            }
            function BindHeaderCopyFrom(data) {
                Object.entries(data).forEach(([key, value]) => {
                    var input = $("#" + key);
                    if (key !== "Tax" || key !== "TotBefDis" || key !== "TotPayDue" || key !== "Status" || key !== "DisPer" || key !== "DisAmt") {
                        if (input.hasClass("select2-hidden-accessible")) {
                            input.val(value).trigger("change");
                        } else {
                            if (key == "DocumentDt" || key == "PostingDt" || key == "RequiredDt") {
                                value = formatAndSetDate(value)
                                input.val(value);
                            } else {
                                input.val(value);
                            }
                        }
                    }
                });
            }
        }
        // Region Navigation
        {
            var $table = $("#Table");
            $table.find("tbody tr:first").addClass("active");
            $(".btn_forward").click(function () {
                var $currentRow = $table.find(".active");
                var $nextRow = $currentRow.next("tr");
                if ($nextRow.length > 0) {
                    $currentRow.removeClass("active");
                    $nextRow.addClass("active");
                    BindHederRecords($nextRow, "N");
                } else {
                    var $firstRow = $table.find("tbody tr:first");
                    $table.find(".active").removeClass("active");
                    $firstRow.addClass("active");
                    BindHederRecords($firstRow, "N");

                }
            });
            $(".btn_backward").click(function () {
                var $currentRow = $table.find(".active");
                var $prevRow = $currentRow.prev("tr");
                if ($prevRow.length > 0) {
                    $currentRow.removeClass("active");
                    $prevRow.addClass("active");
                    BindHederRecords($prevRow, "N");
                } else {
                    var $lastRow = $table.find("tr:last");
                    $table.find(".active").removeClass("active");
                    $lastRow.addClass("active");
                    BindHederRecords($lastRow, "N");
                }
            });
            $(".btn_first").click(function () {
                var $firstRow = $table.find("tbody tr:first");
                $table.find(".active").removeClass("active");
                $firstRow.addClass("active");
                BindHederRecords($firstRow);
            });
            $(".btn_last").click(function () {
                var $lastRow = $table.find("tr:last");
                $table.find(".active").removeClass("active");
                $lastRow.addClass("active");
                BindHederRecords($lastRow, "N");
            });
            $(".btn_reload").click(function () {
                // $("#Finacial_year_form")[0].reset();
                $('#Form_reset_btn').click()
                HideBtn()
            });
        }
    });
</script>

