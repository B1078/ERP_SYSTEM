@{
    string? UserName = ViewContext.HttpContext.Session.GetString("UserName");
    DateTime currentDate = DateTime.Now;
    string formattedDate = currentDate.ToString("dd-MM-yyyy");
}
<!--  Menu analytics start -->
<div class="col-xl-12 col-md-12">
    <div class="card table-card p-2 mb-0 Div_navigation">
        <div class="row">
            <div class="col-md-12">
                <button class="btn text-center btn-sm btn-primary btn_first p-2" title="Get First Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_backward p-2" title="Get Privious Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary p-2 btn_forward" title="Get Next Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_last p-2" title="Get Last Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_reload p-2" title="Reload" style="width:50px; font-size:18px;">
                    <i class="fa fa-refresh"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="card table-card mt-2">
        <div class="card-header">
            <h5 class="webtitle">Business Partner Master</h5>
            <div class="card-header-right">
                <ul class="list-unstyled card-option">
                    <li><i class="fa fa fa-wrench open-card-option"></i></li>
                    <li><i class="fa fa-window-maximize full-card"></i></li>
                    <li><i class="fa fa-minus minimize-card"></i></li>
                    <li><i class="fa fa-refresh reload-card"></i></li>
                    <li hidden><i class="fa fa-trash close-card"></i></li>
                </ul>
            </div>
        </div>
        <div class="card-block shadow">
            <!-- Row start -->
            <div class="row pt-2 pl-3 pr-3 pb-0">
                <form class="w-100 mt-1 p-4 ">
                <div class="col-lg-12 col-xl-12 p-0 mt-0">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs  tabs" role="tablist">
                        <li class="nav-item">
                                <a class="nav-link active"  data-toggle="tab" id="Create_User_Tab" href="#General" role="tab">General</a>
                        </li>
                        <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" id="Contact_Details_Tab" href="#Contact_Details" role="tab">Contact Person Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" id="Address_Details_Tab" href="#Address_Details" role="tab">Address Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" id="Payment_Terms_Tab" href="#Payment_Terms" role="tab">Payment Terms</a>
                        </li>
                        <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" id="Bank_Details_Tab" href="#Bank_Details" role="tab">Business Partners Bank Details</a>
                        </li>
                        <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" id="Accounting_Tab" href="#Accounting" role="tab">Accounting/Payment Run</a>
                        </li>
                        <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" id="Tax_Tab" href="#TaxTab" role="tab">Tax</a>
                        </li>
                        <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" id="Attachments_Tab" href="#Attachments" role="tab">Attachments</a>
                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content tabs card-block pb-0 mb-0">
                            <div class="tab-pane active pt-2 m-0 mt-1" id="General" role="tabpanel">
                                <div id="From1" class="w-100 mt-2 p-2">
                                    <div class="row ">
                                        <div class="col-md-6 p-3 border">
                                            <div class="row mt-0 mb-1">
                                                <div class="col-md-3  justify-content-end ">
                                                    <label>Active</label><br />
                                                    <label class="switch">
                                                        <input type="checkbox" value="Y" checked name="BpIsActive" id="BpIsActive" class="toggleSwitch form-control form-control-sm">
                                                        <span class="slider"></span>
                                                    </label>
                                                </div>
                                                <div class="col-md-9 col-lg-9 ">
                                                    <div class="row align-items-center  mt-0 mb-1">
                                                        
                                                        <div class="col-md-4">
                                                            <button type="button" id="DownloadTemplete" class="btn btn-sm btn-primary w-100">
                                                                Download Template
                                                            </button>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <input class='p-1 form-control form-control-sm selectfile' id="Import" type='file' placeholder='Choose File' />
                                                        </div>
                                                        <div class="col-md-4 d-flex justify-content-end">
                                                            <button type="button" id="Upload_Xls" class="btn btn-sm btn-success w-100">Upload</button>
                                                            <button type="button" class="btn btn-sm btn-primary" id="ViewExcel"><i class="fa fa-eye"></i></button>
                                                        </div>
                                                    </div>
                                                </div>
                                                @*   <div class="col-md-6 text-right">
                                                <button type="button" id="AddBp" class="btn btn-sm btn-primary">Add Row</button>
                                                </div>*@
                                            </div>

                                            <label class="font-weight-bold mt-2">Account Details:</label>
                                            <hr class="p-0 m-0">
                                            <div class="row mt-2">
                                                <input hidden name="BPId" id="BPId" value="" type="text" placeholder="" class="form-control form-control-sm Form_Elem" />
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPCode">Business Partner Code</label>
                                                    <input name="BPCode" id="BPCode" type="text" oninput="MaxLengthInp(this,20)" placeholder="Code" class="form-control form-control-sm Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPName"> Name</label>
                                                    <input name="BPName" id="BPName" type="text" placeholder=" Name" class="form-control form-control-sm Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPAliasName"> Alias Name</label>
                                                    <input name="BPAliasName" id="BPAliasName" type="text" placeholder=" Alias Name" class="form-control form-control-sm Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPCardType"> Card Type</label>
                                                    <select name="BPCardType" id="BPCardType" type="text" class="form-control  form-control-sm Form_Elem">
                                                        <option value="">Select Card Type</option>
                                                        <option value="C">Customer</option>
                                                        <option value="V">Vendor</option>
                                                        <option value="L">Lead</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="row">
                                                  <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPGrpId"> Group</label>

                                                    <select name="BPGrpId" id="BPGrpId" type="text" class="form-control  form-control-sm Form_Elem">
                                                        <option value="">Select Business Partner Group</option>
                                                    </select>
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPPANNo">PAN No</label>
                                                    <input name="BPPANNo" id="BPPANNo" type="text" placeholder="ABCDEF1234F" class="form-control PANINPUT form-control-sm Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPITRFilling">ITRF Filling</label>
                                                    <select name="BPITRFilling" id="BPITRFilling" type="text" class="form-control  form-control-sm Form_Elem">
                                                        <option value="N">No</option>
                                                        <option value="Y">Yes</option>
                                                    </select>
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPACBal">Account Balance </label>
                                                    <input name="BPACBal" id="BPACBal" type="number" placeholder="Account Balance " class="form-control form-control-sm Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPCurrType">System Currency</label>
                                                    <select name="BPCurrType" id="BPCurrType" type="number" placeholder="System Currency" class="form-control form-control-sm Form_Elem">
                                                        <option value="">Select Currency</option>
                                                        <option value="S">System Curreency</option>
                                                        <option value="L">Local Currency</option>
                                                        <option value="B">Business Partner Currency</option>
                                                    </select>
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPCurrId">Currency Code</label>
                                                    <select name="BPCurrId" id="BPCurrId" type="number"  class="form-control form-control-sm Form_Elem" > </select>
                                                </div>
                                            </div>
                                            <label class="font-weight-bold mt-3">Address Details:</label>
                                            <hr class="p-0 m-0">
                                            <div class="row mt-1">
                                                <!-- Address, Country, State, City -->
                                                <div class="col-md-6 mt-1 mb-1">
                                                    <label for="BPAddr">Address </label>
                                                    <textarea style="height:103px;" name="BPAddr" id="BPAddr" type="text" class="form-control border form-control-sm Form_Elem"></textarea>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="row">
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="CntryId">Country</label>
                                                            <select id="CntryId" name="CntryId" value="" class="form-control CntryId form-control-sm border Form_Elem">
                                                                <option disabled selected>Select Country</option>
                                                            </select>
                                                        </div>
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="StateId">State</label>
                                                            <select id="StateId" name="StateId" value="" class="form-control StateId form-control-sm  Form_Elem">
                                                                <option disabled selected>Select State</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="BPCity">City</label>
                                                            <input id="BPCity" type="text" name="BPCity" placeholder="City" class="form-control form-control-sm Form_Elem"/>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <label class="font-weight-bold mt-3">Contact Details:</label>
                                            <hr class="p-0 m-0">
                                            <div class="row">
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPEmail">Email</label>
                                                    <input name="BPEmail" id="BPEmail" type="email" placeholder="Email" class="form-control MAILINPUT form-control-sm Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPPhone1">Phone 1</label>
                                                    <input name="BPPhone1" id="BPPhone1" type="number" oninput="MaxLengthInp(this,12)" placeholder="Phone 1" class="form-control PHONENOINPUT form-control-sm Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPPhone2">Phone 2</label>
                                                    <input name="BPPhone2" id="BPPhone2" type="number" oninput="MaxLengthInp(this,12)" placeholder="Phone 2" class="form-control PHONENOINPUT form-control-sm Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="BPMobNo">Mobile Number</label>
                                                    <input name="BPMobNo" id="BPMobNo" type="number"  oninput="MaxLengthInp(this,10)" placeholder="Mobile Number" class="form-control MONOINPUT form-control-sm Form_Elem" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 p-3 border">
                                       <div class="row p-3  mt-2 ">
                                           <div class="table-responsive">
                                                    <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table">
                                               </table>
                                           </div>
                                       </div>
                                    </div>
                                </div>
                                 </div>
                        </div>
                        <!-- Contact_Details Tab -->
                        <div class="tab-pane pt-2 m-0 mt-1" id="Contact_Details" role="tabpanel">
                                <div id="Contact_mst_Form" class="w-100 mt-2 p-2">
                                <input name="BPIdCD" hidden id="BPIdCD" type="text" placeholder="Mr/Mrs"class="form-control form-control-sm  BPId Contact_Form_Elem" />
                                <div class="row">
                                    <div class="col-md-6  p-3 border">
                                            <div class="row mt-0 mb-1">
                                                <div class="col-md-6  justify-content-end ">
                                                    <label>Active</label><br />
                                                    <label class="switch">
                                                        <input type="checkbox" value="Y" checked name="CPDIsActive" id="CPDIsActive" class="toggleSwitch form-control form-control-sm">
                                                        <span class="slider"></span>
                                                    </label>
                                                </div>
                                                <div class="col-md-6 text-right">
                                                    <button type="button" id="AddCpd" class="btn btn-sm btn-primary">Add Row</button>
                                                </div>
                                            </div>
                                            <label class="font-weight-bold">personal Info:</label>
                                            <hr class="p-0 m-0 " />
                                            <div class="row mt-2">
                                                <input hidden name="BPContDetId" id="BPContDetId" value="" type="text" placeholder="BPContDet Id" class="form-control form-control-sm Contact_Form_Elem" />
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="Title">Title</label>
                                                    <input name="Title" id="Title" type="text" placeholder="Mr/Mrs" oninput="MaxLengthInp(this,3)" class="form-control form-control-sm Contact_Form_Elem" />
                                                </div>
                                                <!-- First Name, Middle Name, Last Name -->
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="Fname">First Name</label>
                                                    <input name="Fname" id="Fname" type="text" placeholder="First Name" oninput="MaxLengthInp(this,20)" class="form-control form-control-sm Contact_Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="Mname">Middle Name</label>
                                                    <input name="Mname" id="Mname" type="text" placeholder="Middle Name" oninput="MaxLengthInp(this,15)" class="form-control form-control-sm  Contact_Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="Lname">Last Name</label>
                                                    <input name="Lname" id="Lname" type="text" placeholder="Last Name" oninput="MaxLengthInp(this,15)" class="form-control form-control-sm  Contact_Form_Elem" />
                                                </div>
                                                <!-- Date of Birth, Gender -->
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="DOB">Date Of Birth</label>
                                                    <div class="input-container">
                                                        <input name="DOB" id="DOB" type="date" placeholder="dd/mm/yyyy" class="form-control form-control-sm  Contact_Form_Elem" />
                                                    </div>
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="Gender">Gender</label>
                                                    <select name="Gender" id="Gender" class="form-control form-control-sm   Contact_Form_Elem">
                                                        <option value="">Select Gender</option>
                                                        <option>Male</option>
                                                        <option>Female</option>
                                                        <option>Other</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-6"></div>
                                            </div>
                                            <label class="font-weight-bold mt-2">Address Details:</label>
                                            <hr class="p-0 m-0 " />
                                            <div class="row">
                                                <!-- Address, Country, State, City -->
                                                <div class="col-md-6 mt-1 mb-1">
                                                    <label for="Addr">Address</label>
                                                    <textarea style="height:103px;" name="Addr" id="Addr" type="text" class="form-control border form-control-sm Contact_Form_Elem"></textarea>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="row">
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="CntryIdCD">Country</label>
                                                            <select id="CntryIdCD" name="CntryIdCD" value="" class="form-control CntryId form-control-sm  Contact_Form_Elem">
                                                                <option disabled selected>Select Country</option>
                                                            </select>
                                                        </div>
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="StateIdCD">State</label>
                                                            <select id="StateIdCD" name="StateIdCD" value="" class="form-control form-control-sm StateId Contact_Form_Elem">
                                                                <option disabled selected>Select State</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="BPCityCD">City</label>
                                                            <input id="BPCityCD" type="text" name="BPCityCD" placeholder="City" class="form-control form-control-sm Contact_Form_Elem" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- Permanent Address, Country, State, City -->
                                            <label class="font-weight-bold mt-2">Contact Details:</label>
                                            <hr class="p-0 m-0 " />
                                            <!-- Mobile No and Phone No -->
                                            <div class="row">
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="Email"> Email</label>
                                                    <input name="Email" id="Email" type="email" placeholder="Email" class="form-control MAILINPUT form-control-sm Contact_Form_Elem" />
                                                </div>

                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="Phone1">Phone No1</label>
                                                    <input id="Phone1" name="Phone1" type="number" placeholder="Phone No1" class="form-control PHONENOINPUT form-control-sm Contact_Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="input">Phone No2</label>
                                                    <input id="Phone2" name="Phone2" type="number" placeholder="Phone No2" class="form-control PHONENOINPUT form-control-sm Contact_Form_Elem" />
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1">
                                                    <label for="MobNo">Mobile No</label>
                                                    <input id="MobNo" name="MobNo" type="number" placeholder="Mobile No" class="form-control  MONOINPUT form-control-sm Contact_Form_Elem" />
                                                </div>
                                            </div>
                                    </div>
                                    <div class="col-md-6  p-3 border">
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table1">
                                            </table>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <!-- Address Tab -->
                         <div class="tab-pane pt-2 m-0 mt-1" id="Address_Details" role="tabpanel">
                                <div id="Address_mst_Form" class="w-100 mt-2 p-2 ">
                                   <div class="row">
                                        <div class="col-md-6  p-3 border">
                                            <div class="row mt-0 mb-1">
                                                <div class="col-md-6  justify-content-end ">
                                                    <label>Active</label><br />
                                                    <label class="switch">
                                                        <input type="checkbox" value="Y" checked name="ADIsActive" id="ADIsActive" class="toggleSwitch form-control form-control-sm">
                                                        <span class="slider"></span>
                                                    </label>
                                                </div>
                                                <div class="col-md-6 text-right">
                                                    <button type="button" id="AddAddr" class="btn btn-sm btn-primary">Add Row</button>
                                                </div>
                                            </div>
                                            <label class="font-weight-bold mt-2">Address Details:</label>
                                            <hr class="p-0 m-0 " />
                                            <div class="row mt-2">
                                                <input hidden name="BPAddrId" id="BPAddrId" value="" type="text" placeholder="BPAddr Id" class="form-control form-control-sm Address_Form_Elem" />
                                                <input hidden name="ADBPId" id="ADBPId" value="" type="text" placeholder="BPId" class="form-control BPId form-control-sm Address_Form_Elem" />
                                                <!-- Permanent Address, Address Type, GSTIN No -->
                                                <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                    <label for="AddrType">Address Type</label>
                                                    <select id="AddrType" name="AddrType" tabindex="14" class="form-control form-control-sm  Address_Form_Elem">
                                                        <option value="">Select Address Type</option>
                                                        <option value="B">Bill To</option>
                                                        <option value="S">Ship To</option>
                                                    </select>
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                    <label for="GSTINType">GSTIN Type</label>
                                                    <select id="GSTINType" name="GSTINType" tabindex="14" class="form-control form-control-sm   Address_Form_Elem">
                                                        <option value="">Select GSTIN Type</option>
                                                        <option value="0">Regular</option>
                                                        <option value="1">Standard</option>
                                                    </select>
                                                </div>
                                                <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                    <label for="GSTINNo">GSTIN No</label>
                                                    <input tabindex="10" id="GSTINNo" name="GSTINNo" type="text" placeholder="GSTIN No" class="form-control GSTININPUT form-control-sm  Address_Form_Elem" />
                                                </div>
                                            </div>
                                            <div class="row mt-3">
                                                <!-- Address, Country, State, City -->
                                                <div class="col-md-6 mt-1 mb-1">
                                                    <label for="AddrAd">Address</label>
                                                    <textarea style="height:103px;" name="AddrAd" id="AddrAd" type="text" class="form-control border form-control-sm Address_Form_Elem"></textarea>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="row">
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="CntryIdAd">Country</label>
                                                            <select id="CntryIdAd" name="CntryIdAd" value="" tabindex="10" class="form-control form-control-sm CntryId  Address_Form_Elem">
                                                                <option value="">Select Country</option>
                                                            </select>
                                                        </div>
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="StateIdAd">State</label>
                                                            <select id="StateIdAd" name="StateIdAd" value="" tabindex="11" class="form-control form-control-sm  StateId Address_Form_Elem">
                                                                <option value="">Select State</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6 mt-1 mb-1">
                                                            <label for="BPCityAd">City</label>
                                                            <input id="BPCityAd" type="text" name="BPCityAd" placeholder="City" tabindex="12" class="form-control form-control-sm Address_Form_Elem" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            </div>
                                            <div class="col-md-6  p-3 border">
                                                <div class="table-responsive">
                                                    <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table2">
                                                    </table>
                                                </div>
                                            </div>
                                       </div>
                            
                            </div>
                        </div>
                        <!-- Bank_Details_Tab-->
                        <div class="tab-pane  pt-2 m-0 mt-1" id="Bank_Details" role="tabpanel">
                            <div id="Bank_Details_Form" class="w-100 mt-2 p-2  ">
                              <div class="row">
                                    <div class="col-md-6  p-3 border">
                                        <div class="row mt-0 mb-1">
                                            <div class="col-md-6  justify-content-end ">
                                                <label>Active</label><br />
                                                <label class="switch">
                                                    <input type="checkbox" value="Y" checked name="BDIsActive" id="BDIsActive" class="toggleSwitch form-control form-control-sm">
                                                    <span class="slider"></span>
                                                </label>
                                            </div>
                                            <div class="col-md-6 text-right">
                                                <button type="button" id="AddBd" class="btn btn-sm btn-primary">Add Row</button>
                                            </div>
                                        </div>
                                        <div class="row mt-2">
                                            <input hidden name="BDBPId" id="BDBPId" value="" type="text" placeholder="BPId" class="form-control BPId form-control-sm Address_Form_Elem" />
                                            <input hidden name="BPBankDetId" id="BPBankDetId" value="" type="text" placeholder="Id" class="form-control form-control-sm Bank_Form_Elem" />
                                            <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                <label for="BankId">Bank Name</label>
                                                <select name="BankId" id="BankId" type="text" placeholder="Bank ID" class="form-control form-control-sm  Bank_Form_Elem"> </select>
                                            </div>
                                            <!-- Permanent Address, Address Type, GSTIN No -->
                                            <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                <label for="ACType">Account Type</label>
                                                <select id="ACType" name="ACType" tabindex="14" class="form-control form-control-sm  Bank_Form_Elem">
                                                    <option value="">Select Account Type</option>
                                                    <option value="S">Saving Account</option>
                                                    <option value="C">Current Account</option>
                                                </select>
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                <label for="ACNo">Account No</label>
                                                <input tabindex="10" id="ACNo" name="ACNo" type="number" placeholder="Account No" class="form-control  form-control-sm  Bank_Form_Elem" oninput="MaxLengthInp(this,15)" />
                                            </div>
                                            <!-- Update Date, Updated By, Create Date, Created By -->
                                            <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1 d-none ">
                                                <label for="UpdateDate">Updated On</label>
                                                <input readonly name="UpdateDate" id="UpdateDate" value="@formattedDate" type="text" placeholder="dd/mm/yy" class="form-control form-control-sm  Address_Form_Elem" />
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1 d-none ">
                                                <label for="UpdatedBy">Updated By</label>
                                                <input readonly name="UpdatedBy" id="UpdatedBy" value="@UserName" type="text" placeholder="Updated By" class="form-control form-control-sm  Address_Form_Elem" />
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1 d-none">
                                                <label for="CreateDate ">Created On</label>
                                                <input readonly name="CreateDate" id="CreateDate" value="@formattedDate" type="text" placeholder="dd/mm/yy" class="form-control form-control-sm  Address_Form_Elem" />
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-3  mt-1 mb-1 d-none">
                                                <label for="CreatedBy">Created By</label>
                                                <input readonly name="CreatedBy" id="CreatedBy" value="@UserName" type="text" placeholder="Created By" class="form-control form-control-sm  Address_Form_Elem" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6  p-3 border">
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table3">
                                            </table>
                                        </div>
                                    </div>
                               </div>
                            </div>
                        </div>
                        <!-- Attachment Details-->
                         <div class="tab-pane  pt-2 m-0 mt-1" id="Attachments" role="tabpanel">
                           <div class="w-100 mt-4 p-4 border">
                                    <div class="col-md-12 text-right table-responsive mt-3">
                                        <button type="button"  id="Addrow" class="btn btn-primary btn-sm mb-2">Add New Row</button>
                                    </div>
                                    <div class="col-md-12  table-responsive mt-3" style="height:300px!important;">
                                        <table class="table border  table-striped   table-hover table-bordered w-100" id="AttachmentTable">
                                            <thead>
                                                <tr>
                                                    <th class="p-2 text-center" nowrap>Sr.No</th>
                                                    <th class="p-2 text-center" nowrap>Active</th>
                                                    <th class="p-2" nowrap>Add/Update</th>
                                                    <th class="p-2" nowrap>File Name</th>
                                                    <th class="p-2" nowrap>File Extention</th>
                                                    <th class="p-2 d-none" nowrap>File Data</th>
                                                    <th class="p-2 d-none" nowrap>bpattachId</th>
                                                    <th class="p-2 d-none" nowrap>Flag</th>
                                                    <th class="p-2 text-center" nowrap>View</th>
                                                    <th class="p-2 text-center" nowrap>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                           </div>
                        </div>
                        <!--Accounting_Tab-->
                         <div class="tab-pane pt-2 m-0 mt-1" id="Accounting" role="tabpanel">
                            <div id="Accounting_Form" class="w-100 mt-2 p-2 ">
                                 <div class="row">
                                    <div  class="col-md-6  p-3 border">
                                         <div class="row">
                                            <div class="col-md-12 text-right">
                                                <button type="button" id="AddAccounting" class="btn btn-sm btn-primary">Add Row</button>
                                            </div>
                                             <div class="col-md-12 mb-2">
                                                <label class="font-weight-bold mt-2">Accounting Details:</label>
                                                <hr class="p-0 m-0 " />
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                <label for="FatherCardId ">Consolidating Business Partner</label>
                                                <select name="BFatherCardId" id="FatherCardId" type="text" placeholder="FatherCardId " class="form-control form-control-sm  busnesspartner Bank_Form_Elem">
                                                    <option value="">Select Consolidating Business Partner</option>
                                                </select>
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                <label for="FatherType">Father Type</label>
                                                <select name="FatherType" id="FatherType" type="text" placeholder="FatherType" class="form-control form-control-sm  Bank_Form_Elem">
                                                    <option value="">Select Type</option>
                                                    <option value="P">Payment consolidation</option>
                                                    <option value="D">Delivery Consolidation </option>
                                                </select>
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-4   mt-1 mb-1">
                                                <label class="" for="ConnBPId ">Connected Customer </label>
                                                <select name="ConnBPId" id="ConnBPId" type="text" class="form-control form-control-sm  busnesspartner Bank_Form_Elem">
                                                    <option value="">Select Connected Customer</option>
                                                </select>
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                <label for="PlngGroup ">Planning Group</label>
                                                <input id="PlngGroup" name="PlngGroup" type="text" placeholder="Planning Group" class="form-control  form-control-sm  Bank_Form_Elem" oninput="MaxLengthInp(this,15)" />
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-4   mt-1 mb-1">
                                                <label class="" for="PayBlock">Payment Block</label>
                                                <br />
                                                <label class="switch">
                                                    <input type="checkbox" value="N" name="PayBlock " id="PayBlock" class="toggleSwitch form-control ml-2 form-control-sm">
                                                    <span class="slider"></span>
                                                </label>
                                            </div>
                                            <div class="col-md-4 mt-1 mb-1 Payblokreason" style="display:none">
                                                <label for="PaymBlockRemark ">Payment Block Reason</label>
                                                <textarea style="height:103px;" name="PaymBlockRemark" id="PaymBlockRemark" type="text" class="form-control border form-control-sm Address_Form_Elem"></textarea>
                                            </div>
                                            <div class=" col-md-6 col-lg-6 col-xl-4   mt-1 mb-1">
                                                <label class="" for="SinglePaym ">Single Payment</label>
                                                <br />
                                                <label class="switch">
                                                    <input type="checkbox" value="N" name="SinglePaym" id="SinglePaym" class="toggleSwitch form-control ml-2 form-control-sm">
                                                    <span class="slider"></span>
                                                </label>
                                            </div>
                                                
                                            <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                <label for="BankAllCodeId ">Bank Charges Allocation Code</label>
                                                <select name="BankAllCodeId" id="BankAllCodeId" type="text" p class="form-control form-control-sm   Bank_Form_Elem">
                                                        <option value="">Select Allocation Code </option>
                                                </select>
                                            </div> 
                                            <div class=" col-md-6 col-lg-6 col-xl-4  mt-1 mb-1">
                                                <label for="HouseBankId ">House Bank </label>
                                                    <select name="HouseBankId" id="HouseBankId" type="text" p class="form-control form-control-sm   Bank_Form_Elem">
                                                        <option value="">Select House Bank</option>
                                                </select>
                                            </div>
                                         </div>
                                    </div>
                                    <div class="col-md-6  p-3 border">
                                         <div class="table-responsive">
                                                <table class="table table-bordered table-striped   table-hover table-bordered w-100" cellspacing="0" cellpadding="0" border="1" id="Table4">
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div> 
                        <!--TAX TAB-->
                            <div class="tab-pane pt-2 m-0 mt-1" id="TaxTab" role="tabpanel">
                                <div id="Accounting_Form" class="w-100 mt-2 p-2 ">
                                    <div class="row">
                                        <div class="col-md-12  p-3 border">
                                            <div class="row">
                                                <div class="col-md-12 ">
                                                    <label for="PymntTId" class="">Tax Information</label>
                                                    <button type="button" style="height:31px!important;" class="btn btn-sm btn-primary w-20 Tax_Info"><i class="fa fa-plus"></i></button>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class=" col-md-3 col-lg-3 col-xl-3   mt-1 mb-1">
                                                    <label class="WTLiable" for="WTLiable">WT Liable </label>
                                                    <br />
                                                    <label class="switch">
                                                        <input type="checkbox" value="N" name="WTLiable" id="WTLiable" class="toggleSwitch form-control ml-2 form-control-sm">
                                                        <span class="slider"></span>
                                                    </label>
                                                </div>
                                                <div class=" col-md-3 col-lg-3 col-xl-3  mt-1 mb-1 H_Feilds" style="display:none">
                                                    <label for="WTType">WT Type</label>
                                                    <select name="WTType" id="WTType" class="form-control form-control-sm   Bank_Form_Elem">
                                                        <option value="">Select  WT Type </option>
                                                        <option value="C">Cash  </option>
                                                        <option value="A">Accrual </option>
                                                    </select>
                                                </div>
                                                <div class=" col-md-3 col-lg-3 col-xl-3  mt-1 mb-1 H_Feilds " style="display:none">
                                                    <label for="Ass_WT_type">Assessee Type</label>
                                                    <select name="Ass_WT_type" id="Ass_WT_type" class="form-control form-control-sm   Bank_Form_Elem">
                                                        <option value="C">Company</option>
                                                        <option value="O">Other</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-3 col-lg-3 col-xl-3  mt-1 mb-1 H_Feilds" style="display:none">
                                                    <label class="" for="WT_appid">WTax Code Allowed</label>
                                                    <select multiple style="height:90px!important;" name="WT_appid" class="form-control border  form-select form-control-sm User_Form_Elem" id="WT_appid" value="">
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <!--Payment_Terms-->
                        <div class="tab-pane pt-2 m-0 mt-1" id="Payment_Terms" role="tabpanel">
                            <div id="Payment_Terms" class="w-100 mt-2 p-2 ">
                                <div class="row">
                                <div class="col-md-12  p-3 border">
                                    <div class="row">
                                        <div class="col-md-3 mt-1 mb-1">
                                            <label for="PymntTId">Payment Terms</label>
                                            <div class="row">
                                                <div class="col-md-3 pr-0">
                                                      <button type="button" style="height:31px!important;" class="btn btn-sm btn-primary w-100 Payment_Terms"><i class="fa fa-plus"></i></button>
                                                </div>
                                                <div class="col-md-9 pl-0">
                                                      <select id="PymntTId" name="PymntTId" class="form-control form-control-sm  Form_Elem">
                                                    <option value="">Define New</option>
                                                </select>
                                                </div>
                                              
                                            </div>
                                        </div>
                                        <div class=" col-md-3 col-lg-3 col-xl-3  mt-1 mb-1 ">
                                              <label for="IntrstRate">Interest on Arrears (%)</label>
                                              <input name="IntrstRate" id="IntrstRate" value="0" type="number" placeholder="Interest on Arrears(%)" class="form-control form-control-sm  Address_Form_Elem" />
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-xl-3  mt-1 mb-1 " >
                                            <label class="" for="Price List">Price List</label>
                                                   <select name="PListId" class="form-control border  form-select form-control-sm User_Form_Elem" id="PListId" >
                                            </select>
                                        </div>
                                        <div class=" col-md-3 col-lg-3 col-xl-3  mt-1 mb-1 ">
                                            <label for="Discount">Discount </label>
                                             <input name="Discount" id="Discount" value="0" type="number" placeholder="Discount" class="form-control form-control-sm  Address_Form_Elem" />
                                        </div>
                                        <div class=" col-md-3 col-lg-3 col-xl-3  mt-1 mb-1 ">
                                            <label for="CredLimit">Credit Limit  </label>
                                             <input name="CredLimit" id="CredLimit" value="0" type="number" placeholder="Credit Limit" class="form-control form-control-sm  Address_Form_Elem" />
                                        </div>
                                        <div class=" col-md-3 col-lg-3 col-xl-3  mt-1 mb-1 ">
                                            <label for="CommitLimit ">Commitment Limit  </label>
                                            <input name="CommitLimit" id="CommitLimit" value="0" type="number" placeholder="Commitment Limit " class="form-control form-control-sm  Address_Form_Elem" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                     </div>
                     </div>
                     </div>
                     <div class="row ">
                        <div class=" col-md-6 col-lg-6 col-xl-3   mb-1 d-none">
                            <label for="CreatedBy">Created By</label>
                            <input name="CreatedBy" id="CreatedBy" readonly type="text" value="@UserName" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                        </div>
                        <div class=" col-md-6 col-lg-6 col-xl-3  mb-1 d-none">
                            <label for="UpdatedBy">Updated By</label>
                            <input name="UpdatedBy" id="UpdatedBy" readonly type="text" value="@UserName" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                        </div>
                        <div class=" col-md-6 col-lg-6 col-xl-3   mb-1 d-none">
                            <label for="CreateDate">Create Date</label>
                            <input name="CreateDate" id="CreateDate" readonly type="text" value="@formattedDate" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                        </div>
                        <div class=" col-md-6 col-lg-6 col-xl-3  mb-1 d-none">
                            <label for="UpdateDate">Update Date</label>
                            <input name="UpdateDate" id="UpdateDate" readonly type="text" value="@formattedDate" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                        </div>
                     </div>
                </form>
            </div>
            <!-- Row end -->
            <div class="col-md-12 ">
                    <button type="button" id="BPForm_Delete_btn" style="display:none; width:80px;" class="btn ml-1 mr-1 btn-sm btn-danger">Delete</button>
                    <button type="button" id="BPForm_Update_btn" style="display:none; width:80px;" class="btn ml-1 mr-1 btn-sm text-white btn-info">Update</button>
                    <button type="button" id="BPForm_Save_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-success">Save</button>
                    <button type="reset" id="BPForm_reset_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-dark">Reset</button>
                    <button type="reset" id="Form_reset_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-dar d-none">Reset</button>
                </div>
        </div>
        </div>
    </div>
</div>
<!-- Modal Form-->
<div class="modal" id="DocumentViewer">
    <div class="modal-content" style="height: 90vh; margin-top: 5vh;">
        <div class="card-header bg-white border-0">
            <a class="downloadLink " style="display: none;"><button type="button" class="btn  btn-primary p-1">Download Document</button> </a>
            <span class="close closeModal" id="">&times;</span>
        </div>
        <div class="card-body viewerbody border p-2 text-center" style="overflow-y:scroll!important;overflow-x:scroll">
            <div class=" pdfdocument-viewer w-100">
            </div>
            <div class=" image-container document-viewer document-viewer"></div>
        </div>
    </div>
</div>
<!--Payment Run Modal Form-->
<div class="modal" id="Payment_TermsModal">
    <div class="modal-content">
        <div class="card-header bg-white border-0 p-1">
            <div class="row">
                <div class="col-6">
                    <h4>Payment Terms</h4>
                </div>
                <div class="col-6 text-right">
                    <span class="close closeModal" id="">&times;</span>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <form id="Pay_term_form" class="w-100 mt-4 p-4 border">
                <div class="row justify-content-end mt-1 mb-3">
                    <div class="col-auto">
                        <label class="switch">
                            <input type="checkbox" value="Y" checked name="IsActive" id="IsActive" class="toggleSwitch form-control form-control-sm">
                            <span class="slider"></span>
                        </label>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 mt-1 mb-1">
                        <input name="PymntTIde" id="PymntTIde" type="text" hidden oninput="MaxLengthInp(this,100)" placeholder="Payment Code" class="form-control form-control-sm Payment_terms_inp" />

                        <label for="PymntCode">Payment Terms Code</label>
                        <input name="PymntCode" id="PymntCode" type="text" oninput="MaxLengthInp(this,100)" placeholder="Payment Code" class="form-control form-control-sm Payment_terms_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="BslineDate">Due Date Based On</label>
                        <select class="form-control form-control-sm" name="BslineDate" id="BslineDate">
                            <option value="P" selected>Posting Date</option>
                            <option value="S">System Date</option>
                            <option value="D">Document Date</option>
                        </select>
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="NoOfDays"> No of Days</label>
                        <input name="NoOfDays" id="NoOfDays" type="number" oninput="MaxLengthInp(this,10)" placeholder="No Of Days" class="form-control form-control-sm Payment_terms_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TolDays"> Tolerance Days</label>
                        <input name="TolDays" id="TolDays" type="number" oninput="MaxLengthInp(this,10)" placeholder="TolDays" class="form-control form-control-sm Payment_terms_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="InstNo">No.of.Installment</label>
                        <div class="input-group">
                            <input name="InstNo" id="InstNo" type="text" placeholder="" oninput="MaxLengthInp(this,2)" readonly value="" class="form-control form-control-sm Payment_terms_inp myvalue" />
                            <div class="input-group-append">
                                <button type="button" style="height: 31px!important;" disabled class="btn btn-sm btn-primary AddInstallments"><i class="fa fa-plus"></i></button>
                            </div>
                        </div>
                    </div>


                    <div class="col-md-3 mt-1 mb-1">
                        <label for="OpenRcpt"> Open Incoming Payment</label>
                        <select name="OpenRcpt" id="OpenRcpt" type="text" class="form-control  form-control-sm Payment_terms_inp">
                            <option value="No" selected>No</option>
                            <option value="Cash">Cash</option>
                            <option value="Credit">Credit</option>
                            <option value="BankMaster">Bank Master</option>

                        </select>
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="DiscCode">Cash Discount Name</label>
                        <div class="input-group">
                            <select id="DiscCode" name="DiscCode" class="form-control form-control-sm  Payment_terms_inp">
                                <option value="">Select Cash Discount Name</option>
                            </select>
                            <button type="button" style="height:31px!important;" disabled class="btn btn-sm btn-primary w-25  CashDiscount"><i class="fa fa-plus"></i></button>
                        </div>
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TotDiscnt"> Total Discount %</label>
                        <input name="TotDiscnt" id="TotDiscnt" type="number" oninput="MaxLengthInp(this,5)" placeholder="Total Discoun" class="form-control form-control-sm Payment_terms_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="LatePyChrg">Interest % on Receivable </label>
                        <input name="LatePyChrg" id="LatePyChrg" type="number" oninput="MaxLengthInp(this,10)" placeholder="Late Payment Charge" class="form-control form-control-sm Payment_terms_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="CredLimit">Max Credit </label>
                        <input name="CredLimit" id="CredLimit" type="number" oninput="MaxLengthInp(this,19)" placeholder="Credit Limit" class="form-control form-control-sm Payment_terms_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="CommitLimit">Commitement Limit  </label>
                        <input name="CommitLimit" id="CommitLimit" type="number" oninput="MaxLengthInp(this,19)" placeholder="Commitement Limit " class="form-control form-control-sm Payment_terms_inp" />
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12 mt-1 mb-1 ">
                        <button type="button" id="Pay_Save_btn" style="width:80px;" class="btn  mr-1 btn-sm btn-success">Save</button>
                        @* <button type="button" id="Pay_update_btn" style="width:80px;" class="btn  mr-1 btn-sm btn-primary">update</button> *@

                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- PaymentModal inside Payment_TermsModal -->
<div class="modal" id="PaymentModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Installments</h5>
            <span class="close closeModalInstallments" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="card-body border">
                <div class="row mb-3 mt-1">
                    <div class="col-md-3">
                        <label>No. of Installments </label>
                        <input class="form-control form-control-sm InstNo" type="number" oninput="MaxLengthInp(this,2)" id="InInstNo" name="InstNo" />
                    </div>
                    <div class="col-md-3 mt-1  mb-1">
                        <label for="">Credit Method</label>
                        <select id="CrdMthd" name="CrdMthd" class="form-control form-control-sm  Form_Elem">
                            <option value="F">First Installment</option>
                            <option value="L">Last Installment</option>
                            <option value="E">Equally</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2 mt-1 mb-1">
                        <label for="IsActive1" class="mt-0 p-0">Apply Tax in First Installment </label>
                        <br>
                        <label class="switch">
                            <input type="checkbox" value="N" name="IsActive1" id="IsActive1" class="toggleSwitch form-control form-control-sm">
                            <span class="slider"></span>
                        </label>
                    </div>
                    <div class="col-md-2 mt-1 mb-1">
                        <label for="IsActive2" class="mt-0 p-0">Update Tax Proportionally</label>
                        <br>
                        <label class="switch">
                            <input type="checkbox" value="Y" checked name="IsActive2" id="IsActive2" class="toggleSwitch form-control form-control-sm">
                            <span class="slider"></span>
                        </label>
                    </div>
                </div>


                <div class="table-responsive" style="height:500px;">
                    <table class="table border  table-striped   table-hover table-bordered w-100" id="PaymetTbl">
                        <thead>
                            <tr>
                                <th class=" p-2 text-center" nowrap>Sr.No</th>
                                <th class=" p-2 text-center" nowrap>Action</th>
                                <th class=" p-2 text-right" nowrap>Month</th>
                                <th class=" p-2 text-right" nowrap>Days</th>
                                <th class=" p-2 text-right" nowrap>%</th>
                                <th class=" p-2 text-right d-none" nowrap >InstlmntId</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="row mb-3">
                    <div class="col-md-12">
                        <button type="button" id="Investment_Save_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-success">Save</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<!-- Cash Discount  -->
<div class="modal" id="CashDiscountModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title"> Cash  Discount</h5>
            <span class="close CashDiscountModalClose" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="row mt-2">
                <input hidden name="CashDisId" id="CashDisId" value="" type="text" placeholder="Id" class="form-control form-control-sm UnitG_Elem" />
                <div class="col-md-4 mt-1 mb-1">
                    <label for="Code">Code</label>
                    <input id="Code" name="Code" type="text" placeholder="Code" class="form-control form-control-sm UnitG_Elem" oninput="MaxLengthInp(this,20)" />
                </div>
                <!-- Sales Employee Name -->
                <div class="col-md-4 mt-1 mb-1">
                    <label for="Name"> Name</label>
                    <input id="Name" name="Name" type="text" placeholder="Name" class="form-control form-control-sm UnitG_Elem" oninput="MaxLengthInp(this,20)" />
                </div>
                <div class="col-md-2  m mb-1">
                    <div class="col-md-1 mb-1 ">
                        <label for="ByDate" class="mt-2">ByDate</label>
                        <div class="text-left ml-0">
                            <label class="switch">
                                <input type="checkbox" value="N" name="ByDate" id="ByDate" class="toggleSwitch form-control UnitG_Elem form-control-sm">
                                <span class="slider"></span>
                            </label>
                        </div>
                    </div>

                </div>
                <div class="col-md-2  m mb-1">
                    <div class="col-md-1 mb-1 ">
                        <label for="Freight" class="mt-2">Freight</label>
                        <div class="text-left ml-0">
                            <label class="switch">
                                <input type="checkbox" value="Y" checked name="Freight" id="Freight" class="toggleSwitch form-control UnitG_Elem form-control-sm">
                                <span class="slider"></span>
                            </label>
                        </div>
                    </div>

                </div>
                <div class="col-md-4 mt-1 mb-1">
                    <label for="BaseDate">Base Date</label>
                    <select id="BaseDate" name="BaseDate" class="form-control form-control-sm  UnitG_Elem">
                        <option value="P">Posting Date</option>
                        <option value="S">System Date</option>
                        <option value="D">Document Date</option>

                    </select>
                </div>
               
            </div>
            <div class="row">
                <div class="col-md-10"></div>
                <div class="col-md-2 mt-1 text-right mb-1">
                    <button type="button" id="DiscRowAdd" class="btn btn-sm btn-primary mt-3 btn-sm mr-3">Add New Row</button>
                </div>
            </div>
            <div class="table-responsive mt-3" style="height:500px;">
                <table class="table border  table-striped   table-hover table-bordered w-100" id="DiscTable">
                    <thead>
                        <tr>
                            <th class="p-2 text-center ">Sr.No</th>
                            <th class="p-2 text-center ">Action</th>
                            <th class="p-2 text-right">Day</th>
                            <th class="p-2 text-right">Month</th>
                            <th class="p-2 text-right">Cash Discount Days</th>
                            <th class="p-2 text-right">%</th>
                            <th class="p-2" hidden>CashDisDetId</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="row mb-3">
                <div class="col-md-12">
                    <button type="button" id="CashD_Save_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-success">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>
   <!-- Tax Info Modal-->
<div class="modal" id="Tax_Modal">
    <div class="modal-content">
        <div class="card-header bg-white border-0 p-1">
            <div class="row">
                <div class="col-6">
                    <h4>Tax Information</h4>
                </div>
                <div class="col-6 text-right">
                    <span class="close closeModal" id="">&times;</span>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <form id="Pay_term_form" class="w-100 mt-4 p-4 border">
                <div class="row justify-content-end mt-1 mb-3">
                </div>
                <div class="row">
                    <div class="col-md-3 mt-1 mb-1">
                        <input name="BPTaxId" id="BPTaxId" type="text" hidden oninput="MaxLengthInp(this,100)" placeholder="BPTaxId" class="form-control form-control-sm Tax_Info_inp" />
                        <label for="TaxId0">P.A.N.NO.</label>
                        <input name="TaxId0" id="TaxId0" type="text" oninput="MaxLengthInp(this,100)" placeholder="P.A.N.NO." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId1">P.A.N.Circle NO.</label>
                        <input name="TaxId1" id="TaxId1" type="text" oninput="MaxLengthInp(this,100)" placeholder="P.A.N. Circle NO." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId2">P.A.N.Ward NO.</label>
                        <input name="TaxId2" id="TaxId2" type="text" oninput="MaxLengthInp(this,100)" placeholder="P.A.N. Ward NO." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId3">P.A.N.Assessing Officer</label>
                        <input name="TaxId3" id="TaxId3" type="text" oninput="MaxLengthInp(this,100)" placeholder="P.A.N.Assessing Officer" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId4">Deductee Ref.No</label>
                        <input name="TaxId4" id="TaxId4" type="text" oninput="MaxLengthInp(this,100)" placeholder="Deductee Ref.No" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId5">LST/VAT No.</label>
                        <input name="TaxId5" id="TaxId5" type="text" oninput="MaxLengthInp(this,100)" placeholder="LST/VAT No." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId6">CST No.</label>
                        <input name="TaxId6" id="TaxId6" type="text" oninput="MaxLengthInp(this,100)" placeholder="CST No" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId7">TAN No.</label>
                        <input name="TaxId7" id="TaxId7" type="text" oninput="MaxLengthInp(this,100)" placeholder="TAN No" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId8">Service Tax No.</label>
                        <input name="TaxId8" id="TaxId8" type="text" oninput="MaxLengthInp(this,100)" placeholder="Service Tax No." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId9">Company Type</label>
                        <input name="TaxId9" id="TaxId9" type="text" oninput="MaxLengthInp(this,100)" placeholder="Company Type" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId10">Nature Of Business</label>
                        <input name="TaxId10" id="TaxId10" type="text" oninput="MaxLengthInp(this,100)" placeholder="Nature Of Business" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId11">Assessee Type</label>
                        <input name="TaxId11" id="TaxId11" type="text" oninput="MaxLengthInp(this,100)" placeholder="Assessee Type" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId12">TIN No.</label>
                        <input name="TaxId12" id="TaxId12" type="text" oninput="MaxLengthInp(this,100)" placeholder="TIN No." class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                    <div class="col-md-3 mt-1 mb-1">
                        <label for="TaxId13">ITR Filling</label>
                        <input name="TaxId13" id="TaxId13" type="text" oninput="MaxLengthInp(this,100)" placeholder="ITR Filling" class="form-control form-control-sm Tax_Info_inp" />
                    </div>
                 
                </div>
                <div class="row">
                    <div class="col-md-12 mt-1 mb-1 ">

                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        function Loader() {
            $(".Loader1").toggleClass('d-none');
        }
        //Modal Funcnbality
        {
            $(".CashDiscountModalClose").click(function(){
                $("#CashDiscountModal").hide();
            })
            $(".closeModalInstallments").click(function(){
                $("#PaymentModal").hide();
            })
        
        }
        //Get Dropdown Data
        {  

             // Load Ass_WT_type
             $("#Ass_WT_type").change(function(){
                 BindDropdownofWtax($(this).val())
             })
             BindDropdownofWtax($("#Ass_WT_type").val())
             function BindDropdownofWtax(option){
                    $.ajax({
                        url: '@Url.Action("WTAXCODE", "GetDropdownData")',
                        type: 'GET',
                        data: {option: option },
                        dataType: 'json',
                        success: function (response) {
                            if (response.length > 0) {
                                let list = "<option value=''>Select WTax Code</option>";
                                for (var i = 0; i < response.length; i++) {
                                    list += "<option value='" + response[i].WTId + "'>" + response[i].WTCode + "-" + response[i].WTName + "</option>";
                                }
                                $("#WT_appid").html(list);
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
             }
             //BP Partner
              $.ajax({
                    url: '@Url.Action("BUSINESSPARTNER", "GetDropdownData")',
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        if (response.length > 0) {
                            let list = "<option value=''>Select Business Partner</option>";
                            for (var i = 0; i < response.length; i++) {
                                list += "<option value='" + response[i].BPId + "'>" + response[i].BPCode + "-" + response[i].BPName + "</option>";
                            }
                            $(".busnesspartner").html(list);
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            
            //Bank dropdown
            $.ajax({
                url: '@Url.Action("BANK", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Bank</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].BankId + "'>" + response[i].BankName + "</option>";
                        }
                        $("#BankId").html(list);
                        $("#HouseBankId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //Get Price List
            $.ajax({
                url: '@Url.Action("PRICELIST", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Price List</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].PListId + "'>" + response[i].PListName + "</option>";
                        }
                        $("#PListId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
             //Bank Allocation Code
            $.ajax({
                url: '@Url.Action("BANKALLOCATIONCODE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Allocation Code</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].BankAllCodeId + "'>" + response[i].Code + "</option>";
                        }
                        $("#BankAllCodeId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //GET BP GRUP
           
            // GET Country
            $.ajax({
                url: '@Url.Action("COUNTRY","GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Country</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].CntryId + "'>" + response[i].CntryCode + "-" + response[i].CntryName + "</option>";
                        }
                        $(".CntryId").html(list);

                        let list1 = "<option value=''>Select Country</option>";
                        for (var i = 0; i < response.length; i++) {
                            list1+= "<option value='" + response[i].CntryId + "'>" + response[i].CntryCurrCode + "-" + response[i].CntryCurrSymbol + "</option>";
                        }
                        $("#BPCurrId").html(list1);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // GET State
            $.ajax({
                url: '@Url.Action("STATE","GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select State</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].StateId + "'>" + response[i].StateCode + "-" + response[i].StateName + "</option>";
                        }
                        $(".StateId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            // Get businessparnerId with name
            $.ajax({
                url: '@Url.Action("BUSINESSPARTNER", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Business Partner</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].BPId + "'>" + response[i].BPCode + "-" + response[i].BPName + "</option>";
                        }
                        $(".BpId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
        }
        // Region Switch Functions
        {
            $("#PayBlock").change(function(){
              if($(this).val()=="Y")
              {
                $(".Payblokreason").show()
                $("#PaymBlockRemark").val("")

              }else{
                $(".Payblokreason").hide()
                $("#PaymBlockRemark").val("")
              }
            })
            $("#WTLiable").change(function () {
              if($(this).val()=="Y")
              {
                  $(".H_Feilds").show()
                  
              }else{
                $(".H_Feilds").hide()
              }
            })
            
        }
        //Region Add
        {
            $("#AddCpd").click(function () {
                var CPDdata=[];
                let isValid=true;
                var formData = {};
                $("#Contact_mst_Form input,select,textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).find('textarea').lenght) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = ["Title","Fname", "Mname", "Lname", "Addr", "Phone1", "Email", "DOB", "Gender", "Phone2"];
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {
                        if (inputName === "DOB") {
                            var dateString = inputValue;
                            var dateAndTime = dateString.split(" ");
                            const [year, month, day] = dateAndTime[0].split('-');
                            const formattedDate = `${day}-${month}-${year}`;
                            formData[inputName] = formattedDate;
                        } else if (inputName === "BPCityCD") {
                            formData["BPCity"] = inputValue;
                        } else if (inputName === "StateIdCD") {
                            formData["StateId"] = inputValue;
                        } else if (inputName === "CntryIdCD") {
                            formData["CntryId"] = inputValue;
                        } else if (inputName === "CPDIsActive") {
                            formData["IsActive"] = inputValue;
                        } else if (inputName === "BPIdCD") {
                            formData["BPId"] = inputValue;
                        } else {
                            formData[inputName] = inputValue;
                        }
                    }
                });
                if (isValid) {
                    var row = "";
                    var tablelength = $("#Table1 tbody tr").length;
                    row += "<tr>";
                    row += "<td>" + parseInt(tablelength + 1) + "</td>";
                    row += `<td><i class="fa fa-edit CPDtable_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  CPDtable_delete"></i></td>`;
                    if (formData.IsActive == "Y") {
                        row += `<td>Y</td>`;
                    } else {
                        row += `<td>N</td>`;
                    }
                    row += "<td class=' d-none t-center'>" + formData.BPContDetId + "</td>";
                    row += "<td class='text-center d-none'>" + formData.BPId + "</td>";
                    row += "<td class=''>" + $("#BPCode").val() + "</td>";
                    row += "<td class=''>" + $("#BPName").val() + "</td>";
                    row += "<td class=''>" + formData.Title + "</td>";
                    row += "<td class=''>" + formData.Fname + "</td>";
                    row += "<td class=''>" + formData.Mname + "</td>";
                    row += "<td class=''>" + formData.Lname + "</td>";
                    row += "<td class=''>" + formData.DOB + "</td>";
                    row += "<td class=''>" + formData.Gender + "</td>";
                    row += "<td class=''>" + formData.Addr + "</td>";
                    row += "<td class=''>" + $("#CntryIdCD option:selected").text(); + "</td>";
                    row += "<td class=''>" + $("#StateIdCD option:selected").text(); + "</td>";
                    row += "<td class=''>" + formData.BPCity + "</td>";
                    row += "<td class=''>" + formData.Email + "</td>";
                    row += "<td class=''>" + formData.Phone1 + "</td>";
                    row += "<td class=''>" + formData.Phone2 + "</td>";
                    row += "<td class=''>" + formData.MobNo + "</td>";
                    row += "<td class=''>" + formData.CntryId + "</td>";
                    row += "<td class=''>" + formData.StateId + "</td>";
                    row += "</tr>";
                    var dataTable = $('#Table1').DataTable();
                    var newRow = $(row).appendTo('#Table1 tbody');
                    dataTable.row.add(newRow).draw(false);
                    $("#Title,#Fname,#Mname,#Lname,#Gender,#Addr,#CntryIdCD,#StateIdCD,#BPCityCD,#DOB,#Email,#Phone1,#Phone2,#MobNo,#BPContDetId").val("")
                    $("#CPDIsActive").val("Y");
                    $("#CPDIsActive").prop("checked", true);
                }
            })
            $("#AddAddr").click(function () {
              
                let isValid = true;
                let formData = {};
                $("#Address_mst_Form input, select, textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).is('textarea')) {
                        inputValue = $(this).val();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = ["AddrType", "GSTINNo", "GSTINType"]; // Include GSTINType in mandatory fields
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {
                        if (inputName == "ADBPId") {
                            formData["BPId"] = inputValue;
                        } else if (inputName == "AddrAd") {
                            formData["Addr"] = inputValue;
                        } else if (inputName == "CntryIdAd") {
                            formData["CntryId"] = inputValue;
                        } else if (inputName == "StateIdAd") {
                            formData["StateId"] = inputValue;
                        } else if (inputName == "BPCityAd") {
                            formData["BPCity"] = inputValue;
                        } else if (inputName == "ADIsActive") {
                            formData["IsActive"] = inputValue;
                        } else {
                            formData[inputName] = inputValue;
                        }
                    }

                });
                if (isValid) {  
                    var row = "";
                    var tablelength = $("#Table2 tbody tr").length;
                    row += "<tr>";
                    row += "<td>" + parseInt(tablelength + 1) + "</td>";
                    row += `<td><i class="fa fa-edit Addrtable_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  Addrtable_delete"></i></td>`;
                    if (formData.IsActive == "Y") {
                        row += `<td>Y</td>`;
                    } else {
                        row += `<td>N</td>`;
                    }
                    row += "<td class=''>" + $("#BPName").val() + "</td>";
                    row += "<td class=''>" + $("#BPCode").val() + "</td>";
                    row += "<td class='text-center d-none'>" + formData.BPAddrId + "</td>";
                    row += "<td class='text-center d-none'>" + formData.BPId + "</td>";
                    if (formData.AddrType == "B") {
                        row += "<td class='text-center'><center>Bill TO</center>";
                    } else {
                        row += "<td class='text-center'><center>Ship To</center>";
                    }
                    row += "<td class=' d-none'>" + formData.AddrType + "</td>";
                    if (formData.GSTINType == "1") {
                        row += "<td class='text-center'><center>Standard</center>";
                    } else {
                        row += "<td class='text-center'><center>Regular</center>";
                    }
                    row += "<td class=' d-none'>" + formData.GSTINType + "</td>";
                    row += "<td class=''>" + formData.GSTINNo + "</td>";
                    row += "<td class=''>" + formData.Addr + "</td>";
                    row += "<td class=''>" + $("#CntryIdAd option:selected").text(); + "</td>";
                    row += "<td class=''>" + $("#StateIdAd option:selected").text(); + "</td>";
                    row += "<td class=''>" + formData.BPCity + "</td>";
                    row += "<td class=''>" + formData.StateId + "</td>";
                    row += "<td class=''>" + formData.CntryId + "</td>";
                    row += "</tr>";
                    var dataTable = $('#Table2').DataTable();
                    var newRow = $(row).appendTo('#Table2 tbody');
                    dataTable.row.add(newRow).draw(false);
                    $("#AddrType,#GSTINType,#GSTINNo,#AddrAd,#CntryIdAd,#StateIdAd,#BPCityAd,#BPAddrId").val("")
                    $("#ADIsActive").val("Y");
                    $("#ADIsActive").prop("checked", true);

                }
            })
            $("#AddBd").click(function () {
                let isValid = true;
                let formData = {};
                $("#Bank_Details_Form input, select, textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).is('textarea')) {
                        inputValue = $(this).val();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = ["BankId", "ACType", "ACNo"]; // Include GSTINType in mandatory fields
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {
                        if (inputName == "BDBPId") {
                            formData["BPId"] = inputValue;
                        } else if (inputName == "BDIsActive") {
                            formData["IsActive"] = inputValue;
                        } else {
                            formData[inputName] = inputValue;
                        }
                    }
                });
                if (isValid) {
                    var row = "";
                    var tablelength = $("#Table3 tbody tr").length;
                   
                    row += "<tr>";
                    row += "<td>" + parseInt(tablelength + 1) + "</td>";
                    row += `<td><i class="fa fa-edit Bdtable_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  Bdtable_delete"></i></td>`;
                    if (formData.IsActive == "Y") {
                        row += `<td>Y</td>`;
                    } else {
                        row += `<td>N</td>`;
                    }
                    row += "<td class='text-center tbl_Main_ID d-none'>" + formData.BPBankDetId + "</td>";
                    row += "<td class='text-center d-none'>" + formData.BPId + "</td>";
                    row += "<td class=''>" + $("#BPCode").val() + "</td>";
                    row += "<td class=''>" + $("#BPName").val() + "</td>";
                    row += "<td class=''>" + $("#BankId option:selected").text() + "</td>";
                    if (formData.ACType == "C") {
                        row += "<td class='text-center'><center>Current Account</center>";
                    } else {
                        row += "<td class='text-center'><center>Saving Account</center>";
                    }
                    row += "<td class=' d-none'>" + formData.ACType + "</td>";
                    row += "<td class=''>" + formData.ACNo + "</td>";
                    row += "<td class=' d-none'>" + formData.BankId + "</td>";
                    row += "</tr>";
                    var dataTable = $('#Table3').DataTable();
                    var newRow = $(row).appendTo('#Table3 tbody');
                    dataTable.row.add(newRow).draw(false);
                    $("#BankId,#ACType,#ACNo,#BPBankDetId").val("")
                    $("#BDIsActive").val("Y");
                    $("#BDIsActive").prop("checked", true);
                }
            })  
            $("#AddAccounting").click(function () {
                var tablelength = $("#Table4 tbody tr").length;
                let isValid = true;
                let formData = {};
                $("#Accounting_Form input, select, textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).is('textarea')) {
                        inputValue = $(this).val();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = ["FatherCardId", "FatherType"]; // Include GSTINType in mandatory fields
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {
                        formData[inputName] = inputValue;
                    }
                });
                if (isValid) {
                    var row = "";
                    var tablelength = $("#Table4 tbody tr").length;
                    row += "<tr>";
                    row += "<td>" + parseInt(tablelength + 1) + "</td>";
                    row += `<td><i class="fa fa-edit Acctable_edit text-primary mr-1"></i> </td>`;
                    row += "<td class='text-center tbl_Main_ID d-none'>" + $("#BPId").val() + "</td>";
                    row += "<td class=''>" + $("#BPCode").val() + "</td>";
                    row += "<td class=''>" + $("#BPName").val() + "</td>";
                    row += "<td class='text-center'>" + $("#FatherCardId option:selected").text() + "</td>";
                    row += "<td class='text-center d-none'>" + $("#FatherCardId option:selected").val() + "</td>";
                    row += "<td class='text-center'>" + $("#FatherType option:selected").text() + "</td>";
                    row += "<td class='text-center d-none'>" + $("#FatherType option:selected").val() + "</td>";
                    row += "<td class='text-center'>" + $("#ConnBPId option:selected").text() + "</td>";
                    row += "<td class='text-center d-none'>" + $("#ConnBPId option:selected").val() + "</td>";
                    row += "<td class='text-center '>" + $("#PlngGroup").val() + "</td>";
                    if ($("#PayBlock").val()== "Y") {
                        row += `<td>Y</td>`;
                    } else {
                        row += `<td>N</td>`;
                    }
                    row += "<td class='text-center'>" + $("#PaymBlockRemark").val() + "</td>";
                    if ($("#SinglePaym").val() == "Y") {
                        row += `<td>Y</td>`;
                    } else {
                        row += `<td>N</td>`;
                    }
                    row += "<td class='text-center'>" + $("#BankAllCodeId option:selected").text() + "</td>";
                    row += "<td class='text-center d-none'>" + $("#BankAllCodeId option:selected").val() + "</td>";
                    row += "<td class='text-center'>" + $("#HouseBankId  option:selected").text() + "</td>";
                    row += "<td class='text-center d-none'>" + $("#HouseBankId  option:selected").val() + "</td>";
                    row += "</tr>";
                    if ($.fn.DataTable.isDataTable('#Table4')) {
                        $('#Table4').DataTable().destroy();
                    }
                    LoadAccoutningTableData([], "Table4")
                    var dataTable = $('#Table4').DataTable();
                    var newRow = $(row).appendTo('#Table4 tbody');
                    dataTable.row.add(newRow).draw(false);
                    $("#Accounting_Form")[0].reset();

                    // Clear select2 fields
                    $("#Accounting_Form .select2-hidden-accessible").val(null).trigger('change');
                    $("#BankId,#Payblokreason,#BankAllCodeId,#HouseBankId").val("")
                    $("#BDIsActive").val("Y");
                    $("#BDIsActive").prop("checked", true);
                }
            })
        }
        
        //Region BP Details Select Row Data
        {
            //Region Select Row Data
            $(document).on("click", ".table_edit", function () {
                var $row = $(this).closest("tr");
                $row.addClass("active");
                bindrecord($row)
            });
            function bindrecord($row) {
                var rowObject = {};
                $row.find('td').each(function (index) {
                    var $td = $(this);
                    var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                    if ($td.find('input').length) {
                        rowObject[key] = $td.find('input').val();
                    } else if ($td.find('textarea').length) {
                        rowObject[key] = $td.find('textarea').val();
                    } else if ($td.find('img').length) {
                        rowObject[key] = $td.find('img').attr("src");
                    } else if ($td.find('select').length) {
                        // Handle select elements if needed
                    } else {
                        rowObject[key] = $td.text().trim();
                    }
                });
                currentRowObject = rowObject;
                $("#Contact_Details_Tab").attr("href", "#Contact_Details");
                $("#Address_Details_Tab").attr("href", "#Address_Details");
                $("#Bank_Details_Tab").attr("href", "#Bank_Details");
                $("#Attachments_Tab").attr("href", "#Attachments");
                $("#Accounting_Tab").attr("href", "#Accounting");
                $("#BPId").val(rowObject.BPId);
                $(".BPId").val(rowObject.BPId);
                LoadCPDTableData(rowObject.BPId);
                LoadAccoutningTable();
                LoadAttachmentData();
                LoadAddrTableData(rowObject.BPId);
                LoadBdTableData(rowObject.BPId);
                LoadTAXData(rowObject.BPId);
                $("#BPCode").val(rowObject.Code);
                $("#BPName").val(rowObject.Name);
                $("#BPAliasName").val(rowObject.AliasName);
                $("#BPCardType").val(rowObject.CardType).trigger("change");
                // Note: The BPGrpId value is set in the callback function of getGroupsByCardType
                $("#BPAddr").val(rowObject.Address);
                $("#BPCity").val(rowObject.City);
                $("#CntryId").val(rowObject.CountryId).trigger("change");
                $("#StateId").val(rowObject.StateId).trigger("change");
                $("#BPMobNo").val(rowObject.MobileNo);
                $("#BPEmail").val(rowObject.Email);
                $("#BPPhone1").val(rowObject.Phone1);
                $("#BPPhone2").val(rowObject.Phone2);
                $("#BPPANNo").val(rowObject.PANNo);
                $("#BPITRFilling").val(rowObject.ITRFillingval).trigger("change");
                $("#BPACBal").val(rowObject.AccountBalance);
                $("#BPCurrType").val(rowObject.SystemCurrency).trigger("change");
                $("#BPCurrId").val(rowObject.ForginCurrency).trigger("change");
                $("#PListId").val(rowObject.PListId).trigger("change");
                $("#Discount").val(rowObject.Discount);
                $("#CredLimit").val(rowObject.CreditLimit);
                $("#CommitLimit").val(rowObject.CommitmentLimit);
                $("#IntrstRate").val(rowObject.InterestonArrears);
                $("#PymntTId").val(rowObject.PymntTId).trigger("change");
                $("#WTLiable").val(rowObject.WTLiable).trigger('change');

                var value = rowObject.WT_appid;
                if (value) { // Check if value is defined and not null or empty
                    var array = value.split(",");
                    $.each(array, function (index, item) {
                        if (item) {
                            $('#WT_appid option[value="' + item + '"]').prop('selected', true);
                        }
                    });
                }
                $("#Ass_WT_type").val(rowObject.Ass_WT_type).trigger("change");
                $("#WTType").val(rowObject.WTType).trigger("change");
                if (rowObject.WTLiable == "Y") {
                    $("#WTLiable").prop("checked", true);
                } else {
                    $("#WTLiable").prop("checked", false);
                }
                $("#CreatedBy").val(rowObject.CreatedBy);
                $("#UpdatedBy").val(rowObject.UpdatedBy);
                var UpdateDate = formatAndSetDate(rowObject.UpdateDate);
                $("#UpdateDate").val(UpdateDate);
                var CreateDate = formatAndSetDate(rowObject.CreateDate);
                $("#CreateDate").val(CreateDate);
                $("#BpIsActive").val(rowObject.Active);
                if (rowObject.Active == "Y") {
                    $("#BpIsActive").prop("checked", true);
                }
                if (rowObject.Active == "N") {
                    $("#BpIsActive").prop("checked", false);
                }
                ShowBtn();
                $("#Create_User_Tab").click();
            }
        }
        //Region CPD Select Row Data
        {
            $(document).on("click", ".CPDtable_edit", function () {
                if ($("#BPContDetId").val() !== "" || $("#Fname").val() !== "") {
                    notify("Please Add Selected Data First", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    return false;
                }
                var $row = $(this).closest("tr");
                var rowObject = {};
                $row.find('td').each(function (index) {
                    var $td = $(this);
                    var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                    if ($td.find('input').length) {
                        rowObject[key] = $td.find('input').val();
                    }
                    else if ($td.find('textarea').length) {
                        rowObject[key] = $td.find('textarea').val();
                    }
                    else if ($td.find('img').length) {
                        rowObject[key] = $td.find('img').attr("src");
                    } else if ($td.find('select').length) {
                        //  rowObject[key] = $td.find('select option:selected').text().trim();
                        //  rowObject['TaxCodeval'] = $td.closest('tr').find('.Taxc option:selected').val();
                        //  rowObject['UomEntryVal'] = $td.closest('tr').find('.Uomc1 option:selected').val();
                    } else {
                        rowObject[key] = $td.text().trim();
                    }
                });
                $("#BPContDetId").val(rowObject.BPContDetId)
                $("#CPDIsActive").val(rowObject.Active)
                $("#BPId").val(rowObject.BPId)
                $("#Title").val(rowObject.Title)
                $("#Fname").val(rowObject.FirstName)
                $("#Mname").val(rowObject.MiddleName)
                $("#Lname").val(rowObject.LastName)
                $("#Addr").val(rowObject.Address)
                $("#Phone1").val(rowObject.Phone1)
                $("#Phone2").val(rowObject.Phone2)
                $("#MobNo").val(rowObject.MobNo)
                $("#Email").val(rowObject.Email)
                const formattedDate = formatAndSetDate(rowObject.DOB);
                $("#DOB").val(formattedDate.trim())
                $("#Gender").val(rowObject.Gender).trigger("change");
                $("#BPCityCD").val(rowObject.City)
                $("#CntryIdCD").val(rowObject.Countryd).trigger("change");
                $("#StateIdCD").val(rowObject.State).trigger("change");
                if (rowObject.Active == "Y") {
                    $("#CPDIsActive").prop("checked", true);
                }
                if (rowObject.Active == "N") {
                    $("#CPDIsActive").prop("checked", false);
                }
                ShowBtn()
                var dataTable = $('#Table1').DataTable(); 
                dataTable.row($row).remove().draw();
                $("#Create_contact_Tab").click();
            })
        }
        //Region Addr Select Row
        {
            $(document).on("click", ".Addrtable_edit", function () {
                $("#AddrType").val("").trigger("change");
                    if ($("#BPAddrId").val() !== "" || $("#AddrType").val() !== "") {
                        notify("Please Add Selected Data First", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    }
                    var $row = $(this).closest("tr");
                    var rowObject = {};
                    $row.find('td').each(function (index) {
                        var $td = $(this);
                        var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                        if ($td.find('input').length) {
                            rowObject[key] = $td.find('input').val();
                        }
                        else if ($td.find('textarea').length) {
                            rowObject[key] = $td.find('textarea').val();
                        }
                        else if ($td.find('img').length) {
                            rowObject[key] = $td.find('img').attr("src");
                        } else if ($td.find('select').length) {
                            //  rowObject[key] = $td.find('select option:selected').text().trim();
                            //  rowObject['TaxCodeval'] = $td.closest('tr').find('.Taxc option:selected').val();
                            //  rowObject['UomEntryVal'] = $td.closest('tr').find('.Uomc1 option:selected').val();
                        } else {
                            rowObject[key] = $td.text().trim();
                        }
                    });
                    $("#BPAddrId").val(rowObject.BPAddrId)
                    $("#ADIsActive").val(rowObject.Active)
                    $("#BPId").val(rowObject.BPId)
                    $("#AddrType").val(rowObject.AddressType).trigger("change");
                    $("#GSTINNo").val(rowObject.GSTINNo)
                    $("#GSTINType").val(rowObject.GSTINType).trigger("change");
                    $("#AddrAd").val(rowObject.Address)
                    $("#BPCityAd").val(rowObject.City)
                    $("#CntryIdAd").val(rowObject.Countryd).trigger("change");
                    $("#StateIdAd").val(rowObject.State).trigger("change");
                    if (rowObject.Active == "Y") {
                        $("#ADIsActive").prop("checked", true);
                    }
                    if (rowObject.Active == "N") {
                        $("#ADIsActive").prop("checked", false);
                    }
                    ShowBtn()
                var dataTable = $('#Table2').DataTable();
                dataTable.row($row).remove().draw();
                    $("#Create_Address_Tab").click();
                })
        }
        //Region Select Bank  Row Data
        {
            $(document).on("click", ".Bdtable_edit", function () {
                if ($("#BPBankDetId").val() !== "" || $("#BankId").val() !== "") {
                    notify("Please Add Selected Data First", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    return false;
                }
                var $row = $(this).closest("tr");
                var rowObject = {};
                $row.find('td').each(function (index) {
                    var $td = $(this);
                    var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                    if ($td.find('input').length) {
                        rowObject[key] = $td.find('input').val();
                    }
                    else if ($td.find('textarea').length) {
                        rowObject[key] = $td.find('textarea').val();
                    }
                    else if ($td.find('img').length) {
                        rowObject[key] = $td.find('img').attr("src");
                    } else if ($td.find('select').length) {
                        //  rowObject[key] = $td.find('select option:selected').text().trim();
                        //  rowObject['TaxCodeval'] = $td.closest('tr').find('.Taxc option:selected').val();
                        //  rowObject['UomEntryVal'] = $td.closest('tr').find('.Uomc1 option:selected').val();
                    } else {
                        rowObject[key] = $td.text().trim();
                    }
                });
                $("#BPBankDetId").val(rowObject.BPBankDetId)
                $("#BDIsActive").val(rowObject.Active)
                $("#BPId").val(rowObject.BPId)
                $("#ACType").val(rowObject.AccountType).trigger("change");
                $("#ACNo").val(rowObject.AccountNo)
                $("#BankId").val(rowObject.BankId).trigger("change");
                if (rowObject.Active == "Y") {
                    $("#BDIsActive").prop("checked", true);
                }
                if (rowObject.Active == "N") {
                    $("#BDIsActive").prop("checked", false);
                }
                var dataTable = $('#Table3').DataTable();
                dataTable.row($row).remove().draw();
                ShowBtn()
               // $("#Accounting_Tab").click();
            })
        }
        // Edite Accounting
        {
            $(document).on("click", ".Acctable_edit", function () {
                
                var $row = $(this).closest("tr");
                var rowObject = {};
                $row.find('td').each(function (index) {
                    var $td = $(this);
                    var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                    if ($td.find('input').length) {
                        rowObject[key] = $td.find('input').val();
                    }
                    else if ($td.find('textarea').length) {
                        rowObject[key] = $td.find('textarea').val();
                    }
                    else if ($td.find('img').length) {
                        rowObject[key] = $td.find('img').attr("src");
                    } else if ($td.find('select').length) {
                        //  rowObject[key] = $td.find('select option:selected').text().trim();
                        //  rowObject['TaxCodeval'] = $td.closest('tr').find('.Taxc option:selected').val();
                        //  rowObject['UomEntryVal'] = $td.closest('tr').find('.Uomc1 option:selected').val();
                    } else {
                        rowObject[key] = $td.text().trim();
                    }
                });
               
                $("#FatherCardId").val(rowObject.ConsolidatingId).trigger("change");
                $("#FatherType").val(rowObject.FatherType).trigger("change");
                $("#ConnBPId").val(rowObject.ConnBPId).trigger("change");
                $("#PlngGroup").val(rowObject.PlanningGroup)
                if (rowObject.PayBlock  == "Y") {
                    $("#PayBlock ").prop("checked", true);
                }
                if (rowObject.Active == "N") {
                    $("#PayBlock ").prop("checked", false);
                }
                if (rowObject.PayBlock == "Y") {
                    $("#PayBlock ").prop("checked", true);
                }
                if (rowObject.Active == "N") {
                    $("#PayBlock ").prop("checked", false);
                }
                $("#PaymBlockRemark").val(rowObject.PaymentBlockReason)
                $("#BankAllCodeId").val(rowObject.BankAllCodeId).trigger("change");
                $("#HouseBankId").val(rowObject.HouseBankId).trigger("change");
                var dataTable = $('#Table4').DataTable();
                dataTable.row($row).remove().draw();
                ShowBtn()
            })
        }
        //Region Bp Data Table load
        {
            // Function to retrieve menu data
            LoadBPTableData();
            function LoadBPTableData() {
                $.ajax({
                    url: '@Url.Action("GET", "BusinessPartnerMaster")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {


                        ApplyDatatable(response, "Table")
                       
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            ApplyDatatable([], "Table")
            function ApplyDatatable(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    bSort: true,
                    bFilter: true,
                    fixedHeader: true,
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no no-wrap text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                return '<i class="fa fa-edit table_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  table_delete"></i>';
                            }
                        },
                        {
                            data: 'IsActive',
                            title: 'Active',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                            <input type="checkbox" disabled value="`+ data + `" checked name="IsActive1" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                    <span class="tblslider"></span>
                                                                                    </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                <input type="checkbox" disabled value="`+ data + `"  name="IsActive1" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                        <span class="tblslider"></span>
                                                                                    </label></center>`;
                                }

                            }
                        },
                        { data: 'BPId', title: 'BPId', className: 'tbl_BPGrpId d-none tbl_Main_ID' },
                        { data: 'BPCode', title: 'Code', className: 'tbl_BPCode' },
                        { data: 'BPName', title: 'Name', className: 'tbl_BPName' },
                        { data: 'BPAliasName', title: 'Alias Name', className: 'tbl_BPAliasName' },
                        { data: 'BPGrpId', title: 'Group Id', className: 'tbl_BPGrpId d-none' },
                        {
                            data: 'BPCardType',
                            title: 'Card Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "C") {
                                    return `Customer`;
                                } else if  (data == "V"){
                                    return `Vendor`;
                                }else{
                                      return `Lead`;
                                }

                            }
                        },
                        { data: 'BPCardType', title: 'Card Type', className: 'tbl_BPCardType d-none' },
                        { data: 'BPAddr', title: 'Address', className: 'tbl_BPAddr' },
                        { data: 'CntryName', title: 'Country ', className: 'tbl_CntryName ' },
                        { data: 'StateName', title: 'State', className: 'tbl_StateName' },
                        { data: 'BPCity', title: 'City', className: 'tbl_BPCity' },
                        { data: 'CntryId', title: 'Country Id', className: 'tbl_CntryId d-none' },
                        { data: 'StateId', title: 'State Id', className: 'tbl_StateId d-none' },
                        { data: 'BPMobNo', title: 'Mobile No', className: 'tbl_BPMobNo' },
                        { data: 'BPEmail', title: 'Email', className: 'tbl_BPEmail' },
                        { data: 'BPPhone1', title: 'Phone 1', className: 'tbl_BPPhone1' },
                        { data: 'BPPhone2', title: 'Phone2', className: 'tbl_BPPhone2' },
                        { data: 'BPPANNo', title: 'PAN No', className: 'tbl_BPPANNo' },
                        {
                            data: 'BPITRFilling',
                            title: 'ITR Filling',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `YES`;
                                } else {
                                    return `NO`;
                                }

                            }
                        },
                        { data: 'BPITRFilling', title: 'ITR Fillingval', className: 'tbl_BPITRFilling d-none' },
                        { data: 'BPACBal', title: 'Account Balance', className: 'tbl_BPACBal text-right' },
                        {
                            data: 'BPCurrType',
                            title: 'System Currency',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "S") {
                                    return `System Curreency`;
                                } else if (data == "L") {
                                    return `Local Curreency`;
                                } else {
                                    return `Business Partner Currency`;
                                }

                            }
                        },
                       
                        { data: 'BPCurrType', title: 'System Currency', className: 'tbl_BPSC d-none' },
                        { data: 'BPCurrencyCode', title: 'Currency', className: 'tbl_BPCurrencyCode text-center ' },

                        { data: 'BPCurrId', title: 'Forgin Currency', className: 'tbl_BPFC d-none' },

                        { data: 'CreatedBy', title: 'Created By', className: 'tbl_CreatedBy d-none' },
                        { data: 'CreateDate', title: 'Create Date', className: 'tbl_CreateDate d-none' },
                        { data: 'UpdatedBy', title: 'Updated By', className: 'tbl_UpdatedBy d-none' },
                        {
                            data: 'WTLiable',
                            title: 'WT Liable',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                            <input type="checkbox" disabled value="`+ data + `" checked name="WTLiabled" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                    <span class="tblslider"></span>
                                                                                    </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                <input type="checkbox" disabled value="`+ data + `"  name="WTLiables" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                        <span class="tblslider"></span>
                                                                                    </label></center>`;
                                }

                            }
                        },
                        { data: 'WT_appid', title: 'WT_appid', className: 'tbl_WT_appId d-none ' },
                        { data: 'WTCode', title: 'WTax Code', className: 'tbl_WT_appId text-center' },
                        {
                            data: 'WTType',
                            title: 'WT Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "C") {
                                    return `Cash`;
                                } else {
                                    return `Accrual`;
                                }

                            }
                        },
                        { data: 'WTType', title: 'WTType', className: 'tbl_WTType d-none ' },
                        {
                            data: 'Ass_WT_type',
                            title: 'Assessee Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "C") {
                                    return `Company`;
                                } else {
                                    return `Other`;
                                }

                            }
                        },
                        { data: 'Ass_WT_type', title: 'Ass_WT_type', className: 'tbl_Ass_WT_type d-none ' },
                        { data: 'PymntCode', title: 'Payment Terms', className: 'tbl_PymntTId text-left' },
                        { data: 'PymntTId', title: 'PymntTId', className: 'tbl_PymntTId d-none' },
                        { data: 'IntrstRate', title: 'Interest on Arrears', className: 'tbl_IntrstRate text-right' },
                        { data: "PListName", title: 'Price List', className: 'tbl_IntrstRate text-left' },
                        { data: 'PListId', title: 'PListId', className: 'tbl_IntrstRate text-right  d-none' },
                        { data: 'Discount', title: 'Discount', className: 'tbl_Discount text-right  ' },
                        { data: 'CredLimit', title: 'Credit Limit', className: 'tbl_CredLimit text-right  ' },
                        { data: 'CommitLimit', title: 'Commitment Limit', className: 'tbl_CommitLimit text-right' },
                    ],

                });
            }
            //Delete
            function Delete(ID) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This Business Partner And It's All Details  Is Permanetly Delete Form system..!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DELETE","BusinessPartnerMaster")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {
                                    LoadBPTableData();
                                    HideBtn()
                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                } else {
                                    notify("Error To Deleting Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });
            }
        }
        //Region Accounting Data Table load
        {
            LoadAccoutningTable();
            function LoadAccoutningTable() {
               var BPId= $("#BPId").val();
                $.ajax({
                    url: '@Url.Action("GETACCOUNTING", "BusinessPartnerMaster")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    dataType: 'json',
                    data: { BPId: BPId },
                    success: function (response) {
                        LoadAccoutningTableData(response, "Table4")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            LoadAccoutningTableData([], "Table4")
            function LoadAccoutningTableData(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    bSort: true,
                    bFilter: true,
                    fixedHeader: true,
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no no-wrap text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                return '<i class="fa fa-edit Acctable_edit text-primary mr-1"></i></i>';
                            }
                        },
                        
                        { data: "BPId", title: 'BPId', className: 'tbl_BPGrpId  tbl_Main_ID d-none' },
                        { data: "bpcode", title: 'Code', className: 'tbl_BPCode' },
                        { data: "BPName", title: 'Name', className: 'tbl_BPName' },
                        { data: "CBPName", title: 'Consolidating  Bp', className: 'tbl_Consolidating' },
                        { data: "CBPId", title: 'ConsolidatingId', className: 'tbl_CBPId d-none ' },
                        {
                            data: "FatherType",
                            title: 'Father Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "P") {
                                    return `Payment Consolidation`;
                                } else {
                                    return `Delivery Consolidation`;
                                }

                            }
                        },
                        { data: "FatherType", title: 'FatherType', className: 'tbl_FatherType d-none' },
                        { data: "ConnectedCustmer", title: 'Connected Customer', className: 'tbl_Consolidating' },
                        { data: "ConnBPId", title: 'ConnBPId', className: 'tbl_ConnBPId d-none' },
                        { data: "PlngGroup", title: 'Planning Group', className: 'tbl_PlngGroup' },
                        {
                            data: "PaymBlock",
                            title: 'Payment Block',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                    <input type="checkbox" disabled value="`+ data + `" checked name="Locak" class="tbltoggleSwitch form-control form-control-sm">
                                                                        <span class="tblslider"></span>
                                                                        </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                    <input type="checkbox" disabled value="`+ data + `"  name="Locak" class="tbltoggleSwitch form-control form-control-sm ">
                                                                            <span class="tblslider"></span>
                                                                        </label></center>`;
                                }

                            }
                        },
                        { data: "PaymBlockRemark", title: 'Payment Block Reason', className: 'tbl_Consolidating' },
                        {
                            data: "SinglePaym",
                            title: 'Single Payment',
                            render: function (data, type, row) {
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                    <input type="checkbox" disabled value="`+ data + `" checked name="Paymenr" class="tbltoggleSwitch form-control form-control-sm ">
                                                                            <span class="tblslider"></span>
                                                                            </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                            <input type="checkbox" disabled value="`+ data + `"  name="Paymenr" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                <span class="tblslider"></span>
                                                                            </label></center>`;
                                }

                            }
                        },
                        { data: 'Code', title: 'Bank Charges Allocation Code', className: 'tbl_Code' },
                        { data: 'BankAllCodeId', title: 'BankAllCodeId', className: 'tbl_BankAllCodeId d-none' },
                        { data: "BankName", title: 'House Bank', className: 'tbl_BankName' },
                        { data: "HouseBankId", title: 'HouseBankId', className: 'tbl_HouseBankId d-none' },
                        // Add more columns as needed
                    ],
                });
            }
        }
        //Region CPD Data Table Load
        {
            function LoadCPDTableData(BPID) {
                $.ajax({
                    url: '@Url.Action("GETDATA", "BPContactDetails")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    data: { BpId: BPID },
                    dataType: 'json',
                    success: function (response) {
                        ApplyCPDatatable(response, "Table1")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            ApplyCPDatatable([],"Table1")
            //Apply Datatable
            function ApplyCPDatatable(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no no-wrap text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                return '<center><i class="fa fa-edit CPDtable_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  CPDtable_delete"></i></center>';
                            }
                        },
                        {
                            data: 'IsActive',
                            title: 'Active',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                            <input type="checkbox" disabled value="`+ data + `" checked name="IsActive41" class="tbltoggleSwitch form-control form-control-sm ">
                                                                    <span class="tblslider"></span>
                                                                    </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                <input type="checkbox" disabled value="`+ data + `"  name="IsActiv45e" class="tbltoggleSwitch form-control form-control-sm ">
                                                                        <span class="tblslider"></span>
                                                                    </label></center>`;
                                }

                            }
                        },
                        { data: 'BPContDetId', title: 'BPContDetId', className: 'tbl_Main_ID d-none' },
                        { data: 'BPId', title: 'BP Id', className: 'tbl_BPId d-none' },
                        { data: 'BPCode', title: 'Code', className: 'tbl_BPCode text-right' },
                        { data: 'BPName', title: 'Name', className: 'tbl_BPName' },
                        { data: 'Title', title: 'Title', className: 'tbl_Title' },
                        { data: 'Fname', title: 'First Name', className: 'tbl_Fname text-left' },
                        { data: 'Mname', title: 'Middle Name', className: 'tbl_Mname text-left' },
                        { data: 'Lname', title: 'Last Name', className: 'tbl_Lname text-left' },
                        { data: 'DOB1', title: 'DOB', className: 'tbl_DOB' },
                        { data: 'Gender', title: 'Gender', className: 'tbl_Gender' },
                        { data: 'Addr', title: 'Address', className: 'tbl_Addr text-left' },
                        { data: 'CntryName', title: 'Country', className: 'tbl_CntryName text-left ' },
                        { data: 'StateName', title: 'State', className: 'tbl_StateName text-left' },
                        { data: 'BPCity', title: 'City', className: 'tbl_BPCity text-left' },
                        { data: 'Email', title: 'Email', className: 'tbl_Email' },
                        { data: 'Phone1', title: 'Phone1', className: 'tbl_Phone1 ' },
                        { data: 'Phone2', title: 'Phone2', className: 'tbl_Phone2' },
                        { data: 'MobNo', title: 'Mob No', className: 'tbl_MobNo' },
                        { data: 'CntryId', title: 'Countryd', className: 'tbl_CntryId d-none' },
                        { data: 'StateId', title: 'State', className: 'tbl_StateId d-none' },
                    ],
                    "columnDefs": [
                        { "targets": '_all', "className": 'dt-no-wrap' }
                    ],
                });
            }
        }
        //Region Address Details Table load
        {
            function LoadAddrTableData(BpID) {
                $.ajax({
                    url: '@Url.Action("GETDATA", "BPAddress")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    data: { BpId: BpID },
                    dataType: 'json',
                    success: function (response) {
                        ApplyAddrDatatable(response, "Table2")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            //Apply Datatable
            ApplyAddrDatatable([], "Table2")
            function ApplyAddrDatatable(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no no-wrap text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                return '<center><i class="fa fa-edit Addrtable_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  Addrtable_delete"></i></center>';
                            }
                        },
                        {
                            data: 'IsActive',
                            title: 'Active',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                <input type="checkbox" disabled value="`+ data + `" checked name="IsAsctive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                        <span class="tblslider"></span>
                                                                        </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                    <input type="checkbox" disabled value="`+ data + `"  name="IsAactive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                            <span class="tblslider"></span>
                                                                        </label></center>`;
                                }

                            }
                        },

                        { data: 'BPName', title: 'Name', className: 'tbl_BPName' },
                        { data: 'BPCode', title: 'Code', className: 'tbl_BPCode' },
                        { data: 'BPAddrId', title: 'BPAddrId', className: 'tbl_Main_ID text-center d-none' },
                        { data: 'BPId', title: 'BP Id', className: 'tbl_BPId text-center d-none' },
                        {
                            data: 'AddrType',
                            title: 'Address Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "B") {
                                    return `Bill To`;
                                } else {
                                    return `Ship To`;
                                }

                            }
                        },

                        { data: 'AddrType', title: 'Address Type', className: 'tbl_AddrType text-center d-none' },
                        {
                            data: 'GSTINType',
                            title: 'GSTIN Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "1") {
                                    return `Standard`;
                                } else {
                                    return `Regular`;
                                }

                            }
                        },
                        { data: 'GSTINType', title: 'GSTIN Type', className: 'tbl_GSTINType text-center d-none' },
                        { data: 'GSTINNo', title: 'GSTIN No', className: 'tbl_GSTINNo text-center' },
                        { data: 'Addr', title: 'Address', className: 'tbl_Addr text-left' },
                        { data: 'CntryName', title: 'Country Name ', className: 'tbl_CntryName  text-left' },
                        { data: 'StateName', title: 'State Name', className: 'tbl_StateName  text-left' },
                        { data: 'BPCity', title: 'City', className: 'tbl_BPCity text-center  text-left' },
                        { data: 'CntryId', title: 'Countryd', className: 'tbl_CntryId text-center d-none' },
                        { data: 'StateId', title: 'State', className: 'tbl_StateId text-center d-none' },
                    ],
                   
                });
            }
        }
        //Region Load Bank Detail
        {
            // Function to retrieve menu data
            function LoadBdTableData(BpID) {
                $.ajax({
                    url: '@Url.Action("GETDATA", "BPBankDetails")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    data: { BpId: BpID },
                    dataType: 'json',
                    success: function (response) {
                        ApplyBdDatatable(response, "Table3")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            //Apply Datatable
            ApplyBdDatatable([], "Table3")
            function ApplyBdDatatable(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no no-wrap text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                return '<center><i class="fa fa-edit Bdtable_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  Bdtable_delete"></i></center>';
                            }
                        },
                        {
                            data: 'IsActive',
                            title: 'Active',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                    <input type="checkbox" disabled value="`+ data + `" checked name="IsAsctive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                            <span class="tblslider"></span>
                                                                            </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                        <input type="checkbox" disabled value="`+ data + `"  name="IsActsdive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                <span class="tblslider"></span>
                                                                            </label></center>`;
                                }

                            }
                        },
                        { data: 'BPBankDetId', title: 'BP Bank Det Id', className: 'tbl_Main_ID d-none text-center' },
                        { data: 'BPId', title: 'BP Id', className: 'tbl_BPId text-center d-none' },
                        { data: 'BPCode', title: 'Code', className: 'tbl_BPCode' },
                        { data: 'BPName', title: ' Business Partner Name', className: 'tbl_BPName  text-left' },
                        { data: 'BankName', title: 'Bank Name', className: 'tbl_BankName  text-left' },
                        {
                            data: 'ACType',
                            title: 'Account Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "C") {
                                    return `Current Account`;
                                } else {
                                    return `Saving Account`;
                                }

                            }
                        },
                        { data: 'ACType', title: 'Account Type', className: 'tbl_ACType text-center d-none' },
                        { data: 'ACNo', title: 'Account No', className: 'tbl_ACNo text-right' },
                        { data: 'BankId', title: 'Bank Id', className: 'tbl_BankId text-center d-none' },

                    ],
                    "columnDefs": [
                        { "targets": '_all', "className": 'dt-no-wrap' }
                    ],
                });

        }
        }
        //Region POST_ALL Data 
        {
             $("#BPForm_Save_btn").click(function () {
                let isValid = true;
                let formData = {};
                //load bp form data
                $("#From1 input,select,textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).find('textarea').lenght) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = [
                        "BPCode",
                        "BpIsActive",
                        "BPName",
                        "BPAliasName",
                        "BPGrpId",
                        "BPCardType",
                        "BPAddr",
                        "BPCity",
                        "CntryId",
                        "StateId",
                        "BPMobNo",
                        "BPEmail",
                        "BPPhone1",
                        "BPPhone2",
                        "BPPANNo",
                        "BPITRFilling",
                        "BPACBal",
                        "BPCurrType",
                        "BPCurrId"
                    ];
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {
                        if (inputName == "BpIsActive") {
                            formData["IsActive"] = inputValue;
                        } else {
                            formData[inputName] = inputValue;
                        }
                    }
                });
                if (isValid) {
                    var ContactPersonData, BpAddressData, BankData, Acdata;
                    try {
                        var dataTable = $('#Table1').DataTable();
                        ContactPersonData = dataTable.rows().data().toArray();
                    } catch (error) {
                        ContactPersonData = [];
                    }

                  //if (ContactPersonData.length === 0) {
                  //    notify("Please Add Data In Contact Person", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                  //    $("#Contact_Details_Tab").click();
                  //    return false;
                  //}
                    try {
                        var dataTable = $('#Table2').DataTable();
                        BpAddressData = dataTable.rows().data().toArray();
                    } catch (error) {
                        alert(error);
                        BpAddressData = [];
                    }
                   // if (BpAddressData.length === 0) {
                   //     notify("Please Add Data In Address Details", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                   //     $("#Address_Details_Tab").click();
                   //     return false;
                   // }
                    try {
                        var dataTable = $('#Table3').DataTable();
                        BankData = dataTable.rows().data().toArray();
                    } catch (error) {
                        alert(error);
                        BankData = [];
                    }
                    //if (BankData.length === 0) {
                    //    notify("Please Add Data In Bank Details", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    //    $("#Bank_Details_Tab").click();
                    //    return false;
                    //}
                    try {
                        var dataTable = $('#Table4').DataTable();
                        Acdata = dataTable.rows().data().toArray();
                    } catch (error) {
                        alert(error);
                        Acdata = [];
                    }
                    if(Acdata.length >0){
                       //Accounting Data 
                        formData["FatherCardId"] = Acdata[0].CBPId
                        formData["FatherType"] = Acdata[0].FatherType
                        formData["ConnBPId"] = Acdata[0].ConnBPId
                        formData["PlngGroup"] = Acdata[0].PlngGroup
                        formData["PaymBlock"] = Acdata[0].PaymBlock
                        formData["SinglePaym"] = Acdata[0].SinglePaym
                        formData["BankAllCodeId"] = Acdata[0].BankAllCodeId
                        formData["HouseBankId"] = Acdata[0].HouseBankId
                        formData["PaymBlockRemark"] = Acdata[0].PaymBlockRemark
                    }
                    // Tax Tab 
                  var  inputValue =$("#WT_appid").val();
                    var resultString = inputValue.join(',');
                    formData["WTLiable"] = $("#WTLiable").val()
                    formData["WT_appid"] =resultString,
                    formData["Ass_WT_type"] = $("#Ass_WT_type").val()
                    formData["WTType"] = $("#WTType").val()

                    // Payment Terms Data 
                     formData["PymntTId"] = $("#PymntTId").val()
                     formData["IntrstRate"] = $("#IntrstRate").val()
                     formData["PListId"] = $("#PListId").val()
                     formData["CredLimit"] = $("#CredLimit").val()
                     formData["CommitLimit"] = $("#CommitLimit").val()
                     formData["Discount"] = $("#Discount").val()

                    $.ajax({
                        url: '@Url.Action("POSTDATA","BusinessPartnerMaster")',
                        type: 'POST',
                        dataType: 'json',
                        data: formData,
                        success: function (response) {
                            if (response !== "") {
                                if (ContactPersonData.length > 0) {
                                    AddContactperson(response.lastId, ContactPersonData);
                                }
                                if (BpAddressData.length > 0) {
                                    AddBpAddressData(response.lastId, BpAddressData);
                                }
                                if (BankData.length > 0) {
                                    AddBankData(response.lastId, BankData);
                                }
                                AddAttachmentData("#AttachmentTable")
                                AddTaxInfoData(response.lastId)
                                notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                $("#Form_reset_btn").click()
                                LoadBPTableData();
                                LoadAccoutningTable();
                                Reset();
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
          })
             $("#BPForm_Update_btn").click(function () {

                let isValid = true;
                let formData = {};
                //load bp form data
                $("#From1 input,select,textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).find('textarea').lenght) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = [
                        "BPCode",
                        "BpIsActive",
                        "BPName",
                        "BPAliasName",
                        "BPGrpId",
                        "BPCardType",
                        "BPAddr",
                        "BPCity",
                        "CntryId",
                        "StateId",
                        "BPMobNo",
                        "BPEmail",
                        "BPPhone1",
                        "BPPhone2",
                        "BPPANNo",
                        "BPITRFilling",
                        "BPACBal",
                        "BPCurrType",
                        "BPCurrId"
                    ];
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        $("#" + inputName).addClass("border-danger");
                        isValid = false;
                        $("#Create_User_Tab").click();
                        notify("Please Fill All Mandatory Feilds " + inputName, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        $("#" + inputName).removeClass("border-danger");
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {
                        if (inputName == "BpIsActive") {
                            formData["IsActive"] = inputValue;
                        } else {
                            formData[inputName] = inputValue;
                        }
                    }
                });
                if (isValid) {
                    var ContactPersonData, BpAddressData, BankData;
                    let keysToRemove = ["CreatedBy", "CreateDate", "CreateTS", "UpdatedBy", "UpdateDate", "UpdateTS"];
                    try {
                        var dataTable = $('#Table1').DataTable();
                        ContactPersonData = dataTable.rows().data().toArray();
                        ContactPersonData = convertValuesToString(ContactPersonData);
                        ContactPersonData = removeKeysFromArray(ContactPersonData, keysToRemove);
                    } catch (error) {
                        alert(error);
                        ContactPersonData = [];
                    }

                  // if (ContactPersonData.length === 0) {
                  //     notify("Please Add Data In Contact Person", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                  //     $("#Contact_Details_Tab").click();
                  //     return false;
                  // }

                    try {
                        var dataTable = $('#Table2').DataTable();
                        BpAddressData = dataTable.rows().data().toArray();
                        BpAddressData = convertValuesToString(BpAddressData);
                        BpAddressData = removeKeysFromArray(BpAddressData, keysToRemove);
                    } catch (error) {
                        alert(error);
                        BpAddressData = [];
                    }

                 //  if (BpAddressData.length === 0) {
                 //      notify("Please Add Data In Address Details", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                 //      $("#Address_Details_Tab").click();
                 //      return false;
                 //  }

                    try {
                        var dataTable = $('#Table3').DataTable();
                        BankData = dataTable.rows().data().toArray();
                        BankData = convertValuesToString(BankData);
                        BankData = removeKeysFromArray(BankData, keysToRemove);
                    } catch (error) {
                        alert(error);
                        BankData = [];
                    }
                  // if (BankData.length === 0) {
                  //     notify("Please Add Data In Bank Details", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                  //     $("#Bank_Details_Tab").click();
                  //     return false;
                  // }
                    try {
                        var dataTable = $('#Table4').DataTable();
                        Acdata = dataTable.rows().data().toArray();
                    } catch (error) {
                        alert(error);
                        Acdata = [];
                    }
                    if(Acdata.length >0){
                       //Accounting Data 
                        formData["FatherCardId"] = Acdata[0].CBPId
                        formData["FatherType"] = Acdata[0].FatherType
                        formData["ConnBPId"] = Acdata[0].ConnBPId
                        formData["PlngGroup"] = Acdata[0].PlngGroup
                        formData["PaymBlock"] = Acdata[0].PaymBlock
                        formData["SinglePaym"] = Acdata[0].SinglePaym
                        formData["BankAllCodeId"] = Acdata[0].BankAllCodeId
                        formData["HouseBankId"] = Acdata[0].HouseBankId
                        formData["PaymBlockRemark"] = Acdata[0].PaymBlockRemark
                    }
                    // Tax Tab Data
                    var inputValue = $("#WT_appid").val();
                    var resultString = inputValue.join(',');
                    formData["WTLiable"] = $("#WTLiable").val()
                    formData["WT_appid"] = resultString
                    formData["Ass_WT_type"] = $("#Ass_WT_type").val()
                    formData["WTType"] = $("#WTType").val()
                    // Payment Terms Data 
                     formData["PymntTId"] = $("#PymntTId").val()
                     formData["IntrstRate"] = $("#IntrstRate").val()
                     formData["PListId"] = $("#PListId").val()
                     formData["CredLimit"] = $("#CredLimit").val()
                    formData["CommitLimit"] = $("#CommitLimit").val()
                    formData["Discount"] = $("#Discount").val()

                    $.ajax({
                        url: '@Url.Action("UPDATEDATA","BusinessPartnerMaster")',
                        type: 'POST',
                        dataType: 'json',
                        data: formData,
                        success: function (response) {
                            if (response !== "") {
                                if (ContactPersonData.length > 0) {
                                    AddContactperson(response.lastId, ContactPersonData);
                                }
                                if (BpAddressData.length > 0) {
                                    AddBpAddressData(response.lastId, BpAddressData);
                                }
                                if (BankData.length > 0) {
                                    AddBankData(response.lastId, BankData);
                                }
                                //AddAccounting(response.lastId, Acdata)
                                AddAttachmentData("#AttachmentTable")
                                AddTaxInfoData(response.lastId)
                                notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                LoadBPTableData();
                                $("#Form_reset_btn").click()
                                LoadAccoutningTable();
                                Reset();
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
          })
        }
        //Region Delete
        {
            $("#BPForm_Delete_btn").click(function () {
                Delete($("#BPId").val());
            })
            $(document).on("click", ".table_delete", function () {
                var $row = $(this).closest("tr");
                var id = $row.find('td.tbl_Main_ID').text();
                Delete(id);
            })
        }
        //Function to handle form reset
        {
            $("#BPForm_reset_btn").click(function () {
                $(".Form_Elem").removeClass("border-danger");
            });
        }
        //Function Btn Opration
        {
            function convertValuesToString(jsonObj) {
                if (typeof jsonObj === "object") {
                    for (let key in jsonObj) {
                        if (typeof jsonObj[key] === "object") {
                            jsonObj[key] = convertValuesToString(jsonObj[key]);
                        } else {
                            jsonObj[key] = String(jsonObj[key]);
                        }
                    }
                }
                return jsonObj;
            }
            function removeKeysFromArray(arrayOfObjects, keysToRemove) {
                return arrayOfObjects.map(obj => {
                    let modifiedObj = { ...obj }; // Create a copy of the original object
                    keysToRemove.forEach(key => {
                        if (modifiedObj.hasOwnProperty(key)) {
                            modifiedObj[key] = null;
                        }
                    });
                    return modifiedObj;
                });
            }
            $("#BPForm_reset_btn, #ADForm_reset_btn, #CPDForm_reset_btn").click(function () {
                Reset()
            })

            function Reset() {
                $("#Create_User_Tab").click();
                $("input,select,textarea").val("")
                $("#Title,#Fname,#Mname,#Lname,#Gender,#Addr,#CntryIdCD,#StateIdCD,#BPCityCD,#DOB,#Email,#Phone1,#Phone2,#MobNo").val("")
                $("#CPDIsActive").val("Y");
                $("#CPDIsActive").prop("checked", true);
                $("#AddrType,#GSTINType,#GSTINNo,#AddrAd,#CntryIdAd,#StateIdAd,#BPCityAd").val("")
                $("#ADIsActive").val("Y");
                $("#ADIsActive").prop("checked", true);
                $("#BankId,#ACType,#ACNo").val("")
                $("#BDIsActive").val("Y");
                $("#BDIsActive").prop("checked", true); 
                $("#BPITRFilling").val("N");
                $("#BPCardType").val("C");
                $("#BpIsActive").val("Y");
                $("#Ass_WT_type").val("C");
                $("#BpIsActive").prop("checked", true);
                $("#WTLiable").prop("checked", false).trigger("change");
                $("#AttachmentTable tbody").empty()
                ApplyCPDatatable([],"Table1")
                ApplyAddrDatatable([], "Table2")
                ApplyBdDatatable([], "Table3")
                LoadAccoutningTableData([], "Table4")
                HideBtn()
                $("#Form_reset_btn").click()

            }
            function ShowBtn() {
                $("#BPForm_Delete_btn").show();
                $("#AdForm_Delete_btn").show();
                $("#CPDForm_Delete_btn").show();
                $("#ADForm_Delete_btn").show();
                $("#BPForm_Update_btn").show();
                $("#BPForm_Save_btn").hide();
            }
            function HideBtn() {
                $("#BPForm_Save_btn").show();
                $("#BPForm_Delete_btn").hide();
                $("#BPForm_Update_btn").hide();
            }
        }
        //region All functions
        {
            //format date
            //function formatAndSetDate(inputDate) {
            //    const [day, month, year] = inputDate.split('-');
            //    const formattedDate = `${year}-${month}-${day}`;
            //    return formattedDate;
            //}
            function formatAndSetDate(inputDate) {
                if (inputDate && typeof inputDate === 'string') {
                    const parts = inputDate.split(' ');
                    const datePart = parts[0];
                    const timePart = parts[1];
                    const [day, month, year] = datePart.split('-');
                    const formattedDate = `${year}-${month}-${day}`;
                    const formattedDateTime = `${formattedDate} ${timePart}`;
                    return formattedDate;
                } else {
                    // Handle the case where inputDate is undefined, null, or not a string
                    return null; // Or any other appropriate value or action
                }
            }
            function SplitDatebyspace(inputDate) {
                const parts = inputDate.split(' ');
                return parts[0];

            }
            //Apply BP Datatable
        }
        // Card Type change Event
        {
            $("#BPCardType").change(function () {
                const cardType = $(this).val();
                getGroupsByCardType(cardType, function () {
                    $("#BPGrpId").val(currentRowObject.GroupId).trigger("change");
                });
            });

            function getGroupsByCardType(cardType, callback) {
                const url = `@Url.Action("GetGroupsByCardType", "BusinessPartnerGroupMaster")`;
                const queryParams = cardType === "L" ? '?cardType=C' : `?cardType=${cardType}`;

                $.ajax({
                    url: url + queryParams,
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        if (!response.length) return;

                        const options = response.map(({ BPGrpId, BPGrpName }) =>
                            `<option value='${BPGrpId}'>${BPGrpName}</option>`
                        ).join('');

                        $("#BPGrpId").html(`<option value=''>Select Business Partner Group</option>${options}`);
                        if (typeof callback === 'function') {
                            callback();
                        }
                    },
                    error: function (error) {
                        const errorMessage = error.responseText || "An error occurred.";
                        notify(errorMessage, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', errorMessage);
                    }
                });
            }
        }
        // Region All Tabs post Function
        {
            function AddContactperson(BpID, ContactPersonData){
                var modifiedData = $.map(ContactPersonData, function (obj) {
                    if ("BPId" in obj) {
                        obj.BPId = BpID;
                    }
                    return obj; // Return the modified object
                });
                $.ajax({
                    url: '@Url.Action("POSTDATA", "BPContactDetails")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(modifiedData),
                    success: function (response) {
                        if (response.success) {
                           // notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                            return true;
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
           }
            function AddBpAddressData(BpID, BpData) {
                var modifiedData = $.map(BpData, function (obj) {
                    if ("BPId" in obj) {
                        obj.BPId = BpID;
                    }
                    return obj; // Return the modified object
                });
                $.ajax({
                    url: '@Url.Action("POSTDATA", "BPAddress")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(modifiedData),
                    success: function (response) {
                        if (response.success) {
                         //   notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                            return true;
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            function AddBankData(BpID, BpData) {
                var modifiedData = $.map(BpData, function (obj) {
                    if ("BPId" in obj) {
                        obj.BPId = BpID;
                    }
                    return obj; // Return the modified object
                });
                $.ajax({
                    url: '@Url.Action("POSTDATA", "BPBankDetails")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(modifiedData),
                    success: function (response) {
                        if (response.success) {
                           // notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                            return true;
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
          
        }
        //Tax Details 
        {
            $(".Tax_Info").click(function () {
                $("#Tax_Modal").fadeIn();
            });
            function AddTaxInfoData(BPId) {
                var taxInfoData = {
                    BPTaxId: $('#BPTaxId').val(),
                    TaxId0: $('#TaxId0').val(),
                    TaxId1: $('#TaxId1').val(),
                    TaxId2: $('#TaxId2').val(),
                    TaxId3: $('#TaxId3').val(),
                    TaxId4: $('#TaxId4').val(),
                    TaxId5: $('#TaxId5').val(),
                    TaxId6: $('#TaxId6').val(),
                    TaxId7: $('#TaxId7').val(),
                    TaxId8: $('#TaxId8').val(),
                    TaxId9: $('#TaxId9').val(),
                    TaxId10: $('#TaxId10').val(),
                    TaxId11: $('#TaxId11').val(),
                    TaxId12: $('#TaxId12').val(),
                    TaxId13: $('#TaxId13').val(),
                    BPId: BPId,
                    AddrType: 'S'
                };
                $.ajax({
                    url: '@Url.Action("ADDTAXINFO", "BusinessPartnerMaster")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(taxInfoData),
                    success: function (response) {
                        if (response.success) {
                            $("#Pay_term_form")[0].reset();
                        }
                    },
                    error: function (error) {
                        console.error('Error:', error.responseText);
                    }
                });
            }
            function LoadTAXData(BpID) {
                $.ajax({
                    url: '@Url.Action("GETTAXDATA", "BusinessPartnerMaster")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    data: { BpId: BpID },
                    dataType: 'json',
                    success: function (response) {
                        if (response.length > 0) {
                            $.each(response[0], function (key, value) {
                                $("#" + key).val(value);
                            });
                        } else {
                            console.error('Failed to retrieve tax data:', response.message);
                        }
                    },

                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
        }

        // Attachemnt Add Update Delete
        { 
            //Region Attachme
            $("#Addrow").click(function () {
                var Index = $("#AttachmentTable tbody tr").length;
                var list = "<tr>";
                list += "<td class='text-center'>" + parseInt(Index + 1) + "</td>"; // Add the index to the first column
                list += `<td class=' pt-2 align-items-center Isactive' nowrap><center><label  class="tblswitch  ">
                                                                                                     <input type="checkbox"  value="Y" checked name="IsActive1" class="tbltoggleSwitch form-control form-control-sm pt-3">
                                                                                             <span class="tblslider"></span>
                                                                                             </label></center></td>`;
                list += "<td class='p-0 text-center' nowrap><input class='p-1 form-control form-control-sm selectfile' type='file' placeholder='Choose File'/></td>";
                list += "<td class=' align-items-center filename' nowrap></td>";
                list += "<td class=' align-items-center fileExt' nowrap></td>";
                list += "<td class=' align-items-center d-none fileData' nowrap></td>";
                list += "<td class=' align-items-center d-none bpattachId' nowrap></td>";
                list += "<td class='p-0 text-center' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 ViewAttchment btn-sm btn-primary'>View</button></td>";
                list += "<td class='p-0 text-center' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 DeleteAttchment btn-sm btn-danger'>Delete</button></td>";
                list += "</tr>";
                $("#AttachmentTable tbody").append(list);
            });
            $(document).on("change", ".selectfile", function () {
                var tableRow = $(this).closest('tr');
                var fileInput = $(this)[0];
                if (fileInput.files.length > 0) {
                    var file = fileInput.files[0];
                    var fileName = file.name;
                    var fileExt = fileName.split('.').pop().toLowerCase();
                    tableRow.find(".filename").text(fileName); // Display file name
                    tableRow.find(".fileExt").text(fileExt);
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var fileData = e.target.result;
                        tableRow.find(".fileData").text(fileData); // Display file data or handle it as needed
                    };
                    if (fileExt === 'xls' || fileExt === 'xlsx' || fileExt === 'csv') {
                        reader.readAsBinaryString(file);
                    } else {
                        reader.readAsDataURL(file);
                    }
                }
            });
            $(document).on("click", ".DeleteAttchment", function () {
                var tableRow = $(this).closest('tr');
                var Id = tableRow.find(".bpattachId").text();
                DeleteAttachment(Id);
            })
            $(document).on("click", ".ViewAttchment", function () {
                var tableRow = $(this).closest('tr');
                var fileData = tableRow.find(".fileData").text();
                var fileExt = tableRow.find(".fileExt").text();
                var filename = tableRow.find(".filename").text();
                $('.document-viewer').html(""); 
                $('.pdfdocument-viewer').html("");
                if (fileExt === 'xls' || fileExt === 'xlsx') {
                    var workbook = XLSX.read(fileData, { type: 'binary' });
                    var sheetName = workbook.SheetNames[0];
                    var excelData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], { header: 1 });
                    var tableHtml = '<table class="table table-bordered table-striped   table-hover table-bordered w-100" border="1px">';
                    for (var i = 0; i < excelData.length; i++) {
                        tableHtml += '<tr>';
                        for (var j = 0; j < excelData[i].length; j++) {
                            var cellValue = excelData[i][j];
                            var colspan = 1;
                            while (j + colspan < excelData[i].length && excelData[i][j + colspan] === cellValue) {
                                colspan++;
                            }
                            if (colspan > 1) {
                                tableHtml += '<td colspan="' + colspan + '">' + cellValue + '</td>';
                                j += colspan - 1;
                            } else {
                                tableHtml += '<td>' + cellValue + '</td>';
                            }
                        }
                        tableHtml += '</tr>';
                    }
                    tableHtml += '</table>';
                    $(".document-viewer").html(tableHtml);
                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (fileExt === 'csv') {
                    // Render CSV file as HTML table
                    var csvData = Papa.parse(fileData, { header: true, skipEmptyLines: true });
                    var tableHtml = '<table class="table table-bordered table-striped   table-hover table-bordered w-100">';
                    csvData.data.forEach(function (row) {
                        tableHtml += '<tr>';
                        for (var key in row) {
                            tableHtml += '<td>' + row[key] + '</td>';
                        }
                        tableHtml += '</tr>';
                    });
                    tableHtml += '</table>';

                    $(".document-viewer").html(tableHtml);

                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:text/csv;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (fileExt === 'pdf') {
                    renderPdf(fileData);
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', 'data:application/pdf;base64,' + btoa(fileData));
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                } else if (['jpg', 'jpeg', 'png', 'gif'].includes(fileExt)) {
                    var imageHtml = '<img src="' + fileData + '" />';
                    $(".document-viewer").html(imageHtml);
                    // Show download link
                    var downloadLink = $('.downloadLink');
                    downloadLink.attr('href', fileData);
                    downloadLink.attr('download', filename);
                    downloadLink.show();
                }
                else {
                    //  $(".document-viewer").text('Unsupported document type.');
                    // $('.downloadLink').hide();
                }
                $("#DocumentViewer").fadeIn();
            });
          
            function renderPdf(pdfData) {

                if (pdfData) {
                    const objectElement = $('<object>');
                    objectElement.attr('data', pdfData);
                    objectElement.attr('type', 'application/pdf');
                    objectElement.css('width', '100%');
                    objectElement.css('height', '700px');

                    $('.pdfdocument-viewer').html(objectElement);
                } else {
                    $('.pdfdocument-viewer').text('No Data Found!');
                }
            }
            //Save Attachment 
            {
                function AddAttachmentData(table) {
                    var rowCount = $(table).find('tbody tr').length;
                    if (rowCount <= 0) {
                        return false;
                    }
                    var AttachmentData = [];
                    var headers = [];
                    $(table).find('thead th').each(function () {
                        headers.push($(this).text().trim().toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()<>]/g, "").replace(/ /gi, ''));
                    });
                    $(table).find('tbody tr').each(function () {
                        var rowData = {};
                        $(this).find('td').each(function (index) {
                            if (headers[index] == "filedata") {
                                if (headers.fileextention == "xlsx" || headers.fileextention == "csv" ) {
                                    rowData["FileData"] = btoa(fileObject.FileData);
                                }else{
                                  rowData["FileData"] = $(this).text().trim();
                                }
                            } else if (headers[index] == "filename") {
                                rowData["FileName"] = $(this).text().trim();
                            } else if (headers[index] == "bpattachid") {
                                rowData["BPAttachId"] = $(this).text().trim();
                            } else if (headers[index] == "fileextention") {
                                rowData["FileExt"] = $(this).text().trim();
                            } else if (headers[index] == "active") {
                                rowData["IsActive"] = $(this).find("input").val().trim();
                            } 
                        });
                        rowData["BPId"] = $("#BPId").val();
                        AttachmentData.push(rowData);
                    });
                    $.ajax({
                        url: '@Url.Action("ADDITEMATTACHMENT", "BusinessPartnerMaster")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(AttachmentData),
                        success: function (response) {
                            if (response.success) {
                               // notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                                LoadAttachmentData();
                                return true;
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                }
                function LoadAttachmentData() {
                    var BpId = $("#BPId").val();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GETATACHMENT", "BusinessPartnerMaster")',
                        data: { BpId: BpId },
                        dataType: 'json',
                        success: function (response) {
                            $("#AttachmentTable tbody").html("");
                            if (response.length > 0) {
                                var index = 1;
                                for (var i = 0; i < response.length; i++) {
                                    var list = "<tr>";
                                    list += "<td class='text-center'>" + index + "</td>"; // Add the index to the first column
                                    if (response[i].IsActive == "Y") {
                                        list += `<td class=' pt-2 align-items-center Isactive' nowrap><center><label  class="tblswitch  ">
                                                                                                         <input type="checkbox"  value="Y" checked name="IsActaive1" class="tbltoggleSwitch form-control form-control-sm pt-3">
                                                                                                 <span class="tblslider"></span>
                                                                                                 </label></center></td>`;
                                    }else{
                                       list += `<td class=' pt-2 align-items-center Isactive' nowrap><center><label  class="tblswitch  ">
                                                                                                     <input type="checkbox"  value="N"  name="IsActaive1" class="tbltoggleSwitch form-control form-control-sm pt-3">
                                                                                             <span class="tblslider"></span>
                                                                                             </label></center></td>`;
                                    }
                                    list += "<td class='p-0' nowrap><input class='p-1 form-control form-control-sm selectfile' type='file' placeholder='Choose File'/></td>";
                                    list += "<td class=' align-items-center filename' nowrap>" + response[i].FileName + "</td>";
                                    list += "<td class=' align-items-center fileExt' nowrap>" + response[i].FileExt + "</td>";
                                    if (response[i].FileExt == "xlsx" || response[i].FileExt == "csv") {
                                        list += "<td class=' align-items-center d-none fileData' nowrap>" + atob(response[i].FileData) + "</td>";
                                    }else{
                                        list += "<td class=' align-items-center d-none fileData' nowrap>" + response[i].FileData + "</td>";
                                    }
                                    list += "<td class=' align-items-center d-none bpattachId' nowrap>" + response[i].BPAttachId + "</td>";
                                    list += "<td class=' align-items-center d-none flag' nowrap>N</td>";
                                    list += "<td class='p-0 text-center' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 ViewAttchment btn-sm btn-primary'>View</button></td>";
                                    list += "<td class='p-0 text-center' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 DeleteAttchment btn-sm btn-danger'>Delete</button></td>";
                                    list += "</tr>";
                                    $("#AttachmentTable tbody").append(list);
                                    index++;
                                }
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
                //Delete
                function Delete(ID) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "This Business Partner And It's All Details  Is Permanetly Delete Form system..!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Delete',
                        confirmButtonColor: 'red',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '@Url.Action("DELETE","BusinessPartnerMaster")',
                                type: 'POST',
                                dataType: 'json',
                                data: { Id: ID },
                                success: function (response) {
                                    if (response.success) {
                                        LoadBPTableData();
                                        HideBtn()
                                        $("#Form_reset_btn").click()
                                        notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                        Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                    } else {
                                        notify("Error To Deleting Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                        }
                    });
                }
                function DeleteAttachment(ID) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'This Attachment Is Permanetly Delete Form system..!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Delete',
                        confirmButtonColor: 'red',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '@Url.Action("DELETEATTCH","BusinessPartnerMaster")',
                                type: 'POST',
                                dataType: 'json',
                                data: { Id: ID },
                                success: function (response) {
                                    if (response.success) {
                                        LoadAttachmentData()
                                        Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                    } else {
                                        notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                        }
                    });
                }
                $(document).on("click", ".Addrtable_delete", function () {
                    var $row = $(this).closest("tr");
                    var id = $row.find('td.tbl_Main_ID').text();
                    DeleteAddr(id);
                })
                //Delete
                function DeleteAddr(ID) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'This Business Partner Address Details Is Permanetly Delete Form system..!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Delete',
                        confirmButtonColor: 'red',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '@Url.Action("DELETE", "BPAddress")',
                                type: 'POST',
                                dataType: 'json',
                                data: { Id: ID },
                                success: function (response) {
                                    if (response.success) {
                                        LoadAddrTableData($("#BPId").val())
                                        notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                        Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                    } else {
                                        notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                        }
                    });

                }
                $(document).on("click", ".Bdtable_delete", function () {
                    var $row = $(this).closest("tr");
                    var id = $row.find('td.tbl_Main_ID').text();
                    DeleteBankDetails(id)
                })
                function DeleteBankDetails(ID) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'This Business Partner Bank Details Is Permanetly Delete Form system..!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Delete',
                        confirmButtonColor: 'red',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '@Url.Action("DELETE", "BPBankDetails")',
                                type: 'POST',
                                dataType: 'json',
                                data: { Id: ID },
                                success: function (response) {
                                    if (response.success) {
                                        LoadBdTableData($("#BPId").val())
                                        notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                        Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                    } else {
                                        notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                        }
                    });

                }
                //Delete
                $(document).on("click", ".CPDtable_delete", function () {
                    var $row = $(this).closest("tr");
                    var id = $row.find('td.tbl_Main_ID').text();
                    Delete(id);
                })
                function DeleteContactDetails(ID) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'This Business Partner Contact Details Is Permanetly Delete Form system..!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Delete',
                        confirmButtonColor: 'red',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '@Url.Action("DELETE", "BPContactDetails")',
                                type: 'POST',
                                dataType: 'json',
                                data: { Id: ID },
                                success: function (response) {
                                    if (response.success) {
                                        LoadCPDTableData($("#BPId").val())
                                        notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                        Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                    } else {
                                        notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    }
                                },
                                error: function (error) {
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    console.error('Error:', error.responseText);
                                }
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                        }
                    });

                }
            }
        }
        //Payment Run 
        var PayTearmsData = []
        var tablerowdata = []
        var lastcount = ""
        // Region for Payments term//
        {
            $(".Payment_Terms").click(function () {
                $("#Payment_TermsModal").fadeIn();
                loadCashDiscDropdown()
            });
            $('.AddInstallments').click(function () {
                $('#PaymetTbl tbody tr').empty();
                GETInstallmentCount();
                $('#PaymentModal').fadeIn();
            });
            $('.CashDiscount').click(function () {
                $("#CashDiscountModal").fadeIn();
            });
            loadPaymentTerms()
            function loadPaymentTerms(){
                $.ajax({
                    url: '@Url.Action("GET", "PaymentTerms")',
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        PayTearmsData = response;
                        let list = "<option value=''>Define New</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].PymntTId + "'>" + response[i].PymntCode + "</option>";
                        }
                        $("#PymntTId").html(list);
                        $("#TolDays").val("");
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            $("#Pay_Save_btn").click(function () {
                let isValid = true;
                let formData = {};
                $("#Pay_term_form input, select, textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).find('input').length) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {
                        formData[inputName] = inputValue;
                    }
                });
                // Check if PymntTId exists for update, otherwise, it's a new record
                var PymntTId = $('#PymntTId').val();
              
                if (PymntTId) {
                    formData['CrdMthd'] = $('#CrdMthd').val();
                    formData['PymntTId'] = PymntTId;
                    var val1 = $("#IsActive1").val();
                    formData["VATFirst"] = val1 == "Y" ? "Y" : "N";

                    if (isValid && Object.keys(formData).length !== 0) {
                        $.ajax({
                            url: '@Url.Action("UPDATEDATA", "PaymentTerms")',
                            type: 'POST',
                            dataType: 'json',
                            data: formData,
                            success: function (response) {
                                if (response.success) {
                                    loadPaymentTerms()

                                    $("#Payment_TermsModal").fadeOut();
                                    $(".modal-backdrop").hide();
                                    $("#Pay_term_form")[0].reset();
                                   
                                    // LoadTableData();

                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                                } else {
                                    notify("Error Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else {
                        notify("Please Fill All Mandatory Fields", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    }
                } else {
                    // New record insertion logic
                    var val1 = $("#IsActive1").val();
                    formData["VATFirst"] = val1 == "Y" ? "Y" : "N";
                    if (isValid && Object.keys(formData).length !== 0) {
                        $.ajax({
                            url: '@Url.Action("POSTDATA", "PaymentTerms")',
                            type: 'POST',
                            dataType: 'json',
                            data: formData,
                            success: function (response) {
                                if (response !== "") {
                                    loadPaymentTerms()
                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    $("#Pay_term_form")[0].reset();
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    }
                }
            });
            $('.InstNo').on('input', function () {
                AddOnchangeRow();
            });
           
            function AddOnchangeRow() {
                var count = parseInt($('.InstNo').val() || lastcount);
                var MyTable = $('#PaymetTbl tbody tr');
                var MyTablecount = MyTable.length-1;
                if(count<lastcount){
                    notify("Please Delete Records Manually..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    return false;
                }
                var tableBody = $('#PaymetTbl tbody');
                tableBody.find('tr:last').remove();
                var totalPercentage = 0;
                tableBody.find('tr').each(function () {
                    totalPercentage += parseFloat($(this).find('td:nth-child(5)').text());
                });
          
                var remainingPercentage = 100 - totalPercentage;
                if (MyTablecount < count) {
                    var mcount = count - MyTablecount;
                    var newPercentage = remainingPercentage / mcount;
                    // Add new rows
                    for (var i = 0; i < mcount; i++) {
                        var newRow = '<tr data-newly-added="true">' +
                            '<td class="text-center">' + (MyTablecount + i + 1) + '</td>' +
                            '<td class="p-0 text-center" nowrap><i class="fa fa-trash text-danger mt-2 delete-row"></i></td>' +
                            '<td><input type="number" class="text-right form-control Month" value="0" min="0" name="Month" /></td>' +
                            '<td><input type="number" class="text-right form-control Days" value="0" min="0" name="Days" /></td>' +
                            '<td class="text-right">' + newPercentage.toFixed(2) + '%</td>' +
                            '<td class="d-none"></td>' +
                            '</tr>';
                        tableBody.append(newRow);
                    }
                }

                if (MyTablecount > count) {
                    // Remove only the newly added rows
                    MyTable.filter('[data-newly-added="true"]').remove();
                }

                // Recalculate percentage for all rows
                var percentage = 100 / count;
                tableBody.find('tr').each(function () {
                    var newPercentage = percentage.toFixed(2) + '%';
                    $(this).find('td:nth-child(5)').text(newPercentage);
                });

                // Update the total row
              //  tableBody.find('tr:last').find('td:nth-child(5)').text('100%');
                var totalRow = '<tr>' +
                    '<td colspan="4"><strong>Total</strong></td>' +
                    '<td><strong>100%</strong></td>' +
                    '<td class="d-none"></td>' +
                    '</tr>';
                tableBody.append(totalRow);
                // Update the installment count field
                $('#InstNo').val(count);
            }
           // AddOnchangeRow();
            function GETInstallmentCount() {
                var  PymntTId= $("#PymntTId").val();
                $.ajax({
                    url: '@Url.Action("GETInstallmentCount","PaymentTerms")',
                    type: 'GET',
                    data:{PymntTId:PymntTId},
                    dataType: 'json',
                    success: function (response) {
                        var tableBody = $('#PaymetTbl tbody');
                         tableBody.empty(); // Clear previous rows
                         lastcount=response.length;
                        for (var i = 0; i < response.length; i++) {
                                var row = '<tr>' +
                                    '<td class="text-center">' + (i + 1) + '</td>' +
                                    '<td class="p-0 text-center" nowrap><i class="fa fa-trash text-danger mt-2 delete-row"></i></td>' +
                                '<td><input type="number" class=" text-right form-control Month" value="' + response[i].InstMonth + '" name="Month" /></td>' +
                                    '<td><input type="number" class=" text-right form-control Days" value="' + response[i].InstDays + '" name="Days" /></td>' +
                                    '<td class="text-right">' + response[i].InstPercnt + '</td>' +
                                    '<td class="d-none InstlmntId">' + response[i].InstlmntId + '</td>' +

                                    '</tr>';
                                tableBody.append(row);
                        }
                        var totalRow = '<tr>' +
                            '<td colspan="4"><strong>Total</strong></td>' +
                            '<td class="text-right"><strong>100%</strong></td>' +
                            '<td class="d-none"></td>' +
                            '</tr>';
                        tableBody.append(totalRow);
                    }
                });
            }
            $('.InstNo').change(function () {
                var selectedValue = $(this).val();
            });
            var PaymentId = [];
            function getTableData() {
                var tableData = [];
                $("#PaymetTbl tbody tr").each(function (index) {
                    var rowData = {};

                    var MonthValue = $(this).find('.Month').val();
                    rowData.InstMonth = MonthValue;

                    var DaysValue = $(this).find('.Days').val();
                    rowData.InstDays = DaysValue;

                    var InstNovalue = $(this).find('td:eq(0)').text();
                    rowData.InstNo = InstNovalue;

                    var percentage = $(this).find('td:eq(4)').text();
                    rowData.InstPercnt = percentage;

                    rowData.PymntTId = $("#PymntTId").val();

                    var InstlmntIdvalue = $(this).find('td:eq(5)').text();
                    rowData.InstlmntId = InstlmntIdvalue;

                    if (rowData.InstDays != undefined) {
                        tableData.push(rowData);
                    }
                });

                return tableData;
            }
            $("#Investment_Save_btn").click(function () {
                $('#InstNo').val($('#InInstNo').val());
                var tableData = getTableData();
                $.ajax({
                    url: '@Url.Action("POSTInstallment", "PaymentTerms")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(tableData),
                    success: function (response) {
                        if (response.success) {
                            notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeIn Right", "animated fadeOutRight");
                        } else {
                            notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    }
                });
            });
            // Retriving data function
            $('.Payment_Terms').click(function () {
                var PayDrpID = $('#PymntTId').val();
                 $.ajax({
                    url: '@Url.Action("GETPAYTURMSDATA", "PaymentTerms")',
                    type: 'GET',
                    data: { Id: PayDrpID },
                    dataType: 'json',
                    success: function (PayTearmsData) {
                        var i=0;
                        if(PayTearmsData.lenght !=0){
                            $('#PymntTId').val(PayTearmsData[i].PymntTId);
                            $('#PymntCode').val(PayTearmsData[i].PymntCode);
                            $('#BslineDate').val(PayTearmsData[i].BslineDate);
                            $('#NoOfDays').val(PayTearmsData[i].NoOfDays);
                            $('#OpenRcpt').val(PayTearmsData[i].OpenRcpt);
                            $('#DiscCode').val(PayTearmsData[i].DiscCode);
                            $('#TotDiscnt').val(PayTearmsData[i].TotDiscnt);
                            $('#TolDays').val(PayTearmsData[i].TolDays);
                            $('#LatePyChrg').val(PayTearmsData[i].LatePyChrg);
                            $('#CredLimit').val(PayTearmsData[i].CredLimit);
                            $('#CommitLimit').val(PayTearmsData[i].CommitLimit);
                            $('#CrdMthd').val(PayTearmsData[i].CrdMthd);
                            $('.myvalue').val(PayTearmsData[i].InstNo);
                            $('#InInstNo').val(PayTearmsData[i].InstNo);
                            $('#DiscCode').val(PayTearmsData[i].DiscCode);
                            $('#VATFirst').val(PayTearmsData[i].VATFirst);
                            // Set checkbox based on VATFirst value
                            if (PayTearmsData[i].VATFirst == 'Y') {
                                $("#IsActive1").prop("checked", true).val("Y");
                                $("#IsActive2").prop("checked", false).val("N");
                            } else {
                                $("#IsActive1").prop("checked", false).val("N");
                                $("#IsActive2").prop("checked", true).val("Y");
                            }
                            $(".CashDiscount").prop("disabled", false);
                            $(".AddInstallments").prop("disabled", false);
                        }else{
                            $(".CashDiscount").prop("disabled", true);
                            $(".AddInstallments").prop("disabled", true);
                            $('#PymntCode, #BslineDate, #NoOfDays, #InstNo, #OpenRcpt, #DiscCode, #TotDiscnt, #LatePyChrg, #CredLimit,#DiscCode, #CommitLimit, #CrdMthd, #TolDays').val('');
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            });
            // Switch Button function
            $("#IsActive1").change(function () {
                if ($(this).val() == "N") {
                    $("#IsActive2").prop("checked", true); // Use prop to uncheck the checkbox
                    $("#IsActive2").val("Y");
                } else {
                    $("#IsActive2").prop("checked", false); // Use prop to uncheck the checkbox
                    $("#IsActive2").val("N");
                }
            });
            $("#IsActive2").change(function () {
                if ($(this).val() == "N") {
                    $("#IsActive1").prop("checked", true); // Use prop to uncheck the checkbox
                    $("#IsActive1").val("Y");
                } else {
                    $("#IsActive1").removeAttr("checked", "checked");
                    $("#IsActive1").prop("checked", false);
                    $("#IsActive1").val("N");
                }
            })
            $('#PaymetTbl tbody').on('click', 'td:nth-child(2)', function () {
                var id = $(this).closest('tr').find('td:nth-child(6)').text();
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This Installment Is Permanently Delete From System..!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DELETEINSATALLMENT", "PaymentTerms")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: id },
                            success: function (response) {
                                if (response.success) {
                                    GETInstallmentCount();
                                    AddOnchangeRow()
                                    $("#InInstNo").val($("#PaymetTbl tbody tr").length-2);
                                    $("#InstNo").val($("#PaymetTbl tbody tr").length-2);
                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                } else {
                                    notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                console.error('Delete error:', error.responseText);
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });
            });
        }
        {
            $('#DiscTable th:nth-child(2), #DiscTable td:nth-child(2)').show();
            $('#DiscTable th:nth-child(3), #DiscTable td:nth-child(3)').hide();
            $('#DiscTable th:nth-child(4), #DiscTable td:nth-child(4)').hide();
            $('#DiscTable th:nth-child(5), #DiscTable td:nth-child(5)').show();
            $("#ByDate").change(function () {
                MyHideFun();
            });
            function MyHideFun() {
                var isByDateChecked = $("#ByDate").prop('checked');
                var length = $('#DiscTable tbody tr').length;
                if (length > 0) {
                    notify("Please Remove Privious Entry First..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    if (isByDateChecked) {
                        $("#ByDate").prop('checked', false)
                        $("#ByDate").val("N")
                    } else {
                        $("#ByDate").prop('checked', true)
                        $("#ByDate").val("Y")
                    }
                    return false;
                }
                if (isByDateChecked) {
                    // ByDate toggle is checked, show columns for ByDate
                    $('#DiscTable th:nth-child(2), #DiscTable td:nth-child(2)').show();
                    $('#DiscTable th:nth-child(3), #DiscTable td:nth-child(3)').show();
                    $('#DiscTable th:nth-child(4), #DiscTable td:nth-child(4)').show();
                    $('#DiscTable th:nth-child(5), #DiscTable td:nth-child(5)').hide();
                } else {
                    // Neither toggle is checked, default column display
                    $('#DiscTable th:nth-child(2), #DiscTable td:nth-child(2)').show();
                    $('#DiscTable th:nth-child(3), #DiscTable td:nth-child(3)').hide();
                    $('#DiscTable th:nth-child(4), #DiscTable td:nth-child(4)').hide();
                    $('#DiscTable th:nth-child(5), #DiscTable td:nth-child(5)').show();
                }
            }
           
            function loadCashDiscDropdown(){
                $.ajax({
                    url: '@Url.Action("GETCASH", "PaymentTerms")',
                    type: 'GET',
                    data: {Payid: $("#PymntTId").val() || "" },
                    contentType: 'application/json',
                    success: function (response) {
                        $("#DiscCode").html("");
                        headerData = response;
                        let list = "<option value=''>Define New</option>";
                        $("#DiscCode").append(list);
                        for (var i = 0; i < response.length; i++) {
                            list = "";
                            list += "<option value='" + response[i].CashDisId + "'>" + response[i].Name + "</option>";
                            $("#DiscCode").append(list);
                        }
                    },error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            }
            $.ajax({
                url: '@Url.Action("GETCASHDET", "PaymentTerms")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    tablerowdata = response;
                }
            });
            // Function to save data using AJAX
            function saveData(Flag) {
                // Get header data
                var headerData = {
                    PymntTId: $('#PymntTId').val(),
                    Code: $('#Code').val(),
                    Name: $('#Name').val(),
                    ByDate: $('#ByDate').prop('checked') ? 'Y' : 'N',
                    Freight: $('#Freight').prop('checked') ? 'Y' : 'N',
                    BaseDate: $('#BaseDate').val(),
                    CashDisId: $('#DiscCode').val()
                };
                $.ajax({
                    url: '@Url.Action("POSTCASH", "PaymentTerms")',
                    type: 'POST',
                    dataType: 'json',
                    data: headerData,
                    success: function (response) {
                        if (response.success) {
                            AddPaydisTableData(response.lastId);
                            loadCashDiscDropdown()
                            if(Flag=="S"){
                                $("#CashDiscountModal").fadeOut();
                               notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeIn Right", "animated fadeOutRight");
                            }
                        } else {
                            notify("Error To Posting Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            }

            // Button click event to save data
            $('#CashD_Save_btn').click(function () {
                saveData("S");
            });
            function AddPaydisTableData(CashDisId) {
               
                var tableData = [];
                $('#DiscTable tbody tr').each(function (index) {
                    var rowData = {
                        Day: $(this).find('.day-input:last').val(),
                        Month: $(this).find('.month-input:last').val(),
                        NumOfDays: $(this).find('.cash-discount-input:last').val(),
                        Discount: $(this).find('.percentage-input:last').val(),
                        CashDisDetId: $(this).find('.cash-discount-id:last').text(), // Assuming this input contains CashDisDetId
                        CashDisId: CashDisId,

                    };
                    tableData.push(rowData);
                });
                $.ajax({
                    url: '@Url.Action("POSTCASHDET", "PaymentTerms")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(tableData),
                    success: function (response) {
                      
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            }
            $('.CashDiscount').click(function () {
                var DiscId = $('#DiscCode').val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GETDISCDETE", "PaymentTerms")',
                    contentType: 'application/json',
                    data: { DicsID: DiscId },
                    success: function (response) {
                        if (response.length != 0) {
                            for (var j = 0; j < response.length; j++) {
                                $('#Code').val(headerData[j].Code);
                                $('#Name').val(headerData[j].Name);
                                $('#ByDate').val(headerData[j].ByDate);
                                $('#Freight').val(headerData[j].Freight);
                                $('#BaseDate').val(headerData[j].BaseDate);
                            }
                            GetDescountRow(DiscId)
                        }else{
                                $('#Code').val("");
                                $('#Name').val("");
                                $('#ByDate').val("N").prop("checked",false);
                                $('#Freight').val("Y").prop("checked",true);;
                                $('#BaseDate').val("P");
                                $("#DiscTable tbody").html("");
                        }

                    },
                    error: function (xhr, status, error) {
                        console.error('Error saving table data:', error);
                    }
                });


            })
            $("#DiscRowAdd").click(function () {
                var index = $('#DiscTable tbody tr').length;
                var ByDate = $("#ByDate").prop("checked");
                var newRow = '<tr>' +
                    '<td class="text-center">' + parseInt(index + 1) + '</td>' + // Sr.No column with row count
                    '<td class="text-center"><center><i class="fa fa-trash text-danger mt-2 delete-table"></center></td>'; // Delete button column
                if (ByDate) {
                    newRow += '<td class="text-right"><input type="text" class="form-control text-right form-control-sm day-input Day" placeholder="Day" value="0" ></td>';
                    newRow += '<td class="text-right"><input type="text" class="form-control text-right form-control-sm month-input Month" placeholder="Month" value="0" ></td>';
                    newRow += '<td class="d-none"><input type="text" class="form-control text-right form-control-sm cash-discount-input cashdis" placeholder="Cash Discount Days" value="0"></td>';
                    newRow += '<td class="text-right"><input type="text" class="form-control  text-right form-control-sm percentage-input persent" placeholder="%" value="0" oninput="validatePercentage(this)"></td>';

                } else {
                    newRow += '<td class="d-none"><input type="text" class="form-control form-control-sm text-right day-input Day" placeholder="Day" value="0" ></td>';
                    newRow += '<td class="d-none"><input type="text" class="form-control form-control-sm text-right month-input Month" placeholder="Month" value="0" ></td>';
                    newRow += '<td class="text-right"><input type="text" class="form-control form-control-sm  text-right cash-discount-input cashdis" placeholder="Cash Discount Days" value="0"></td>';
                    newRow += '<td class="text-right"><input type="text" class="form-control form-control-sm text-right percentage-input persent" placeholder="%" value="0" oninput="validatePercentage(this)"></td>';

                }
                $('#DiscTable tbody').append(newRow); // Append the new row to the table
            })
            // Function to get discount rows
            function GetDescountRow(DiscId) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GETDISCTABLE", "PaymentTerms")',
                    contentType: 'application/json',
                    data: { DicsID: DiscId },
                    success: function (response) {
                        if (response.length != 0) {
                            $('#DiscTable tbody').html("");
                            for (var j = 0; j < response.length; j++) {
                                var newRow = '<tr>' +
                                    '<td class="text-center">' + parseInt(j + 1) + '</td>' + // Sr.No column with row count
                                    '<td class="text-center"><i class="fa fa-trash text-danger mt-2 delete-table"></i></td>'; // Delete button column
                                newRow += '<td><input type="text" class=" text-right form-control form-control-sm day-input Day" placeholder="Day" value="' + ((response[j].Day) ?? '0') + '" ></td>';
                                newRow += '<td><input type="text" class=" text-right form-control form-control-sm month-input Month" placeholder="Month" value="' + ((response[j].Month) ?? '0') + '" ></td>';
                                newRow += '<td><input type="text" class=" text-right form-control form-control-sm cash-discount-input cashdis" placeholder="Cash Discount Days" value="' + ((response[j].NumOfDays) ?? '0') + '"></td>';
                                newRow += '<td><input type="text" class=" text-right form-control form-control-sm percentage-input persent" placeholder="%" value="' + ((response[j].Discount) ?? '0') + '" ></td>' +
                                    '<td class="d-none cash-discount-id">' + response[j].CashDisDetId + '</td>'; // Hidden column for CashDisDetId
                                newRow += '</tr>';
                                $('#DiscTable tbody').append(newRow); // Append the new row to the table
                            }
                            var ByDate = $("#ByDate").prop("checked");
                            if (ByDate) {
                                $('#DiscTable th:nth-child(2), #DiscTable td:nth-child(2)').show();
                                $('#DiscTable th:nth-child(3), #DiscTable td:nth-child(3)').show();
                                $('#DiscTable th:nth-child(4), #DiscTable td:nth-child(4)').show();
                                $('#DiscTable th:nth-child(5), #DiscTable td:nth-child(5)').hide();
                            } else {
                                // Neither toggle is checked, default column display
                                $('#DiscTable th:nth-child(2), #DiscTable td:nth-child(2)').show();
                                $('#DiscTable th:nth-child(3), #DiscTable td:nth-child(3)').hide();
                                $('#DiscTable th:nth-child(4), #DiscTable td:nth-child(4)').hide();
                                $('#DiscTable th:nth-child(5), #DiscTable td:nth-child(5)').show();
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error saving table data:', error);
                    }
                });
            }
            // Delete row functionality
            $('#DiscTable tbody').on('click', '.delete-table', function () {
                var row = $(this).closest('tr');
                var id = row.find('.cash-discount-id').text(); // Get the CashDisDetId from the hidden column
                if (id !="" || id !=null) {
                    // Perform delete confirmation and AJAX call here
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'This Cash Discount Detail Is Permanently Delete From System..!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Delete',
                        confirmButtonColor: 'red',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Perform AJAX delete request using the ID
                            $.ajax({
                                url: '@Url.Action("DELETECASHDIS", "PaymentTerms")',
                                type: 'POST',
                                dataType: 'json',
                                data: { Id: id },
                                success: function (response) {
                                    if (response.success) {
                                        //saveData("D");
                                        row.remove(); 
                                        Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                        notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    } else {
                                        notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                    }
                                },
                                error: function (error) {
                                    console.error('Delete error:', error.responseText);
                                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                        }
                    });
                } else {
                    alert('Cannot delete without a valid ID.');
                }
            });
        }
    // Region Navigation
    {
        var $table = $("#Table");
        $table.find("tbody tr:first").addClass("active");
        $(".btn_forward").click(function () {
            var $currentRow = $table.find(".active");
            var $nextRow = $currentRow.next("tr");
            if ($nextRow.length > 0) {
                $currentRow.removeClass("active");
                $nextRow.addClass("active");
                bindrecord($nextRow);
            } else {
                var $firstRow = $table.find("tbody tr:first");
                $table.find(".active").removeClass("active");
                $firstRow.addClass("active");
                bindrecord($firstRow);

            }
        });
        $(".btn_backward").click(function () {
            var $currentRow = $table.find(".active");
            var $prevRow = $currentRow.prev("tr");
            if ($prevRow.length > 0) {
                $currentRow.removeClass("active");
                $prevRow.addClass("active");
                bindrecord($prevRow);
            } else {
                var $lastRow = $table.find("tr:last");
                $table.find(".active").removeClass("active");
                $lastRow.addClass("active");
                bindrecord($lastRow);
            }
        });
        $(".btn_first").click(function () {
            var $firstRow = $table.find("tbody tr:first");
            $table.find(".active").removeClass("active");
            $firstRow.addClass("active");
            bindrecord($firstRow);
        });
        $(".btn_last").click(function () {
            var $lastRow = $table.find("tr:last");
            $table.find(".active").removeClass("active");
            $lastRow.addClass("active");
            bindrecord($lastRow);
        });
        $(".btn_reload").click(function () {
            $('#BPForm_reset_btn').click()
            HideBtn()
        });
    }
    // Bulk Post
    {
        $('#DownloadTemplete').click(function () {
            var value = 'BP_Mst';
            $.ajax({
                type: "get",
                url: "@Url.Action("GetHeader", "UnitMaster")",
                data: { data: value },
                contentType: "application/json; charset=utf-8",
                success: function (headerData) {
                    var headers = [];

                    // Populate headers array with column names and metadata
                    for (var i = 0; i < headerData.length; i++) {
                        var header = headerData[i].name;
                        var dp_field_dname = headerData[i].name;
                        var MYDATA_TYPE = headerData[i].dataType;
                        var MYLength = headerData[i].maxLength;
                        var headerText = `${dp_field_dname},(${MYDATA_TYPE}, ${MYLength})`;
                        var tooltipText = '';
                            if (header.includes('BPCurrId')) {
                            tooltipText = "Tooltip for use Country Master Sheet for data use in " + header;
                        }
                            if (header.includes('BPGrpId')) {
                            tooltipText = "Tooltip for Use Business Partner Group sheet for data use in " + header;
                        }
                            if (header.includes('StateId')) {
                                tooltipText = "Tooltip for Use State Master sheet for data use in " + header;
                        }
                            if (header.includes('CntryId')) {
                                tooltipText = "Tooltip for Use  Country Master sheet for data use in " + header;
                        }
                        var headerObj = {
                            text: headerText,
                            tooltip: tooltipText
                        };

                        headers.push(headerObj);
                    }

                    const worksheetData = [headers.map(header => header.text)];
                    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);
                    const columnWidth = 30; // Set desired width (in characters)
                    worksheet['!cols'] = headers.map(() => ({ width: columnWidth }));

                    headers.forEach((header, index) => {
                        if (header.tooltip) {
                            const cellAddress = XLSX.utils.encode_cell({ r: 0, c: index });
                            worksheet[cellAddress].c = [{
                                t: header.tooltip,
                                a: "system"
                            }];
                        }
                    });

                    const workbook = XLSX.utils.book_new();
                    XLSX.utils.book_append_sheet(workbook, worksheet, 'Headers');

                    // Create an array of AJAX calls
                    const ajaxCalls = [
                        { url: "@Url.Action("GET", "BusinessPartnerGroupMaster")", sheetName: 'Business Partner Group Master' },
                        { url: "@Url.Action("GET", "CountryMaster")", sheetName: 'Country Master' },
                        { url: "@Url.Action("GET", "StateMaster")", sheetName: 'State Master' }

                    ];

                    // Function to process AJAX response and add sheets
                    function addSheetToWorkbook(data, sheetName) {
                        if (data.length > 0) {
                            var columnNames = Object.keys(data[0]);
                            var sheetData = [columnNames];
                            for (var i = 0; i < data.length; i++) {
                                var row = [];
                                for (var j = 0; j < columnNames.length; j++) {
                                    row.push(data[i][columnNames[j]]);
                                }
                                sheetData.push(row);
                            }
                            const worksheet = XLSX.utils.aoa_to_sheet(sheetData);
                            worksheet['!cols'] = columnNames.map(() => ({ width: columnWidth }));
                            XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);
                        }
                    }

                    // Perform all AJAX calls
                    $.when.apply($, ajaxCalls.map(call => $.ajax({
                        type: "get",
                        url: call.url,
                        contentType: "application/json; charset=utf-8"
                    })))
                        .then(function (...responses) {
                            responses.forEach((response, index) => {
                                addSheetToWorkbook(response[0], ajaxCalls[index].sheetName);
                            });

                            const excelBuffer = XLSX.write(workbook, {
                                bookType: 'xlsx',
                                type: 'array'
                            });
                            const blob = new Blob([excelBuffer], { type: 'application/octet-stream' });
                            const link = document.createElement('a');
                            link.href = URL.createObjectURL(blob);
                            link.download = `${value}.xlsx`; // Corrected filename format
                            link.click();
                            URL.revokeObjectURL(link.href);
                        })
                        .fail(function (err) {
                            console.error('Error fetching data:', err);
                        });
                },
                error: function (error) {
                    console.error('Error fetching data:', error);
                }
            });
        });

        $('#Upload_Xls').on('click', function () {
            Loader();

            var input = document.getElementById('Import');
            var file = input.files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var data = new Uint8Array(e.target.result);
                let workbook = XLSX.read(data, { type: 'array' });
                let firstSheetName = workbook.SheetNames[0];
                let worksheet = workbook.Sheets[firstSheetName];
                let excelData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
                let Eheaders = excelData[0];
                let headers = Eheaders.map(header => {
                    // Split the header on ',' and take the first part
                    return header.split(',')[0];
                });
                let rows = excelData.slice(1);
                let dataArray = rows.map(row => {
                    let obj = {};
                    row.forEach((cell, i) => {
                        obj[headers[i]] = cell;
                    });
                    return obj;
                });
                $.ajax({
                    url: "@Url.Action("POSTDATAExcel", "BusinessPartnerMaster")",
                    method: "POST",
                    data: { data: JSON.stringify(dataArray) },
                    success: function (response) {
                        if (response !== "") {
                            var jsondata = JSON.parse(response);
                            if (jsondata.length > 0) {
                                createExcelFile(jsondata);
                            } else {
                                Swal.fire("Bulk Post Successful...!", "", "success");
                                LoadTableData();
                            }
                        }
                        Loader();
                        $('#Import').val("");
                    },
                    error: function (err) {
                        console.log(err.responseText);
                        Loader();
                    }
                });
            };

            reader.readAsArrayBuffer(file);
        });

        function createExcelFile(jsonData) {
            const worksheet = XLSX.utils.json_to_sheet(jsonData);
            const workbook = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");
            const excelBuffer = XLSX.write(workbook, {
                bookType: "xlsx",
                type: "array"
            });
            const blob = new Blob([excelBuffer], { type: "application/octet-stream" });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'error_log.xlsx';
            link.click();
            URL.revokeObjectURL(link.href);
        }
    }
        
 });
   function validatePercentage(input) {
        let value = parseFloat(input.value);

        if (!isNaN(value) && value >= 0 && value <= 100) {
            
            input.value = value.toString();
        } else {
            input.value = ''; 
        }
    }
</script>

