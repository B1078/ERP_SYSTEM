@{
    string? UserName = ViewContext.HttpContext.Session.GetString("UserName");
    DateTime currentDate = DateTime.Now;
    string formattedDate = currentDate.ToString("dd-MM-yyyy");
}
<div class="col-xl-12 col-md-12">
    <div class="card table-card p-2 mb-0">
        <div class="row">
            <div class="col-md-12">
                <button class="btn text-center btn-sm btn-primary btn_first p-2" title="Get First Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_backward p-2" title="Get Privious Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary p-2 btn_forward" title="Get Next Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_last p-2" title="Get Last Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_reload p-2" title="Reload" style="width:50px; font-size:18px;">
                    <i class="fa fa-refresh"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary p-2 " id="XLS" title="Export" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-up"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="card table-card mt-2">
        <div class="card-header">
            <h5 class="webtitle">Item Master</h5>
            <div class="card-header-right">
                <ul class="list-unstyled card-option">
                    <li><i class="fa fa fa-wrench open-card-option"></i></li>
                    <li><i class="fa fa-window-maximize full-card"></i></li>
                    <li><i class="fa fa-minus minimize-card"></i></li>
                    <li><i class="fa fa-refresh reload-card"></i></li>
                    <li hidden><i class="fa fa-trash close-card"></i></li>
                </ul>
            </div>
        </div>
        <div class="card-block shadow">
            <!-- Row start -->
            <form id="Header_Form">
                <div class="row p-2">
                    <div class="col-md-12 col-lg-12 col-xl-12 ">
                        <div class="row justify-content-start mt-1 mb-3 p-1">
                            <div class="col-md-6 col-lg-6">
                                <label class="switch">
                                    <input type="checkbox" value="Y" checked name="IsActive" id="IsActive" class="toggleSwitch form-control form-control-sm">
                                    <span class="slider"></span>
                                </label>
                            </div>
                            <div class="col-md-6 col-lg-6">
                                <div class="row align-items-center">
                                    <div class="col-md-3"></div>
                                    <div class="col-md-3">
                                        <button type="button" id="DownloadTemplete" class="btn btn-sm btn-primary w-100">
                                            Download Template
                                        </button>
                                    </div>
                                    <div class="col-md-3">
                                        <input class='p-1 form-control form-control-sm selectfile' id="Import" type='file' placeholder='Choose File' />
                                    </div>
                                    <div class="col-md-3 d-flex justify-content-end">
                                        <button type="button" id="Upload_Xls" class="btn btn-sm btn-success w-100">Upload</button>
                                        <button type="button" class="btn btn-sm btn-primary" id="ViewExcel"><i class="fa fa-eye"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div class="row mt-1 mb-0 p-1  ">
                            <div class="col-md-12  col-lg-12 col-xl-10">
                                <div class="row">
                                    <input hidden name="ItemId" id="ItemId" value="" type="text" placeholder="ItemId" class="form-control form-control-sm Form_Elem" />
                                    <div class="col-md-3  mt-1 mb-1">
                                        <label for="ItemCode">Item Code</label>
                                        <input name="ItemCode" id="ItemCode" oninput="MaxLengthInp(this,20)" type="text" placeholder="Item Code" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3  mt-1 mb-1">
                                        <label for="ItemName">Item Name</label>
                                        <input name="ItemName" id="ItemName" oninput="MaxLengthInp(this,100)" type="text" placeholder="Item Name" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ItemType">Type</label>
                                        <select id="ItemType" name="ItemType" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Item Type</option>
                                            <option value="I">Item</option>
                                            <option value="L">Labour</option>
                                            <option value="T">Travel</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ItemGrpId">Item Group</label>
                                        <select id="ItemGrpId" name="ItemGrpId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Item Group</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="UomGrpId">UOM Group</label>
                                        <select id="UomGrpId" name="UomGrpId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Uom Group</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3  mt-1 mb-1 ">
                                        <label for="UnitPrice">Unit Price</label>
                                        <div class="row ">
                                            <div class="col-md-8  pr-0 text-right">
                                                <input style="height:31px!important; width:100%!important;" name="UnitPrice" id="UnitPrice" oninput="MaxLengthInp(this,10)" type="text" placeholder="Unit Price" class="form-control  form-control-sm Form_Elem" />
                                            </div>
                                            <div class="col-md-4 pl-0 text-left">
                                                <select style="height:31px!important; width:100%!important;" id="CntryId" name="CntryId" class="form-control form-control-sm  Form_Elem">
                                                    <option value="">Currency Code</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-3 mt-1  mb-1">
                                        <label for="PListId">Price List</label>
                                        <select id="PListId" name="PListId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Price List</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3  mt-1 mb-1 ">
                                        <label for="BarCodeId">Barcode</label>
                                        <div class="row ">
                                            <div class="col-md-3  pr-0 text-right">
                                                <button type="button" style="height:31px!important;" disabled class="btn btn-sm btn-primary w-100 OpBarcode"><i class="fa fa-plus"></i></button>
                                            </div>
                                            <div class="col-md-9 pl-0 text-left">
                                                <select id="BarCodeId" name="BarCodeId" class="form-control form-control-sm  Form_Elem">
                                                    <option value="">Select BarCode</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 ">
                                        <label for="Remarks" oninput="MaxLengthInp(this,200)">Remark</label>
                                        <textarea name="Remarks" id="Remarks" type="number" class="form-control form-control-sm Form_Elem"></textarea>
                                    </div>

                                </div>
                            </div>
                            <div class="col-md-12 col-lg-12 col-xl-2 p-4">
                                <div class="row align-items-center p-0">
                                    <div class="col-md-12 col-lg-3 col-xl-12 align-items-center">
                                        <input name="ItemInvnt" value="Y" id="ItemInvnt" type="checkbox" checked class="p-1 mt-2 form-control-sm Form_Elem" />
                                        <label for="ItemInvnt" class="ml-3 text-left mt-2">Inventory Item</label>
                                    </div>
                                    <div class="col-md-12 col-lg-3 col-xl-12 align-items-center">
                                        <input name="ItemSale" value="Y" id="ItemSale" type="checkbox" checked class="p-1 mt-2 form-control-sm Form_Elem" />
                                        <label for="ItemSale" class="ml-3 text-left mt-2">Sales Item</label>
                                    </div>
                                    <div class="col-md-12 col-lg-3 col-xl-12 align-items-center">
                                        <input name="ItemPur" value="Y" id="ItemPur" type="checkbox" checked class="p-1 mt-2 form-control-sm Form_Elem" />
                                        <label for="ItemPur" class="ml-3 text-left mt-2">Purchasing Item</label>
                                    </div>
                                    <div class="col-md-12 col-lg-3 col-xl-12 align-items-center">
                                        <input name="ItemFixAsset" value="N" id="ItemFixAsset" type="checkbox" class="p-1 mt-2 form-control-sm Form_Elem" />
                                        <label for="ItemFixAsset" class="ml-3 text-left mt-2">Item Fix Asset</label>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="col-md-12 col-lg-12 col-xl-12 mt-3 ">
                        <!-- Nav tabs -->
                        <ul class="nav nav-tabs  tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="tab" id="Create_User_Tab" href="#General" role="tab">General</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#PurchasingData" role="tab">Purchasing Data</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#SalesData" role="tab">Sales Data</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#InventoryData" role="tab">Inventory Data</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#PlanningData" role="tab">Planning Data</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#ProductionData" role="tab">Production Data</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#Attachment" role="tab">Attachment</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#AllItems" role="tab">All Items List</a>
                            </li>
                        </ul>
                        <!-- Tab panes -->
                        <div class="tab-content tabs card-block">
                            <div class="tab-pane active p-3 m-0 mt-2" id="General" role="tabpanel">
                                <div class="row p-3  mt-2 border ">
                                    <div class="col-md-3  mt-1 mb-1">
                                        <label class="" for="WHTaxLiable">Withholding Tax Liable</label>
                                        <br />
                                        <label class="switch">
                                            <input type="checkbox" value="N" name="WHTaxLiable" id="WHTaxLiable" class="toggleSwitch form-control ml-2 form-control-sm">
                                            <span class="slider"></span>
                                        </label>
                                    </div>
                                    <div class="col-md-3  mt-1 mb-1">
                                        <label for="ManufId">Manufacturer</label>
                                        <select id="ManufId" name="ManufId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Manufacturer</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ShipTypeId">Shiping Type</label>
                                        <select id="ShipTypeId" name="ShipTypeId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Shiping Type</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ItemManageBy">Manage By</label>
                                        <select id="ItemManageBy" name="ItemManageBy" class="form-control form-control-sm  Form_Elem">
                                            <option value="N">None</option>
                                            <option value="S">Serial Numbers</option>
                                            <option value="B">Batches</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3  mt-1 mb-1">
                                        <label class="" for="ItemExcisable">Item Excisable</label>
                                        <br />
                                        <label class="switch">
                                            <input type="checkbox" value="N" name="ItemExcisable" id="ItemExcisable" class="toggleSwitch form-control ml-2 form-control-sm">
                                            <span class="slider"></span>
                                        </label>
                                    </div>
                                    <div class="col-md-3  mt-1 mb-1">
                                        <label class="" for="ItemGST">Item GST</label>
                                        <br />
                                        <label class="switch">
                                            <input type="checkbox" value="N" name="ItemGST" id="ItemGST" class="toggleSwitch form-control ml-2 form-control-sm">
                                            <span class="slider"></span>
                                        </label>
                                    </div>
                                    <div class="col-md-6 mt-1 mb-1"></div>
                                    <div class="col-md-3 mt-1 mb-1 Checkhidden" style="display:none;">
                                        <label for="ItemMatType">Material Type</label>
                                        <select id="ItemMatType" name="ItemMatType" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Material Type </option>
                                            <option value="1">1-Raw Material</option>
                                            <option value="2">2-Capital Goods</option>
                                            <option value="3">3-Finished Goods</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1 Checkhidden" style="display:none;">
                                        <label class="HSNLABEL" for="HSNNo">HSN No</label>
                                        <input name="HSNNo" id="HSNNo" type="text" placeholder="HSN No" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1 Taxhidden" style="display:none;">
                                        <label for="TaxCategory">Tax Category</label>
                                        <select id="TaxCategory" name="TaxCategory" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Tax Category</option>
                                            <option value="R">Regular</option>
                                            <option value="N">Nil Rated</option>
                                            <option value="E">Exempt</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane p-3 m-0 mt-2" id="PurchasingData" role="tabpanel">
                                <div class="row p-3  mt-2 border">
                                    <div class="col-md-3 mt-1  mb-1">
                                        <label for="BPId">Preferred Vendor</label>
                                        <select id="BPId" name="BPId" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Vendor</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1  mb-1">
                                        <label for="PurUOM">Purchasing UOM</label>
                                        <select id="PurUOM" name="PurUOM" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Purchasing UOM</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ItemPerPurUnit">Item Per Purchasing Unit</label>
                                        <input name="ItemPerPurUnit" id="ItemPerPurUnit" type="number" placeholder="Item Per Purchasing Unit" class="form-control form-control-sm Form_Elem" readonly/>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="PurPackingUOM">Packaging UOM</label>
                                        <input name="PurPackingUOMDisplay" id="PurPackingUOMDisplay" type="text" placeholder="Packaging UOM" class="form-control form-control-sm Form_Elem" readonly />
                                        <input name="PurPackingUOM" id="PurPackingUOM" type="hidden" />
                                    </div>

                                  
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="PurQtyPerPack">Qty Per Packaging</label>
                                        <input name="PurQtyPerPack" id="PurQtyPerPack" type="number" placeholder="Qty Per Packaging" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="PurLength">Length</label>
                                        <input name="PurLength" oninput="MaxLengthInp(this,5)" id="PurLength" type="number" placeholder="Length" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="Purwidth">width</label>
                                        <input name="Purwidth" oninput="MaxLengthInp(this,5)" id="Purwidth" type="number" placeholder="width" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="PurHeight">Height</label>
                                        <input name="PurHeight" oninput="MaxLengthInp(this,5)" id="PurHeight" type="number" placeholder="Height" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3  mt-1 mb-1 ">
                                        <label for="PurVolume">Volume</label>
                                        <div class="row ">
                                            <div class="col-md-8  pr-0 text-right">
                                                <input name="PurVolume" oninput="MaxLengthInp(this,5)" id="PurVolume" type="number" placeholder="Volume" class="form-control  form-control-sm Form_Elem" style="width:100%!important" />
                                            </div>
                                            <div class="col-md-4 pl-0 text-left">
                                                <select id="PurVUomId" name="PurVUomId" class="form-control UOMCODE form-control-sm w-25  Form_Elem" style="width:100%!important">
                                                    <option value="">UOM</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="PurWeight">Weight</label>
                                        <input oninput="MaxLengthInp(this,5)" name="PurWeight" id="PurWeight" type="number" placeholder="Weight" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane p-3 m-0 mt-2" id="SalesData" role="tabpanel">
                                <div class="row  p-3  mt-2 border">
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="SalsUOM">Sales UOM</label>
                                        <select id="SalsUOM" name="SalsUOM" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Sales UOM</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ItemPerSalsUnit">Item Per Sales Unit</label>
                                        <input name="ItemPerSalsUnit" id="ItemPerSalsUnit" type="number" placeholder="Item Per Sales Unit" class="form-control form-control-sm Form_Elem" readonly/>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="SalsPackingUOM">Sales Packaging UOM</label>
                                        <input name="SalsPackingUOMDisplay" id="SalsPackingUOMDisplay" type="text" placeholder="Sales Packaging UOM" class="form-control form-control-sm Form_Elem" readonly />
                                        <input name="SalsPackingUOM" id="SalsPackingUOM" type="hidden" />
                                    </div>


                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="SalsQtyPerPack">Qty Per Package</label>
                                        <input name="SalsQtyPerPack" id="SalsQtyPerPack" type="number" placeholder="Qty Per Pack" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="SalsLength">Length</label>
                                        <input oninput="MaxLengthInp(this,5)" name="SalsLength" id="SalsLength" type="number" placeholder="Length" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="Salswidth">width</label>
                                        <input oninput="MaxLengthInp(this,5)" name="Salswidth" id="Salswidth" type="number" placeholder="width" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="SalsHeight">Height</label>
                                        <input oninput="MaxLengthInp(this,5)" name="SalsHeight" id="SalsHeight" type="number" placeholder="Height" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3  mt-1 mb-1 ">
                                        <label for="SalsVolume">Volume</label>
                                        <div class="row ">
                                            <div class="col-md-8  pr-0 text-right">
                                                <input oninput="MaxLengthInp(this,5)" name="SalsVolume" id="SalsVolume" type="number" placeholder="Volume" class="form-control w-100 form-control-sm Form_Elem" />
                                            </div>
                                            <div class="col-md-4 pl-0 text-left">
                                                <select id="SalsVUomId" name="SalsVUomId" class="form-control UOMCODE form-control-sm w-25  Form_Elem">
                                                    <option value="">UOM</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="SalsWeight">Weight</label>
                                        <input oninput="MaxLengthInp(this,5)" name="SalsWeight" id="SalsWeight" type="number" placeholder="Weight" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane p-3 m-0 mt-2" id="InventoryData" role="tabpanel">
                                <div class="row  p-3  mt-2 border">
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ItemInvntMthd">Inventory Method By</label>
                                        <select id="ItemInvntMthd" name="ItemInvntMthd" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Item Method</option>
                                            <option value="Warehouse">Warehouse</option>
                                            <option value="ItemGroup">Item Group</option>
                                            <option value="ItemLavel">Item Lavel</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="InvntUOM">Inventory UOM</label>
                                        <select id="InvntUOM" name="InvntUOM" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select UOM</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ReordrQty">Requier (Purchasing UOM)</label>
                                        <input readonly name="ReordrQty" id="ReordrQty" type="number" placeholder="Requier (Purchasing UOM)" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="MinimumLvl">Minimum</label>
                                        <input readonly name="MinimumLvl" id="MinimumLvl" type="number" placeholder="Minimum" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ValueMthd">Valuation Method</label>
                                        <select id="ValueMthd" name="ValueMthd" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Valuation Method</option>
                                            <option value="S">STANDERD</option>
                                            <option value="F">FIFO</option>
                                            <option value="M">MOVING AVERAGE</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6 mt-1 mb-1"></div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="MaximumLvl">Maximum</label>
                                        <input readonly name="MaximumLvl" id="MaximumLvl" type="number" placeholder="Maximum" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="table-responsive mt-4">
                                        <table class=" display nowrap table border table-bordered table-striped   table-hover table-bordered w-100" id="InventoryTable">
                                            <thead>
                                                <tr>
                                                    <th class="p-2">Sr.No</th>
                                                    <th class="p-2">Whs Code</th>
                                                    <th class="p-2">Whs Name</th>
                                                    <th class="p-2">Branch</th>
                                                    <th class=" p-2 text-center">Locked</th>
                                                    <th class=" p-2 text-right">In Stock</th>
                                                    <th class=" p-2 text-right">Committed</th>
                                                    <th class=" p-2 text-right">Ordered</th>
                                                    <th class=" p-2 text-right">Availible</th>
                                                    <th class=" p-2 text-right">Min.Inventory</th>
                                                    <th class=" p-2 text-right">Max.Inventory</th>
                                                    <th class=" p-2 text-right">Req.Inv.Level</th>
                                                    <th class=" p-2 text-right">Item Cost</th>
                                                    <th class=" p-2 d-none">WhsId</th>
                                                    <th class=" p-2 d-none">InvtDetId</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>

                                </div>
                            </div>
                            <div class="tab-pane p-3 m-0 mt-2" id="PlanningData" role="tabpanel">
                                <div class="row  p-3  mt-2 border">
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="PlanMthd">Planning Method</label>
                                        <select id="PlanMthd" name="PlanMthd" class="form-control form-control-sm  Form_Elem">
                                            <option value="N">None</option>
                                            <option value="M">MRP</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="ProcMthd">Procurement Method</label>
                                        <select id="ProcMthd" name="ProcMthd" class="form-control form-control-sm  Form_Elem">
                                            <option value="B">Buy</option>
                                            <option value="M">Make</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="MinOrdrQty">Min Order Qty</label>
                                        <input oninput="MaxLengthInp(this,10)" name="MinOrdrQty" id="MinOrdrQty" type="number" placeholder="Min Order Qty" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="LeadTime">Lead Time</label>
                                        <input name="LeadTime" id="LeadTime" type="number" placeholder="Lead Time" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1">
                                        <label for="TolrDays">Tolerance Days</label>
                                        <input name="TolrDays" id="TolrDays" type="number" placeholder="Tolerance Days" class="form-control form-control-sm Form_Elem" />
                                    </div>

                                </div>
                            </div>
                            <div class="tab-pane p-3 m-0 mt-2" id="ProductionData" role="tabpanel">
                                <div class="row  p-3  mt-2 border">
                                    <div class="col-md-4  mt-1 mb-1">
                                        <label class="" for="ItemPhantom">Item Phantom </label>
                                        <br />
                                        <label class="switch">
                                            <input type="checkbox" value="N" name="ItemPhantom" id="ItemPhantom" class="toggleSwitch form-control ml-2 form-control-sm">
                                            <span class="slider"></span>
                                        </label>
                                    </div>
                                    <div class="col-md-4 mt-1  mb-1">
                                        <label for="IssueMthd">Issue Method</label>
                                        <select id="IssueMthd" name="IssueMthd" class="form-control form-control-sm  Form_Elem">
                                            <option value="">Select Issue Method</option>
                                            <option value="B">Backflush</option>
                                            <option value="M">Manual</option>
                                        </select>
                                    </div>
                                    <div class="col-md-4 mt-1 mb-1">
                                        <label for="ProdStdCost">Production Std Cost</label>
                                        <input name="ProdStdCost" id="ProdStdCost" type="number" placeholder="Production Std Cost" class="form-control form-control-sm Form_Elem" />
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane p-3 m-0 mt-2" id="Attachment" role="tabpanel">
                                <div class="row  p-3  mt-2 border">
                                    <div class="col-md-12 text-right table-responsive mt-3">
                                        <button type="button" disabled id="Addrow" class="btn btn-primary btn-sm mb-2">Add New Row</button>
                                    </div>
                                    <div class="col-md-12  table-responsive mt-3" style="height:300px!important;">
                                        <table class="table border  table-striped   table-hover table-bordered w-100" id="AttachmentTable">
                                            <thead>
                                                <tr>
                                                    <th class='text-center p-2' nowrap>Sr.No</th>
                                                    <th class='p-2' nowrap>Add/Update</th>
                                                    <th class='p-2' nowrap>Remark</th>
                                                    <th class='p-2' nowrap>File Name</th>
                                                    <th class='p-2' nowrap>File Extention</th>
                                                    <th nowrap class="p-2 d-none">File Data</th>
                                                    <th nowrap class="p-2 d-none">Attachment Id</th>
                                                    <th nowrap class="p-2 d-none">Flag</th>
                                                    <th class='text-center p-2' owrap>View</th>
                                                    <th class='text-center p-2' nowrap>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane p-3 w-100" id="AllItems" role="tabpanel">
                                <div class="row p-3  mt-2 border">
                                    <div class="table-responsive">
                                        <table class="table border  table-striped   table-hover table-bordered w-100" id="Table">
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="CreatedBy">Created By</label>
                                <input name="CreatedBy" id="CreatedBy" readonly type="text" value="@UserName" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="UpdatedBy">Updated By</label>
                                <input name="UpdatedBy" id="UpdatedBy" readonly type="text" value="@UserName" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="CreateDate">Create Date</label>
                                <input name="CreateDate" id="CreateDate" readonly type="text" value="@formattedDate" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                            <div class="col-md-4 mt-1 mb-1 d-none">
                                <label for="UpdateDate">Update Date</label>
                                <input name="UpdateDate" id="UpdateDate" readonly type="text" value="@formattedDate" placeholder="Created by" class="form-control form-control-sm Form_Elem" />
                            </div>
                        </div>
                        <div class="col-md-12 mt-3">
                            <button type="button" id="Form_Delete_btn" style="display:none; width:80px;" class="btn ml-1 mr-1 btn-sm btn-danger">Delete</button>
                            <button type="button" id="Form_Update_btn" style="display:none; width:80px;" class="btn ml-1 mr-1 btn-sm text-white btn-info">Update</button>
                            <button type="button" id="Form_Save_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-success">Save</button>
                            <button type="reset" id="Form_reset_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-dark">Reset</button>
                        </div>
                    </div>
                </div>
            </form>
            <!-- Row end -->
        </div>
    </div>
</div>
<!-- modals -->
<div class="modal" id="BarcodeModal">
    <div class="modal-content">
        <div class="card-header bg-white border-0 p-1">
            <div class="row">
                <div class="col-6">
                    <h4>Item Barcode</h4>
                </div>
                <div class="col-6 text-right  ">
                    <span class="close closeModal" id="">&times;</span>
                </div>
            </div>
        </div>
        <div class="card-body border">
            <div class="row mb-3 mt-1">
                <div class="col-md-3">
                    <label>Item Code</label>
                    <input class="form-control form-control-sm" readonly id="BarItemCode" name="BarItemCode" />
                </div>
                <div class="col-md-3">
                    <label>Item Description</label>
                    <input class="form-control form-control-sm" readonly id="BarItemCodeDescription" name="BarItemCodeDescription" />
                </div>
                <div class="col-md-3">
                    <label>UOM Group</label>
                    <input class="form-control form-control-sm" readonly id="UOMGRP" name="UOMGRP" />
                </div>
                <div class="col-md-3 mt-1  mb-1"></div>
                <div class="col-md-3 mt-1  mb-1">
                    <label for="BarUOM">Unit Of Measurement</label>
                    <select id="BarUOM" name="BarUOM" class="form-control form-control-sm  Form_Elem">
                        <option value="">Select UOM</option>
                    </select>
                </div>
                <div class="col-md-6 mt-1  mb-1"></div>
                <div class="col-md-3 mt-1 p-2 text-right mb-1">
                    <button type="button" id="AddRowBarcode" class="btn btn-sm btn-primary mt-3 btn-sm mr-3">Add New Row</button>
                </div>
            </div>
            <div class="table-responsive" style="height:500px;">
                <table class="table border  table-striped   table-hover table-bordered w-100" id="Barcodetbl">
                    <thead>
                        <tr>
                            <th class='p-2' nowrap>Sr.No</th>
                            <th class='p-2' nowrap>Action</th>
                            <th class='p-2' nowrap>Set Default</th>
                            <th class='p-2' nowrap>Active</th>
                            <th class='p-2' nowrap>PreFix</th>
                            <th class='p-2' nowrap>Code</th>
                            <th class='p-2' nowrap>EAN Type</th>
                            <th class='p-2' nowrap>Barcode</th>
                            <th class='p-2' nowrap>Free Text</th>
                            <th class='p-2 d-none' nowrap>BarCodeDetId</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="row mb-3">
                <div class="col-md-12">
                    <button type="button" id="Barcode_Save_btn" style=" width:80px;" class="btn ml-1 mr-1 btn-sm btn-success">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="DocumentViewer">
    <div class="modal-content" style="height: 90vh; margin-top: 5vh;">
        <div class="card-header bg-white border-0">
            <a class="downloadLink " style="display: none;"><button type="button" class="btn  btn-primary p-1">Download Document</button> </a>
            <span class="close closeModal" id="">&times;</span>
        </div>
        <div class="card-body viewerbody border p-2 text-center" style="overflow-y:scroll!important;overflow-x:scroll">
            <div class="table-responsive pdfdocument-viewer w-100">
            </div>
            <div class=" image-container document-viewer document-viewer"></div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

        // UOM Change Events
        {
            $('#PurUOM').change(function () {
                var selectedValue = $(this).val(); 
                var selectedText = $('#PurUOM option:selected').text(); 
                var uomGroupId = $('#UomGrpId').val(); 

                if (selectedValue && uomGroupId) {
                    $('#PurPackingUOM').val(selectedValue);
                    $('#PurPackingUOMDisplay').val(selectedText);

                    $.ajax({
                        url: '@Url.Action("GETQTY", "ItemMaster")',
                        type: 'GET',
                        data: {
                            UOMID: selectedValue,
                            UOMGRPID: uomGroupId
                        },
                        success: function (response) {
                            if (response.length > 0) {
                                var baseQty = response[0].BaseQty;
                                $('#ItemPerPurUnit').val(baseQty);
                            }
                        },
                        error: function (error) {
                            console.error('Error fetching data:', error);
                        }
                    });
                } else {
                    $('#PurPackingUOM').val(''); 
                    $('#PurPackingUOMDisplay').val('');
                    $('#ItemPerPurUnit').val('');
                }
            });

            $('#SalsUOM').change(function () {
                var selectedValue = $(this).val(); 
                var selectedText = $('#SalsUOM option:selected').text(); 
                var uomGroupId = $('#UomGrpId').val(); 
                if (selectedValue && uomGroupId) {
                    $('#SalsPackingUOM').val(selectedValue); 
                    $('#SalsPackingUOMDisplay').val(selectedText); 
                    $.ajax({
                        url: '@Url.Action("GETQTY", "ItemMaster")',
                        type: 'GET',
                        data: {
                            UOMID: selectedValue,
                            UOMGRPID: uomGroupId
                        },
                        success: function (response) {
                            if (response.length > 0) {
                                var baseQty = response[0].BaseQty;
                                $('#ItemPerSalsUnit').val(baseQty);
                            }
                        },
                        error: function (error) {
                            console.error('Error fetching data:', error);
                        }
                    });
                } else {
                    $('#SalsPackingUOM').val(''); // Clear hidden input value
                    $('#SalsPackingUOMDisplay').val(''); // Clear displayed text
                    $('#ItemPerSalsUnit').val('');
                }
            });
        }


       
        function Loader() {
            $(".Loader1").toggleClass('d-none');
        }
        // import excel
        {
            $("#XLS").click(function (event) {
                event.preventDefault(); // Prevent the default behavior
                var table = $("#Table")[0];
                if (!table) {
                    console.error("Table not found");
                    return;
                }
                var columnsToExport = [
                    { index: 0, name: 'Sr No' },
                    { index: 3, name: 'ItemId' },
                    { index: 4, name: 'Item Code' },
                    { index: 5, name: 'Item Name' },
                    { index: 7, name: 'Type' },
                    { index: 8, name: 'Item Group Name' },
                    { index: 10, name: 'Uom Group Name' },
                    { index: 12, name: 'Unit Price' },
                    { index: 13, name: 'Currency Code' },
                    { index: 15, name: 'Prise List Name' },
                    { index: 18, name: 'Bar Code' },
                    { index: 19, name: 'Item Invnt' },
                    { index: 20, name: 'Item Sale' },
                    { index: 21, name: 'Item Purchase' },
                    { index: 22, name: 'Item Fix Asset' },
                    { index: 27, name: 'Remarks' }
                ];
                var filteredData = [];
                var columnNamesRow = [];
                columnsToExport.forEach(function (column) {
                    columnNamesRow.push(column.name);
                });
                filteredData.push(columnNamesRow);
                $(table).find('tbody tr').each(function (rowIndex, row) {
                    var rowData = [];
                    $(row).find('td').each(function (cellIndex, cell) {
                        columnsToExport.forEach(function (column) {
                            if (cellIndex === column.index) {
                                rowData.push(cell.textContent);
                            }
                        });
                    });
                    filteredData.push(rowData);
                });
                var ws = XLSX.utils.aoa_to_sheet(filteredData);
                var wb = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(wb, ws, "Sheet JS");
                XLSX.writeFile(wb, 'Project-Config.xlsx');
            });
        }
        var mandatoryfields = [];
        $.ajax({
            url: '@Url.Action("GETMINOTARY1", "ItemMaster")',
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                if (response.length > 0) {
                    for (var i = 0; i < response.length; i++) {
                        mandatoryfields.push(response[i].FieldName)
                    }
                }
            },
            error: function (error) {
                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                console.error('Error:', error.responseText);
            }
        });
        //Barcode Region
        {
            // Open modal
            $(".OpBarcode").click(function () {

                $("#BarItemCode").val($("#ItemCode").val())
                $("#BarItemCodeDescription").val($("#ItemName").val())
                $("#BarItemCodeDescription").val($("#ItemName").val())
                $("#UOMGRP").val($("#UomGrpId option:selected").text())
                var GroupId = $("#UomGrpId").val()
                //BarCode UOM
                $.ajax({
                    url: '@Url.Action("BARCODEUOM", "ItemMaster")',
                    type: 'GET',
                    data: { GroupId: GroupId },
                    dataType: 'json',
                    success: function (response) {
                        if (response.length > 0) {
                            let list = "<option value=''>Select UOM </option>";
                            for (var i = 0; i < response.length; i++) {
                                list += "<option value='" + response[i].BaseUomID + "'>" + response[i].BaseUomName + "</option>";
                            }
                            $("#BarUOM").html(list);
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
                $("#BarcodeModal").fadeIn();
            });
            $("#AddRowBarcode").click(function () {
                var Index = $("#Barcodetbl tbody tr").length;
                var list = "<tr>";
                list += "<td>" + parseInt(Index + 1) + "</td>"; // Add the index to the first column
                list += '<td class="p-1"nowrap><i class="fa fa-trash text-danger mt-2  Barcode_table_delete"></td>';
                list += '<td class="p-1"nowrap><button style="height:30px;" class="btn btn-sm SetDefault btn-primary">Set Default</button></td>';
                list += `<td class='pt-2'><label class="tblswitch">
                                                                                                <input type="checkbox"  value="Y"checked name="InvetoryLock" class="tbltoggleSwitch form-control  mt-3 form-control-sm ">
                                                                                        <span class="tblslider"></span>
                                                                                        </label></td>`;
                list += `<td class='p-1 BarCodePrefix' nowrap><input  style='height: 30px;' name="BarCodePrefix" id="BarCodePrefix" type="text" placeholder="BarCode Prefix" class="form-control form-control-sm Form_Elem" /></td>`;
                list += `<td class='p-1 IncrementCount' nowrap><input  style='height: 30px;' name="IncrementCount" id="IncrementCount" type="number" placeholder="Code" class="form-control form-control-sm Form_Elem" /></td>`;
                list += `<td class='p-1 EANType' nowrap><select style='height: 34px!important;' name="EANType" id="EANType" type="text" class="form-control  form-control-sm Form_Elem">
                                                    <option value="12">EAN 12</option>
                                                    <option value="13">EAN 13</option>
                                                </select></td>`;
                list += `<td class='p-1 TblBarCode' nowrap><input style='height: 30px;' name="TblBarCode" id="TblBarCode" readonly type="text" placeholder="BarCode " class="form-control form-control-sm Form_Elem" /></td>`;
                list += "<td class='p-1 align-items-center Remark' nowrap><textarea style='height:30px;' class='form-control form-control-sm'></textarea></td>";
                list += "<td class='p-1 d-none align-items-center  BarCodeDetId' nowrap></td>";
                list += "</tr>";
                $("#Barcodetbl tbody").append(list);
            });
            //Get Barcode Data
            $("#BarUOM").change(function () {
                GetBarcodeData();
            })
            //Row BarcodeGenrate
            $(document).on("input", "#BarCodePrefix, #IncrementCount, #EANType", function () {
                var closet = $(this).closest("tr");
                var BarCodePrefix = closet.find('td #BarCodePrefix').val();
                var IncrementCount = closet.find('td #IncrementCount').val();
                var EANType = closet.find('td #EANType').val();
                var barcode = CreateBarcode(BarCodePrefix, IncrementCount, EANType);
                closet.find('td #TblBarCode').val(barcode);
            });
            $(document).on("click", ".Barcode_table_delete", function () {
                var closet = $(this).closest("tr");
                var BarCodeDetId = closet.find('.BarCodeDetId').text();
                DeleteBarcode(BarCodeDetId)
            });
            $(document).on("click", ".SetDefault", function () {
                var closet = $(this).closest("tr");
                var BarCodeDetId = closet.find('.BarCodeDetId').text();
                var BarCode = closet.find('td #TblBarCode').val();
                var option = "<option value=''>Select Barcode</option><option selected value=" + BarCodeDetId + ">" + BarCode + "</option>";
                $("#BarCodeId").html(option);
                $("#BarcodeModal").hide();
            });

            function CreateBarcode(BarCodePrefix, IncrementCount, EANType1) {
                const EANType = parseInt(EANType1);
                let Barcode = "";
                let BarCodePrefixlength = BarCodePrefix.length;
                let IncrementCountlength = IncrementCount.length;
                Barcode += BarCodePrefix;
                var Val1 = EANType - BarCodePrefixlength - IncrementCountlength;
                for (i = 0; i < Val1; i++) {
                    Barcode += "0";
                }
                Barcode += IncrementCount;
                if (Barcode.length == EANType) {
                    return Barcode;
                } else {
                    notify("PLese Check Out Your Prifix Values Or Initial Count ", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    return false;
                }
            }

            $("#Barcode_Save_btn").click(function () {
                AddBarcodedt("#Barcodetbl");
            })
        }
        {
            LoadInventorytbl();

            function LoadInventorytbl() {
                var ItemId = $("#ItemId").val();
                $.ajax({
                    url: '@Url.Action("INVENTORYTBL", "ItemMaster")',
                    type: 'GET',
                    dataType: 'json',
                    data: { ItemId: ItemId },
                    success: function (response) {
                        $("#InventoryTable tbody").html(""); // Clear existing tbody content
                        var index = 1;
                        var TotalInstock = 0.00;
                        var TotalAvailable = 0.00;

                        if (response.length > 0) {
                            $.each(response, function (i, item) {
                                var list = "";
                                list += "<tr>";
                                list += "<td class='text-center'>" + index + "</td>";
                                list += "<td>" + item.WhsCode + "</td>";
                                list += "<td>" + item.WhsName + "</td>";
                                list += "<td>" + item.BrchName + "</td>";
                                list += "<td class='text-center p-1'><label style='margin:0px!important; padding:0px!important;' class='tblswitch p-0 m-0'>";
                                if (item.WhsLocked == "N") {
                                    list += "<input type='checkbox' value='N' name='InvetoryLock' class='tbltoggleSwitch form-control form-control-sm'>";
                                } else {
                                    list += "<input type='checkbox' value='Y' checked name='InvetoryLock' class='tbltoggleSwitch form-control form-control-sm'>";
                                }
                                list += "<span class='tblslider'></span>";
                                list += "</label></td>";
                                TotalInstock += parseFloat(item.InStock) || 0.00;
                                TotalAvailable += parseFloat(item.Available) || 0.00;
                                list += "<td class='text-right'>" + parseFloat(item.InStock || 0).toFixed(2) + "</td>";
                                list += "<td class='text-right'>" + parseFloat(item.Committed || 0).toFixed(2) + "</td>";
                                list += "<td class='text-right'>" + parseFloat(item.Ordered || 0).toFixed(2) + "</td>";
                                list += "<td class='text-right'>" + parseFloat(item.Available || 0).toFixed(2) + "</td>";
                                list += "<td class='mininv'><input type='number' value='" + parseFloat(item.MinStock || 0).toFixed(2) + "' placeholder='Min Inv' class='form-control h-100 calcInp form-control-sm text-right'></td>";
                                list += "<td class='maxinv'><input type='number' value='" + parseFloat(item.MaxStock || 0).toFixed(2) + "' placeholder='Max Inv' class='form-control h-100 calcInp form-control-sm text-right'></td>";
                                list += "<td class='reqinv'><input type='number' value='" + parseFloat(item.MinOrder || 0).toFixed(2) + "' placeholder='Req.Inv' class='form-control h-100 calcInp form-control-sm text-right'></td>";
                                list += "<td class='text-right'>" + parseFloat(item.ItemCost || 0).toFixed(2) + "</td>";
                                list += "<td class='WhsId d-none'>" + item.WhsId + "</td>";
                                list += "<td class='InvtDetId d-none'>" + item.InvtDetId + "</td>";
                                list += "</tr>";
                                $("#InventoryTable tbody").append(list);
                                index++;
                            });

                            var footer = "<tr>";
                            footer += "<th colspan='4'></th>";
                            footer += "<th><b>Total In Stock :</b></th>";
                            footer += "<th class='text-right'><b>" + TotalInstock.toFixed(2) + "</b></th>";
                            footer += "<th colspan='1'></th>";
                            footer += "<th><b>Total Available</b></th>";
                            footer += "<th class='text-right'><b>" + TotalAvailable.toFixed(2) + "</b></th>";
                            footer += "<th colspan='5'></th>";
                            footer += "</tr>";

                            $("#InventoryTable tbody").append(footer);
                        } else {
                            // Handle case where response is empty
                            $("#InventoryTable tbody").html("<tr><td colspan='13' class='text-center'>No data available</td></tr>");
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
        }
    // Inventory table
    {
        $(document).ready(function () {
            LoadInventorytbl();

            function LoadInventorytbl() {
                var ItemId = $("#ItemId").val();
                $.ajax({
                    url: '@Url.Action("INVENTORYTBL", "ItemMaster")',
                    type: 'GET',
                    dataType: 'json',
                    data: { ItemId: ItemId },
                    success: function (response) {
                        let list = "";
                        if (response.length > 0) {
                            $("#InventoryTable tbody").html("");
                            var index = 1;
                            var TotalInstock = 0.00;
                            var TotalAvilable = 0.00;
                            for (var i = 0; i < response.length; i++) {
                                list = "";
                                list += "<tr>";
                                list += "<td class='text-center'>" + index + "</td>";
                                list += "<td>" + response[i].WhsCode + "</td>";
                                list += "<td>" + response[i].WhsName + "</td>";
                                list += "<td>" + response[i].BrchName + "</td>";
                                if (response[i].WhsLocked == "N") {
                                    list += `<td class='text-center p-1'><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                            <input type="checkbox" value="N" name="InvetoryLock" class="tbltoggleSwitch form-control form-control-sm ">
                            <span class="tblslider"></span>
                            </label></td>`;
                                } else {
                                    list += `<td class='text-center p-1'><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                            <input type="checkbox" value="Y" checked name="InvetoryLock" class="tbltoggleSwitch form-control form-control-sm ">
                            <span class="tblslider"></span>
                            </label></td>`;
                                }

                                TotalInstock += parseFloat(response[i].InStock) || 0.00;
                                TotalAvilable += parseFloat(response[i].Available) || 0.00;
                                list += "<td>" + parseFloat(response[i].InStock || 0).toFixed(2) + "</td>";
                                list += "<td>" + parseFloat(response[i].Committed || 0).toFixed(2) + "</td>";
                                list += "<td>" + parseFloat(response[i].Ordered || 0).toFixed(2) + "</td>";
                                list += "<td>" + parseFloat(response[i].Available || 0).toFixed(2) + "</td>";
                                list += "<td class='mininv'><input type='number' value='" + parseFloat(response[i].MinStock).toFixed(2) + "' placeholder='Min Inv' class='form-control h-100 calcInp form-control-sm text-right'></td>";
                                list += "<td class='maxinv'><input type='number' value='" + parseFloat(response[i].MaxStock).toFixed(2) + "' placeholder='Max Inv' class='form-control h-100 calcInp form-control-sm text-right'></td>";
                                list += "<td class='reqinv'><input type='number' value='" + parseFloat(response[i].MinOrder).toFixed(2) + "' placeholder='Req.Inv' class='form-control h-100 calcInp form-control-sm text-right'></td>";
                                list += "<td>" + parseFloat(response[i].ItemCost).toFixed(2) + "</td>";
                                list += "<td class='WhsId d-none'>" + response[i].WhsId + "</td>";
                                list += "<td class='WhsId d-none'>" + response[i].InvtDetId + "</td>";
                                list += "</tr>";
                                $("#InventoryTable tbody").append(list);
                                index++;
                            }
                            var footer = "";
                            footer += "<tr>";
                            footer += "<th colspan='4'></th>";
                            footer += "<th><b>Total In Stock :</b></td>";
                            footer += "<th class='text-right'><b>" + TotalInstock.toFixed(2) + "</th>"; // Ensure toFixed() for total calculations
                            footer += "<th colspan='1'></th>";
                            footer += "<th><b>Total Available</b></th>";
                            footer += "<th class='text-right'><b>" + TotalAvilable.toFixed(2) + "</b></th>"; // Ensure toFixed() for total calculations
                            footer += "<th colspan='5'></th>";
                            footer += "</tr>";
                            $("#InventoryTable tbody").append(footer);
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }

            $(document).on('input', '.reqinv input', function () {
                let reqStock = parseFloat($(this).val()) || 0;
                let minStock = parseFloat($(this).closest('tr').find('.mininv input').val()) || 0;
                let maxStock = parseFloat($(this).closest('tr').find('.maxinv input').val()) || 0;

                if (reqStock < minStock || reqStock > maxStock) {
                    Swal.fire("Invalid Data!", "Req Stock should be greater than or equal to Min Stock and less than or equal to Max Stock.", "warning");
                    $(this).val(minStock.toFixed(2)); // Set reqStock to minStock if invalid
                }

                updateTotals();
            });

            function updateTotals() {
                let Mininv = 0.00;
                let Maxinv = 0.00;
                let Reqinv = 0.00;

                $("#InventoryTable tbody tr").each(function () {
                    let minStock = parseFloat($(this).find('.mininv input').val()) || 0;
                    let maxStock = parseFloat($(this).find('.maxinv input').val()) || 0;
                    let reqStock = parseFloat($(this).find('.reqinv input').val()) || 0;

                    Mininv += minStock;
                    Maxinv += maxStock;
                    Reqinv += reqStock;
                });

                $("#ReordrQty").val(Reqinv.toFixed(2));
                $("#MinimumLvl").val(Mininv.toFixed(2));
                $("#MaximumLvl").val(Maxinv.toFixed(2));
            }
        });
    }

        //Get Dropdown
        {
            //Item Grp
            $.ajax({
                url: '@Url.Action("ITEMGROUP", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Item Group</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].ItemGrpId + "'>" + response[i].ItemGrpname + "</option>";
                        }
                        $("#ItemGrpId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //COUNTRY ID
            $.ajax({
                url: '@Url.Action("COUNTRY", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Currency Code</option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].CntryId + "'>" + response[i].CntryCurrCode + " " + response[i].CntryCurrSymbol + "</option>";
                        }
                        $("#CntryId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });

            //UOM GROUP CHANGE
             $(document).on("change","#UomGrpId",function(){
                var value = $("#UomGrpId").val();
                $.ajax({
                    url: '@Url.Action("UOMGROUPCODES", "GetDropdownData")',
                    data: { "UomID": value },
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        
                        if (response.length > 0) {
                            let list = "<option value=''>Select UOM </option>";
                            for (var i = 0; i < response.length; i++) {
                                list += "<option value='" + response[i].UomId + "'>" + response[i].UomCode + "</option>";
                            }
                            $("#PurUOM").html(list);
                            $("#SalsUOM").html(list);
                            $("#InvntUOM").html(list);
                            let list1 = "<option value=''>UOM</option>";
                            for (var i = 0; i < response.length; i++) {
                                list1 += "<option value='" + response[i].UomId + "'>" + response[i].UomCode + "</option>";
                            }
                            $(".UOMCODE").html(list1);
                            return true;
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
             })
            function LoadUomCode(Data) {
                var value = $("#UomGrpId").val();
                $.ajax({
                    url: '@Url.Action("UOMGROUPCODES", "GetDropdownData")',
                    data: { "UomID": value },
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        if (response.length > 0) {
                            let list = "<option value=''>Select UOM</option>";
                            for (var i = 0; i < response.length; i++) {
                                list += "<option value='" + response[i].UomId + "'>" + response[i].UomCode + "</option>";
                            }
                            $("#PurUOM").html(list);
                            $("#SalsUOM").html(list);
                            $("#InvntUOM").html(list);

                            let list1 = "<option value=''>UOM</option>";
                            for (var i = 0; i < response.length; i++) {
                                list1 += "<option value='" + response[i].UomId + "'>" + response[i].UomCode + "</option>";
                            }
                            $(".UOMCODE").html(list1);

                            $.each(Data, function (key, value) {
                                switch (key) {
                                    case "PurPackingUOM":
                                        $("#PurPackingUOM").val(value).trigger("change");
                                        break;
                                    case "PurUOM":
                                        $("#PurUOM").val(value).trigger("change");
                                        break;
                                    case "PurVUomId":
                                        $("#PurVUomId").val(value).trigger("change");
                                        break;
                                    case "SalsUOM":
                                        $("#SalsUOM").val(value).trigger("change");
                                        break;
                                    case "SalsPackingUOM":
                                        $("#SalsPackingUOM").val(value).trigger("change");
                                        break;   
                                    case "SalsVUomId":
                                        $("#SalsVUomId").val(value).trigger("change");
                                        break;
                                    case "InvntUOM":
                                        $("#InvntUOM").val(value).trigger("change");
                                        break;
                                    default:
                                        break;
                                }
                            });
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }

            //UOM CODE
            $.ajax({
                url: '@Url.Action("UOMCODE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select UOM </option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].UomId + "'>" + response[i].UomCode + "</option>";
                        }
                       
                        $("#PurUOM").html(list);
                        $("#SalsUOM").html(list);
                       
                        $("#InvntUOM").html(list);
                        let list1 = "<option value=''>UOM</option>";
                        for (var i = 0; i < response.length; i++) {
                            list1 += "<option value='" + response[i].UomId + "'>" + response[i].UomCode + "</option>";
                        }
                        $(".UOMCODE").html(list1);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //UOM GROUP
            $.ajax({
                url: '@Url.Action("UOMGROUP", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select UOM Group </option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].UomGRPId + "'>" + response[i].UomGRPName + "</option>";
                        }
                        $("#UomGrpId").html(list);
                        $("#UomGrpId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //Price List
            $.ajax({
                url: '@Url.Action("PRICELIST", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Price List </option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].PListId + "'>" + response[i].PListName + "</option>";
                        }
                        $("#PListId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //Manufacturer
            $.ajax({
                url: '@Url.Action("MANUFACTURER", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {

                    if (response.length > 0) {
                        let list = "<option value=''>Select Manufacturer </option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].ManuftId + "'>" + response[i].ManuftCode + "-" + response[i].ManuftName + "</option>";
                        }
                        $("#ManufId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //Shiping Type
            $.ajax({
                url: '@Url.Action("SHIPINGTYPE", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Shiping Type </option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].ShipTypeId + "'>" + response[i].ShipTypeName + "</option>";
                        }
                        $("#ShipTypeId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
            //Venders
            $.ajax({
                url: '@Url.Action("VENDOR", "GetDropdownData")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.length > 0) {
                        let list = "<option value=''>Select Vendor </option>";
                        for (var i = 0; i < response.length; i++) {
                            list += "<option value='" + response[i].BPId + "'>" + response[i].BPCode + "-" + response[i].BPName + "</option>";
                        }
                        $("#BPId").html(list);
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                    console.error('Error:', error.responseText);
                }
            });
        }
        // Item Switch Cange
        {
            $("#ItemExcisable").change(function () {
                $("#ItemGST").prop("checked", false); // Use prop to uncheck the checkbox
                $("#ItemGST").val("N");

                if ($(this).val() === "Y") {
                    $(".Checkhidden").show();
                    $(".HSNLABEL").text("Chapter Id");
                    $("#HSNNo").attr("placeholder", "Chapter Id");
                    $(".Taxhidden").hide();
                } else {
                    $(".Checkhidden").hide();
                    $(".HSNLABEL").text("HSN No");
                    $("#HSNNo").attr("placeholder", "HSN No");
                }
            });

            $("#ItemGST").change(function () {
                $("#ItemExcisable").removeAttr("checked", "checked");
                $("#ItemExcisable").prop("checked", false);
                $("#ItemExcisable").val("N");
                if ($(this).val() == "Y") {
                    $(".Checkhidden").show();
                    $(".Taxhidden").show();
                    $(".HSNLABEL").text("HSN No");
                    $("#HSNNo").attr("placeholder", "HSN No");
                }
                else {
                    $(".Checkhidden").hide();
                    $(".Taxhidden").hide();

                }
            })
            $("#ItemInvnt").change(function () {
                if ($(this).is(":checked")) {
                    $(this).val("Y");
                } else {
                    $(this).val("N");
                }
            });
            $("#ItemSale").change(function () {
                if ($(this).is(":checked")) {
                    $(this).val("Y");
                } else {
                    $(this).val("N");
                }
            });

            $("#ItemPur").change(function () {
                if ($(this).is(":checked")) {
                    $(this).val("Y");
                } else {
                    $(this).val("N");
                }
            });
            $("#ItemFixAsset").change(function () {
                if ($(this).is(":checked")) {
                    $(this).val("Y");
                } else {
                    $(this).val("N");
                }
            });
        }
        // Region Add
        {
            $("#Form_Save_btn").click(function () {
                let isValid = true;
                let formData = {};
                let mandatoryFields = ["ItemCode", "ItemName", "ItemType", "ItemGrpId", "UomGrpId", "CntryId", "UnitPrice", "PListId"];

                // Validate Header Form Fields
                $("#Header_Form input, select, textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";

                    if ($(this).is('textarea')) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }

                    var inputElement = $(this);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();

                    if (mandatoryFields.includes(inputName) && inputValue.trim() === "") {
                        if (inputElement.is('select') || inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.addClass("border-danger");
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        return false;
                    } else {
                        if (inputElement.is('select') || inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.removeClass("border-danger");
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }

                    if (inputName !== undefined && inputName !== "" && inputName !== null) {
                        formData[inputName] = inputValue;
                    }
                });

                // Validate Inventory Table Fields
                $("#InventoryTable tbody tr").each(function () {
                    let minInput = $(this).find('.mininv input');
                    let maxInput = $(this).find('.maxinv input');
                    let reqInput = $(this).find('.reqinv input');

                    let minValue = parseFloat(minInput.val());
                    let maxValue = parseFloat(maxInput.val());
                    let reqValue = parseFloat(reqInput.val());

                    if (minInput.val() === "" || minValue < 0 || maxInput.val() === "" || maxValue < 0 || reqInput.val() === "" || reqValue < 0) {
                        isValid = false;

                        // Highlight empty or negative value fields
                        if (minInput.val() === "" || minValue < 0) {
                            minInput.addClass("border-danger");
                        } else {
                            minInput.removeClass("border-danger");
                        }
                        if (maxInput.val() === "" || maxValue < 0) {
                            maxInput.addClass("border-danger");
                        } else {
                            maxInput.removeClass("border-danger");
                        }
                        if (reqInput.val() === "" || reqValue < 0) {
                            reqInput.addClass("border-danger");
                        } else {
                            reqInput.removeClass("border-danger");
                        }
                    } else {
                        // Remove border-danger class if valid
                        minInput.removeClass("border-danger");
                        maxInput.removeClass("border-danger");
                        reqInput.removeClass("border-danger");
                    }
                });

                // Call API
                if (isValid && Object.keys(formData).length > 0) {
                    $.ajax({
                        url: '@Url.Action("POSTDATA", "ItemMaster")',
                        type: 'POST',
                        dataType: 'json',
                        data: formData,
                        success: function (response) {
                            if (response !== "") {
                                AddInventorytbl("#InventoryTable", response.lastId);
                                LoadTableData();
                                notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                                ResetForm();
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                            console.error('Error:', error.responseText);
                        }
                    });
                } else {
                    notify("Please fill all required fields with values greater than zero in Inventory Data.", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                }
            });
        }




        //Region Update
        {
            $("#Form_Update_btn").click(function () {
                let isValid = true;
                let formData = {};
                $("#Header_Form input,select,textarea").each(function () {
                    var inputName = $(this).attr('name');
                    var inputValue = "";
                    if ($(this).find('textarea').lenght) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    // var mandatoryfields = ["ItemCode", "ItemName", "ItemType", "ItemGrpId", "UomGRPId", "CntryId", "UnitPrice", "PListId"];
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {

                        formData[inputName] = inputValue;

                    }
                });
                //Call Api
                if (isValid && formData !== "") {
                    $.ajax({
                        url: '@Url.Action("UPDATEDATA", "ItemMaster")',
                        type: 'POST',
                        dataType: 'json',
                        data: formData,
                        success: function (response) {
                            if (response.success) {
                                AddInventorytbl("#InventoryTable", response.lastId)
                                AddAttachmentData("#AttachmentTable", response.lastId)
                                ResetForm()
                                LoadTableData();
                                notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                            } else {
                                notify(response.message, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
            })
        }
        //Region Delete
        {
            $("#Form_Delete_btn").click(function () {
                Delete($("#ItemId").val());
            })
            $(document).on("click", ".table_delete", function () {
                var $row = $(this).closest("tr");
                var id = $row.find('td.tbl_Main_ID').text();
                Delete(id);
            })

        }
        //Region Select Row Data
        {
            $(document).on("click", ".table_edit", function () {
                var $row = $(this).closest("tr");
                $row.addClass("active");
                bindrecord($row)
            })
            function bindrecord($row) {
                var rowObject = {};
                $row.find('td').each(function (index) {
                    var $td = $(this);
                    var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                    if ($td.find('input').length) {
                        rowObject[key] = $td.find('input').val();
                    }
                    else if ($td.find('textarea').length) {
                        rowObject[key] = $td.find('textarea').val();
                    }
                    else if ($td.find('img').length) {
                        rowObject[key] = $td.find('img').attr("src");
                    } else if ($td.find('select').length) {
                        //  rowObject[key] = $td.find('select option:selected').text().trim();
                        //  rowObject['TaxCodeval'] = $td.closest('tr').find('.Taxc option:selected').val();
                        //  rowObject['UomEntryVal'] = $td.closest('tr').find('.Uomc1 option:selected').val();
                    } else {
                        rowObject[key] = $td.text().trim();
                    }
                });
                $("#Addrow").removeAttr("disabled");
                $(".OpBarcode").removeAttr("disabled");
                $("#ItemId").val(rowObject.ItemId).trigger("change");
                $("#CntryId").val(rowObject.CntryId).trigger("change");
                $("#Remarks").val(rowObject.Remarks);
                $("#ManufId").val(rowObject.ManufId).trigger("change");
                $("#ItemInvnt").val(rowObject.ItemInvnt);
                if (rowObject.ItemInvnt == "Y") {
                    $("#ItemInvnt").prop("checked", true);
                }
                if (rowObject.ItemInvnt == "N") {
                    $("#ItemInvnt").prop("checked", false);
                };
                $("#HSNNo").val(rowObject.HSNNo);
                $("#UnitPrice").val(rowObject.UnitPrice);
                $("#ItemType").val(rowObject.ItemType).trigger("change");
                $("#ItemCode").val(rowObject.ItemCode);
                $("#ItemManageBy").val(rowObject.ItemManageBy).trigger("change");
                $("#ItemGrpId").val(rowObject.ItemGrpId).trigger("change");
                $("#UomGrpId").val(rowObject.UomGrpId).trigger("change");
      
                $("#PListId").val(rowObject.PListId).trigger("change");
                if (rowObject.BarCode == "" || rowObject.BarCode == null) {
                    $("#BarCodeId").html("<option value=''>Select Barcode</option>");
                } else {
                    $("#BarCodeId").html("<option value=''>Select Barcode</option><option  selected value='" + rowObject.BarCodeId + "'>" + rowObject.BarCode + "</option>");
                }
                $("#ItemSale").val(rowObject.ItemSale);
                if (rowObject.ItemSale == "Y") {
                    $("#ItemSale").prop("checked", true);
                }
                if (rowObject.ItemSale == "N") {
                    $("#ItemSale").prop("checked", false);
                }
                $("#ItemPur").val(rowObject.ItemPurchase);
                if (rowObject.ItemPurchase == "Y") {
                    $("#ItemPur").prop("checked", true);
                }
                if (rowObject.ItemPurchase == "N") {
                    $("#ItemPur").prop("checked", false);
                }
                $("#ItemFixAsset").val(rowObject.ItemFixAsset);
                if (rowObject.ItemFixAsset == "Y") {
                    $("#ItemFixAsset").prop("checked", true);
                }
                if (rowObject.ItemFixAsset == "N") {
                    $("#ItemFixAsset").prop("checked", false);
                }
                $("#WHTaxLiable").val(rowObject.WHTaxLiable);
                if (rowObject.WHTaxLiable == "Y") {
                    $("#WHTaxLiable").prop("checked", true);
                }
                if (rowObject.WHTaxLiable == "N") {
                    $("#WHTaxLiable").prop("checked", false);
                }
                if (rowObject.ItemExcisable == "Y") {
                    $("#ItemGST").prop("checked", true).trigger("change");
                }

                $("#ItemExcisable").val(rowObject.ItemExcisable);
                if (rowObject.ItemExcisable == "Y") {
                    $("#ItemExcisable").prop("checked", true).trigger("change");
                }
                if (rowObject.ItemExcisable == "N") {
                    $("#ItemExcisable").prop("checked", false).trigger("change");
                }
                if (rowObject.ItemGST == "Y") {
                    $("#ItemGST").val("Y").prop("checked", true)
                    $("#ItemGST").trigger("change");
                }
                $("#BPId").val(rowObject.PreferredVendor).trigger("change");
                $("#ItemPerPurUnit").val(rowObject.ItemPerPurchasingUnit);
                $("#ItemName").val(rowObject.ItemName);
                $("#ItemMatType").val(rowObject.ItemMatType).trigger("change");
                $("#CntryCode").val(rowObject.CountryCode);
                $("#CntryName").val(rowObject.CountryName);
                $("#PurPackingUOM").val(rowObject.PackagingUOM);
                $("SalsPackingUOM").val(rowObject.SalesPackingUOM);
                $("#CntryCurrCode").val(rowObject.CurrencyCode).trigger("change");
                $("#CntryCurrName").val(rowObject.CurrencyCode).trigger("change");
                $("#CntryCurrSymbol").val(rowObject.CurrencySymbol).trigger("change");
                $("#IsoCntryCode").val(rowObject.IsoCountryCode).trigger("change");
                var OBJ={
                   "PurUOM":rowObject.PurchasingUOM,
                  
                   "PurVUomId": rowObject.PurVUomId,
                   "SalsUOM":rowObject.SalsUOM,
                  
                   "SalsVUomId": rowObject.SalsVUomId,
                   "InvntUOM": rowObject.InventoryUOM
                }
                LoadUomCode(OBJ)
                $("#PurQtyPerPack").val(rowObject.QtyPerPackaging);
                $("#PurLength").val(rowObject.PurchasingLength);
                $("#Purwidth").val(rowObject.PurchasingWidth);
                $("#PurHeight").val(rowObject.PurchasingWeight);
                $("#PurVolume").val(rowObject.PurchasingVolume);
                $("#PurWeight").val(rowObject.PurchasingWeight);
                $("#ShipTypeId").val(rowObject.ShipTypeId).trigger("change");
               // Sales Data
                $("#ItemPerSalsUnit").val(rowObject.ItemPerSalesUnit);
                $("#SalsQtyPerPack").val(rowObject.SalesQtyPerPack);
                $("#SalsLength").val(rowObject.SalesLength);
                $("#Salswidth").val(rowObject.SalesWidth);
                $("#SalsHeight").val(rowObject.SalesHeight);
                $("#SalsVolume").val(rowObject.SalesVolume);
                $("#SalsWeight").val(rowObject.SalesWeight);
                // Inventory Data
                $("#ItemInvntMthd").val(rowObject.InventoryMethodeBy).trigger("change");
                $("#ReordrQty").val(rowObject.RequierPurchasingUOM);
                $("#MinimumLvl").val(rowObject.MinimumLvl);
                $("#ValueMthd").val(rowObject.ValueMthd).trigger("change");
                $("#MaximumLvl").val(rowObject.MaximumLvl);
                // Planning Data
                $("#PlanMthd").val(rowObject.PlanMthd).trigger("change");
                $("#ProcMthd").val(rowObject.ProcMthd).trigger("change");
                $("#MinOrdrQty").val(rowObject.MinOrdrQty);
                $("#LeadTime").val(rowObject.LeadTime);
                $("#TolrDays").val(rowObject.ToleranceDays);
                // Production Data
                $("#ItemPhantom").val(rowObject.ItemPhantom);
                if (rowObject.ItemPhantom == "Y") {
                    $("#ItemPhantom").prop("checked", true);
                }
                if (rowObject.ItemPhantom == "N") {
                    $("#ItemPhantom").prop("checked", false);
                }
                $("#IssueMthd").val(rowObject.IssueMthd).trigger("change");
                $("#ProdStdCost").val(rowObject.ProdStdCost);
                $("#CreatedBy").val(rowObject.CreatedBy)
                $("#UpdatedBy").val(rowObject.UpdatedBy)
                var UpdateDate = SplitDatebyspace(rowObject.UpdateDate)
                $("#UpdateDate").val(UpdateDate)
                var CreateDate = SplitDatebyspace(rowObject.CreateDate)
                $("#CreateDate").val(CreateDate)
                $("#IsActive").val(rowObject.Active)
                if (rowObject.Active == "Y") {
                    $("#IsActive").prop("checked", true);
                }
                if (rowObject.Active == "N") {
                    $("#IsActive").prop("checked", false);
                }
                ShowBtn()
                LoadAttachmentData()
                LoadInventorytbl()
                $("#Create_User_Tab").click();
            }
        }
        //Function to handle form reset
        {
            $("#Form_reset_btn").click(function () {
                $(".Form_Elem").removeClass("border-danger");
                $(".Form_Elem").removeClass("border-danger");
                ResetForm() 
            });
        }
        //Function Btn Opration
        {

            function ResetForm() {
                $("#Header_Form input, select, textarea").val('').removeClass("border-danger");
                $("#Header_Form select.select2-hidden-accessible").val(null).trigger('change').next('.select2-container').removeClass("select2-error");
                $("#Header_Form input[type='checkbox']").prop('checked', false);
                $("#InventoryTable tbody").empty();
                HideBtn()
                $("#Header_Form")[0].reset();
                $("#AttachmentTable tbody").html("");
                $("#Barcodetbl tbody").html("");
                $("#BarCodeId").html("<option value=''>Select Barcode</option>");
                $(".OpBarcode").attr("disabled", "disabled");
                $("#Addrow").attr("disabled", "disabled");
               // $("#Form_reset_btn").click();

            }
            function ShowBtn() {
                $("#Form_Delete_btn").show();
                $("#Form_Update_btn").show();
                $("#Form_Save_btn").hide();
            }
            function HideBtn() {
                $("#Form_Save_btn").show();
                $("#Form_Delete_btn").hide();
                $("#Form_Update_btn").hide();
            }
        }
        //region All functions
        {
            function AddAttachmentData(table, Itemid) {
                var rowCount = $(table).find('tbody tr').length;
                if (rowCount <= 0) {
                    return false;
                }
                var AttachmentData = [];
                var headers = [];
                $(table).find('thead th').each(function () {
                    headers.push($(this).text().trim().toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()<>]/g, "").replace(/ /gi, ''));
                });
                $(table).find('tbody tr').each(function () {
                    var rowData = {};
                    $(this).find('td').each(function (index) {
                        if (headers[index] == "filedata") {
                            rowData["FileData"] = $(this).text().trim();
                        } else if (headers[index] == "filename") {
                            rowData["FileName"] = $(this).text().trim();
                        } else if (headers[index] == "attachmentid") {
                            rowData["AttachDetId"] = $(this).text().trim();
                        } else if (headers[index] == "fileextention") {
                            rowData["FileExt"] = $(this).text().trim();
                        } else if (headers[index] == "remark") {
                            // Use .find('textarea').val() to get the value of textarea
                            rowData["Remark"] = $(this).find('textarea').val();
                        }
                    });
                    rowData["ItemId"] = Itemid;
                    AttachmentData.push(rowData);
                });

                $.ajax({
                    url: '@Url.Action("ADDITEMATTACHMENT", "ItemMaster")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(AttachmentData),
                    success: function (response) {
                        if (response.success) {
                            LoadAttachmentData();
                            return true;
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });


                return AttachmentData;
            }
            function LoadAttachmentData() {
                var ItemId = $("#ItemId").val();
                $.ajax({
                    url: '@Url.Action("GETATACHMENT", "ItemMaster")',
                    type: 'GET',
                    dataType: 'json',
                    data: { ItemId: ItemId },
                    success: function (response) {
                        $("#AttachmentTable tbody").html("");
                        if (response.length > 0) {
                            var index = 1;
                            for (var i = 0; i < response.length; i++) {
                                var list = "<tr>";
                                list += "<td class='text-center'>" + index + "</td>"; // Add the index to the first column
                                list += "<td class='p-0' nowrap><input class='p-1 form-control form-control-sm selectfile' type='file' placeholder='Choose File'/></td>";
                                list += "<td class='p-0 align-items-center Remark' nowrap><textarea style='height:34px!important;' class='form-control form-control-sm'>" + response[i].Remark + "</textarea></td>";
                                list += "<td class=' align-items-center filename' nowrap>" + response[i].FileName + "</td>";
                                list += "<td class=' align-items-center fileExt' nowrap>" + response[i].FileExt + "</td>";
                                list += "<td class=' align-items-center d-none fileData' nowrap>" + response[i].FileData + "</td>";
                                list += "<td class=' align-items-center d-none attachmentid' nowrap>" + response[i].AttachDetId + "</td>";
                                list += "<td class=' align-items-center d-none flag' nowrap>N</td>";
                                list += "<td class='p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 ViewAttchment btn-sm btn-primary'>View</button></td>";
                                list += "<td class='p-0' nowrap><button style='width:100px;' type='button' class='btn p-1 mt-1 mb-1 DeleteAttchment btn-sm btn-danger'>Delete</button></td>";
                                list += "</tr>";
                                $("#AttachmentTable tbody").append(list);
                                index++;
                            }
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            }
            function AddInventorytbl(table, Itemid) {
                var Inventorydt = [];
                var headers = [];
                $(table).find('thead th').each(function () {
                    headers.push($(this).text().trim().toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()<>]/g, "").replace(/ /gi, ''));
                });
                $(table).find('tbody tr').each(function () {
                    let Validate = false;
                    var rowData = {};
                    $(this).find('td').each(function (index) {
                        Validate = true;
                        if (headers[index] == "locked") {
                            rowData["WhsLocked"] = $(this).find('input').val().trim();
                        } else if (headers[index] == "mininventory") {
                            rowData["MinStock"] = $(this).find('input').val().trim() || "0";
                        } else if (headers[index] == "maxinventory") {
                            rowData["MaxStock"] = $(this).find('input').val().trim() || "0";
                        } else if (headers[index] == "whsid") {
                            rowData["WhsId"] = $(this).text().trim() || "0";
                        } else if (headers[index] == "invtdetid") {
                            rowData["InvtDetId"] = $(this).text().trim() || "0";
                        } else if (headers[index] == "reqinvlevel") {
                            rowData["MinOrder"] = $(this).find('input').val().trim() || "0";
                        }
                    });
                    rowData["ItemId"] = Itemid;
                    if (Validate) {
                        Inventorydt.push(rowData);
                    }
                });
                $.ajax({
                    url: '@Url.Action("ADDINVTBLDT", "ItemMaster")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(Inventorydt),
                    success: function (response) {
                        if (response.success) {
                            LoadInventorytbl()
                            return true;
                        } else {
                            return false;
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            LoadTableData();
            function LoadTableData() {
                $.ajax({
                    url: '@Url.Action("GET", "ItemMaster")',
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        ApplyDatatable(response, "Table")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }

            // Barcode Add
            function AddBarcodedt(table) {
                var ItemId = $("#ItemId").val();
                var BarUOM = $("#BarUOM").val();
                if (BarUOM == "" || BarUOM == null) {
                    $("#BarUOM").addClass("border-danger");
                    notify("Please Select Unit Of Measurement...!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    return false;
                } else {
                    $("#BarUOM").removeClass("border-danger");

                }
                var Barcodedt = [];
                var headers = [];
                $(table).find('thead th').each(function () {
                    headers.push($(this).text().trim().toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()<>]/g, "").replace(/ /gi, ''));
                });
                $(table).find('tbody tr').each(function () {
                    var rowData = {};
                    $(this).find('td').each(function (index) {
                        if (headers[index] == "barcode") {
                            rowData["BarCode"] = $(this).find('input').val().trim();
                        } else if (headers[index] == "freetext") {
                            rowData["Remark"] = $(this).find('textarea').val().trim() || "";
                        } else if (headers[index] == "active") {
                            rowData["IsActive"] = $(this).find('input').val().trim() || "0";
                        } else if (headers[index] == "barcodedetid") {
                            rowData["BarCodeDetId"] = $(this).text().trim() || "0";
                        }
                    });
                    rowData["ItemId"] = ItemId;
                    rowData["UomId"] = BarUOM;
                    Barcodedt.push(rowData);
                });
                $.ajax({
                    url: '@Url.Action("ADDBARCODEDT","ItemMaster")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(Barcodedt),
                    success: function (response) {
                        if (response.success) {
                            GetBarcodeData();
                            notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            function GetBarcodeData() {
                var ItemId = $("#ItemId").val();
                var BarUOM = $("#BarUOM").val();
                $.ajax({
                    url: '@Url.Action("GETBARCODEDT", "ItemMaster")',
                    type: 'GET',
                    data: { GroupId: BarUOM, ItemId: ItemId },
                    dataType: 'json',
                    success: function (response) {
                        $("#Barcodetbl tbody").html("");
                        if (response.length > 0) {

                            var currentIndex = 1;
                            for (var i = 0; i < response.length; i++) {
                                var list = "<tr>";
                                list += "<td>" + currentIndex + "</td>"; // Add the index to the first column
                                list += '<td class="p-1"nowrap><i class="fa fa-trash text-danger mt-2  Barcode_table_delete"></td>';
                                list += '<td class="p-1"nowrap><button style="height:30px;" class="btn btn-sm SetDefault btn-primary">Set Default</button></td>';
                                if (response[i].IsActive == "Y") {
                                    list += `<td class='pt-2'><label " class="tblswitch ">
                                                                                                        <input type="checkbox"  value="Y" checked name="InvetoryLock" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                <span class="tblslider"></span>
                                                                                                </label></td>`;
                                } else {
                                    list += `<td class='pt-2'><label " class="tblswitch ">
                                                                                                        <input type="checkbox"  value="N"  name="InvetoryLock" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                <span class="tblslider"></span>
                                                                                                </label></td>`;
                                }

                                list += `<td class='p-1 BarCodePrefix' nowrap><input  style='height: 30px !important;' name="BarCodePrefix" id="BarCodePrefix" type="text" placeholder="BarCode Prefix" class="form-control form-control-sm Form_Elem" /></td>`;
                                list += `<td class='p-1 IncrementCount' nowrap><input  style='height: 30px;' name="IncrementCount" id="IncrementCount" type="number" placeholder="Code" class="form-control form-control-sm Form_Elem" /></td>`;
                                list += `<td class='p-1 EANType' nowrap><select style='height: 30px!important;' name="EANType" id="EANType" type="text" class="form-control  form-control-sm Form_Elem">
                                                        <option value="12">EAN 12</option>
                                                        <option value="13">EAN 13</option>
                                                    </select></td>`;
                                list += `<td class='p-1 TblBarCode' nowrap><input style='height: 30px;' value='` + response[i].BarCode + `' name="TblBarCode" id="TblBarCode" readonly type="text" placeholder="BarCode " class="form-control form-control-sm Form_Elem" /></td>`;
                                list += "<td class='p-1 align-items-center Remark' nowrap><textarea style='height:30px;' class='form-control form-control-sm'>" + response[i].Remark + "</textarea></td>";
                                list += "<td class='p-1 d-none align-items-center  BarCodeDetId' nowrap>" + response[i].BarCodeDetId + "</td>";
                                list += "</tr>";
                                $("#Barcodetbl tbody").append(list);
                                currentIndex++
                            }
                        }
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        console.error('Error:', error.responseText);
                    }
                });
            }
            //format date
            function formatAndSetDate(inputDate) {
                const parts = inputDate.split(' ');
                const datePart = parts[0];
                const timePart = parts[1];
                const [day, month, year] = datePart.split('-');
                const formattedDate = `${year}-${month}-${day}`;
                const formattedDateTime = `${formattedDate} ${timePart}`;
                return formattedDate;
            }
            function SplitDatebyspace(inputDate) {
                const parts = inputDate.split(' ');
                return parts[0];

            }
            //Apply Datatable
            function ApplyDatatable(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }
                var table = $('#' + Table_Id).DataTable({
                    scrollX: true,
                    responsive: true,
                    scrollY: '600px',
                    responsive: true,
                    "ordering": true,
                    autoWidth: true,
                    orderCellsTop: true,
                    scrollCollapse: true,
                    "columnDefs": [{
                        "targets": '_all',
                        "createdCell": function (td, cellData, rowData, row, col) {
                            $(td).css('padding', '5px')
                            $(td).attr('nowrap', 'nowrap')
                        }
                    }],
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no  text-center',
                            render: function (data, type, row, meta) {
                                // 'meta.row' gives the index of the row
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                return '<i class="fa fa-edit table_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  table_delete"></i>';
                            }
                        },
                        {
                            data: 'IsActive',
                            title: 'Active',
                            ClassName: 'pt-2',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                            <input type="checkbox" disabled value="`+ data + `" checked name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                    <span class="tblslider"></span>
                                                                                    </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                <input type="checkbox" disabled value="`+ data + `"  name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                        <span class="tblslider"></span>
                                                                                    </label></center>`;
                                }

                            }
                        },
                        { data: 'ItemId', title: 'ItemId', className: 'tbl_ItemId d-none tbl_Main_ID' },
                        { data: 'ItemCode', title: 'Item Code', className: 'tbl_ItemCode' },
                        { data: 'ItemName', title: 'Item Name', className: 'tbl_ItemName ' },
                        { data: 'ItemType', title: 'Item Type', className: 'tbl_ItemType d-none ' },
                        {
                            data: 'ItemType',
                            title: 'Type',
                            className: 'no-wrap',

                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "I") {
                                    return `<center>Item</center>`;
                                } else if (data == "L") {
                                    return `<center>Labour</center>`;
                                } else {
                                    return `<center>Travel</center>`;
                                }
                            }
                        },
                        { data: 'ItemGrpname', title: 'Item Group Name', className: 'tbl_ItemGroupName' },
                        { data: 'ItemGrpId', title: 'ItemGrpId', className: 'tbl_ItemGrpId d-none' },
                        { data: 'UomGRPName', title: 'Uom Group Name', className: 'tbl_ItemGrpId' },
                        { data: 'UomGRPId', title: 'UomGrpId', className: 'tbl_UomGrpId d-none' },
                        { data: 'UnitPrice', title: 'Unit Price', className: 'tbl_UnitPrice text-right' },

                        { data: 'CntryCurrCode', title: 'Currency Code', className: 'tbl_UomGrpId ' },
                        { data: 'CntryId', title: 'CntryId', className: 'tbl_CntryId d-none' },
                        { data: 'PListName', title: 'Prise List Name', className: 'tbl_UomGrpId ' },
                        { data: 'PListId', title: 'PListId', className: 'tblPListId d-none' },
                        { data: 'BarCodeId', title: 'BarCodeId', className: 'tbl_BarCodeId d-none' },
                        { data: 'BarCode', title: 'Bar Code', className: 'tbl_BarCode' },
                        {
                            data: 'ItemInvnt',
                            title: 'Item Invnt',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "N") {
                                    return `<center>No</center>`;
                                }
                                else {
                                    return `<center>Yes</center>`;
                                }
                            }
                        },
                        {
                            data: 'ItemSale',
                            title: 'Item Sale',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "N") {
                                    return `<center>No</center>`;
                                }
                                else {
                                    return `<center>Yes</center>`;
                                }
                            }
                        },
                        {
                            data: 'ItemPur',
                            title: 'Item Purchase',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "N") {
                                    return `<center>No</center>`;
                                }
                                else {
                                    return `<center>Yes</center>`;
                                }
                            }
                        },
                        {
                            data: 'ItemFixAsset',
                            title: 'Item Fix Asset',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "N") {
                                    return `<center>No</center>`;
                                }
                                else {
                                    return `<center>Yes</center>`;
                                }
                            }
                        },
                        { data: 'ItemInvnt', title: 'Item Invnt', className: 'ItemInvnt d-none' },
                        { data: 'ItemSale', title: 'Item Sale', className: 'ItemSale d-none' },
                        { data: 'ItemPur', title: 'Item Purchase', className: 'tbl_ItemPur d-none' },
                        { data: 'ItemFixAsset', title: 'Item Fix Asset', className: 'ItemFixAsset d-none' },
                        { data: 'Remarks', title: 'Remarks', className: 'tbl_Remarks' },
                        { data: 'ManuftName', title: 'Manufacturer', className: 'tbl_Manufacturer' },
                        {
                            data: 'WHTaxLiable',
                            title: 'WH TaxLiable',
                            ClassName: 'pt-2',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                                     <input type="checkbox" disabled value="`+ data + `" checked name="WHTaxLiable1" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                     <span class="tblslider"></span>
                                                                                     </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                         <input type="checkbox" disabled value="`+ data + `"  name="WHTaxLiable52" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                         <span class="tblslider"></span>
                                                                                     </label></center>`;
                                }

                            }
                        },
                        { data: 'WHTaxLiable', title: 'WH TaxLiable', className: 'tbl_WHTaxLiable d-none' },
                        { data: 'ManufId', title: 'ManufId', className: 'tbl_ManufId d-none' },
                        { data: 'ShipTypeName', title: 'Ship Type', className: 'tbl_ShipType d-none' },
                        { data: 'ShipTypeId', title: 'ShipTypeId', className: 'tbl_ShipType d-none' },
                        { data: null, title: 'Shiping Type', className: 'tbl_ShipingType d-none' },
                        {
                            data: 'ItemManageBy',
                            title: 'Item Manage By',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "N") {
                                    return `<center>None</center>`;
                                } else if (data == "S") {
                                    return `<center>Serial Numbers</center>`;
                                } else {
                                    return `<center>Batches</center>`;
                                }
                            }
                        },
                        { data: 'ItemManageBy', title: 'ItemManageBy', className: 'tbl_ItemManageBy d-none' },
                        { data: 'ItemExcisable', title: 'ItemExcisable', className: 'tbl_ItemExcisable d-none' },
                        { data: 'ItemGST', title: 'ItemGST', className: 'tbl_ItemGST d-none' },
                        {
                            data: 'ItemMatType',
                            title: 'Material Type',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "N") {
                                    return `<center>1-Raw Material</center>`;
                                } else if (data == "2") {
                                    return `<center>2-Capital Goods</center>`;
                                } else {
                                    return `<center>3-Finished Goods</center>`;
                                }
                            }
                        },
                        { data: 'ItemMatType', title: 'ItemMatType', className: 'tbl_ItemMatType d-none' },
                        { data: 'HSNNo', title: 'HSN No', className: 'tbl_HSNNo' },
                        {
                            data: 'TaxCategory',
                            title: 'Tax Category',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "N") {
                                    return `<center>Nil Reted</center>`;
                                } else if (data == "E") {
                                    return `<center>Extempt</center>`;
                                } else {
                                    return `<center>Regular</center>`;
                                }
                            }
                        },
                        { data: 'TaxCategory', title: 'TaxCategory', className: 'tbl_TaxCategory d-none' },

                        { data: 'BPName', title: 'Preferred Vendor', className: 'tbl_PreferredVendor ' },
                        { data: 'BPId', title: 'Preferred Vendor', className: 'tbl_PreferredVendor d-none' },
                        { data: 'PurchaseUOM', title: 'Purchasing UOM', className: 'tbl_PurUOM ' },
                        { data: 'PurUOM', title: 'Purchasing UOM', className: 'tbl_PurUOM d-none' },
                        { data: 'ItemPerPurUnit', title: 'Item Per Purchasing Unit', className: 'tbl_ItemPerPurUnit text-right' },
                        { data: 'PurPackingUOMName', title: 'Packaging UOM', className: 'tbl_PurPackingUOMName' },
                        { data: 'PurPackingUOM', title: 'Packaging UOM', className: 'tbl_PurPackingUOM d-none' },
                        { data: 'PurQtyPerPack', title: 'Qty Per Packaging', className: 'tbl_PurQtyPerPack text-right' },
                        { data: 'PurLength', title: 'Purchasing Length', className: 'tbl_PurLength text-right' },
                        { data: 'PurWidth', title: 'Purchasing Width', className: 'tbl_Purwidth text-right' },
                        { data: 'PurHeight', title: 'Purchasing Height', className: 'tbl_PurHeight text-right' },
                        { data: 'PurVolume', title: 'Purchasing Volume', className: 'tbl_PurVolume text-right' },
                        { data: 'PurVUomName', title: 'Pur volume Uom Name', className: 'tbl_PurVUomName text-right ' },
                        { data: 'PurVUomId', title: 'PurVUomId', className: 'tbl_PurVUomId d-none' },
                        { data: 'PurWeight', title: 'Purchasing Weight', className: 'tbl_Weight text-right' },


                        { data: 'SalsUOM', title: 'SalsUOM', className: 'tbl_SalsUOM d-none' },
                        { data: 'ItemPerSalsUnit', title: 'Item Per Sales Unit', className: 'tbl_ItemPerSalsUnit  text-right' },
                        { data: 'SalesPackingUOMName', title: 'Sales Packing UOM', className: 'tbl_SalesPackingUOMName' },
                        { data: 'SalsPackingUOM', title: 'Sales Packing UOM', className: 'tbl_SalsPackingUOM d-none' },
                        { data: 'SalsQtyPerPack', title: 'Sales Qty Per Pack', className: 'SalsQtyPerPack text-right' },
                        { data: 'SalsLength', title: 'Sales Length', className: 'SalsLength text-right' },
                        { data: 'SalsWidth', title: 'Sales Width', className: 'tbl_SalsWidth text-right' },
                        { data: 'SalsHeight', title: 'Sales Height', className: 'tbl_SalsHeight text-right' },
                        { data: 'SalsVolume', title: 'Sales Volume', className: 'tbl_SalsVolume text-right' },
                        { data: 'SalsVUomId', title: 'SalsVUomId', className: 'tbl_SalsVUomId d-none ' },
                        { data: 'SalsVUomName', title: 'Sales Volume UOM', className: 'tbl_SalsVUomName text-right' },
                        { data: 'SalsWeight', title: 'Sales Weight', className: 'tbl_SalsWeight text-right' },

                        { data: 'ItemInvntMthd', title: 'Inventory Methode By', className: 'tbl_ItemInvntMthd' },
                        { data: 'InventoryUOMName', title: 'Inventory UOM', className: 'tbl_InvntUOM' },
                        { data: 'InvntUOM', title: 'Inventory UOM', className: 'tbl_InvntUOM d-none' },
                        { data: 'ReordrQty', title: 'Requier (Purchasing UOM)', className: 'tbl_ReordrQty text-right' },
                        { data: 'MinimumLvl', title: 'Minimum Lvl', className: 'tbl_MinimumLvl text-right' },
                        { data: 'ValueMthd', title: 'ValueMthd', className: 'tbl_ValueMthd d-none' },
                        {
                            data: 'ValueMthd',
                            title: 'Valuation Methode',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "S") {
                                    return `<center>STANDERD</center>`;
                                } else if (data == "F") {
                                    return `<center>FIFO</center>`;
                                } else {
                                    return `<center>MOVING AVERAGE</center>`;
                                }
                            }
                        },
                        { data: 'MaximumLvl', title: 'Maximum Lvl', className: 'tbl_MaximumLvl' },

                        { data: 'PlanMthd', title: 'PlanMthd', className: 'tbl_PlanMthd d-none' },
                        {
                            data: 'PlanMthd',
                            title: 'Planning Methode',
                            render: function (data, type, row) {
                                if (data == "N") {
                                    return `<center>None</center>`;
                                } else if (data == "M") {
                                    return `<center>MRP</center>`;
                                }
                            }
                        },
                        { data: 'ProcMthd', title: 'ProcMthd', className: 'tbl_ProcMthd d-none' },
                        {
                            data: 'ProcMthd',
                            title: 'Procurement Methode',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "B") {
                                    return `<center>Buy</center>`;
                                } else if (data == "M") {
                                    return `<center>Make</center>`;
                                }
                            }
                        },
                        { data: 'MinOrdrQty', title: 'Min Ordr Qty', className: 'tbl_MinOrdrQty text-right' },
                        { data: 'LeadTime', title: 'Lead Time', className: 'tbl_LeadTime text-right' },
                        { data: 'TolrDays', title: 'Tolerance Days', className: 'tbl_TolrDays text-right' },

                        {
                            data: 'IssueMthd',
                            title: 'Issue Methode',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "B") {
                                    return `<center>Backflush</center>`;
                                } else if (data == "M") {
                                    return `<center>Manual</center>`;
                                } else {
                                    return `<center></center>`;
                                }
                            }
                        },
                        { data: 'IssueMthd', title: 'IssueMthd', className: 'tbl_ItemPhantom d-none' },
                        {
                            data: 'ItemPhantom',
                            title: 'Item Phantom',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "N") {
                                    return `<center>None</center>`;
                                } else if (data == "Y") {
                                    return `<center>Yes</center>`;
                                } else {
                                    return `<center></center>`;
                                }
                            }
                        },

                        { data: 'ItemPhantom', title: 'ItemPhantom', className: 'tbl_ItemPhantom d-none' },
                        { data: 'ProdStdCost', title: 'Prod Std Cost', className: 'tbl_ProdStdCost text-right' },

                        { data: 'CreatedBy', title: 'Created By', className: 'tbl_CreatedBy d-none' },
                        { data: 'CreateDate', title: 'Create Date', className: 'tbl_CreateDate d-none' },
                        { data: 'UpdatedBy', title: 'Updated By', className: 'tbl_UpdatedBy d-none' },
                        { data: 'UpdateDate', title: 'Update Date', className: 'tbl_UpdateDate d-none' },
                        // Add more columns as needed
                    ],
                    "columnDefs": [
                        { "targets": 'th', "className": 'dt-no-wrap' }
                    ],


                });
            }
            //Delete

            function DeleteAttachment(ID) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This Attachment Is Permanetly Delete Form system..!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DELETEATTCH", "ItemMaster")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {
                                    LoadAttachmentData()
                                    Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                } else {
                                    notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });
            }
            function DeleteBarcode(ID) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This Barcode Is Permanetly Delete Form system..!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DELETEBARCODE", "ItemMaster")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {
                                    GetBarcodeData()
                                    Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                } else {
                                    notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });
            }


            function Delete(ID) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This Item  Is Permanetly Delete Form system..!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DELETE", "ItemMaster")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {
                                    LoadTableData();
                                    ResetForm()
                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                } else {
                                    notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });

            }
        }
        // Region Navigation
        {
            var $table = $("#Table");
            $table.find("tbody tr:first").addClass("active");
            $(".btn_forward").click(function () {
                var $currentRow = $table.find(".active");
                var $nextRow = $currentRow.next("tr");
                if ($nextRow.length > 0) {
                    $currentRow.removeClass("active");
                    $nextRow.addClass("active");
                    bindrecord($nextRow);
                } else {
                    var $firstRow = $table.find("tbody tr:first");
                    $table.find(".active").removeClass("active");
                    $firstRow.addClass("active");
                    bindrecord($firstRow);

                }
            });
            $(".btn_backward").click(function () {
                var $currentRow = $table.find(".active");
                var $prevRow = $currentRow.prev("tr");
                if ($prevRow.length > 0) {
                    $currentRow.removeClass("active");
                    $prevRow.addClass("active");
                    bindrecord($prevRow);
                } else {
                    var $lastRow = $table.find("tr:last");
                    $table.find(".active").removeClass("active");
                    $lastRow.addClass("active");
                    bindrecord($lastRow);
                }
            });
            $(".btn_first").click(function () {
                var $firstRow = $table.find("tbody tr:first");
                $table.find(".active").removeClass("active");
                $firstRow.addClass("active");
                bindrecord($firstRow);
            });
            $(".btn_last").click(function () {
                var $lastRow = $table.find("tr:last");
                $table.find(".active").removeClass("active");
                $lastRow.addClass("active");
                bindrecord($lastRow);
            });
            $(".btn_reload").click(function () {
                ResetForm()
                $("#Form_reset_btn").click();
                HideBtn()
            });
        }
        // Bulk Post
        {
            $('#DownloadTemplete').click(function () {
                var value = 'Item_Mst';
                $.ajax({
                    type: "get",
                    url: "@Url.Action("GetHeader", "UnitMaster")",
                    data: { data: value },
                    contentType: "application/json; charset=utf-8",
                    success: function (headerData) {
                        var headers = [];

                        // Populate headers array with column names and metadata
                        for (var i = 0; i < headerData.length; i++) {
                            var header = headerData[i].name;
                            var dp_field_dname = headerData[i].name;
                            var MYDATA_TYPE = headerData[i].dataType;
                            var MYLength = headerData[i].maxLength;
                            var headerText = `${dp_field_dname},(${MYDATA_TYPE}, ${MYLength})`;
                            var tooltipText = '';
                            if (header.includes('CntryId')) {
                                tooltipText = "Tooltip for use Country Master Sheet for data use in " + header;
                            }
                            if (header.includes('ItemGrpId')) {
                                tooltipText = "Tooltip for Use Item Group sheet for data use in " + header;
                            }
                            if (header.includes('UomGrpId')) {
                                tooltipText = "Tooltip for Use Unit Group sheet for data use in " + header;
                            }
                            if (header.includes('PListId')) {
                                tooltipText = "Tooltip for Use Item Price List sheet for data use in " + header;
                            }
                            var headerObj = {
                                text: headerText,
                                tooltip: tooltipText
                            };

                            headers.push(headerObj);
                        }

                        const worksheetData = [headers.map(header => header.text)];
                        const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);
                        const columnWidth = 30; // Set desired width (in characters)
                        worksheet['!cols'] = headers.map(() => ({ width: columnWidth }));

                        headers.forEach((header, index) => {
                            if (header.tooltip) {
                                const cellAddress = XLSX.utils.encode_cell({ r: 0, c: index });
                                worksheet[cellAddress].c = [{
                                    t: header.tooltip,
                                    a: "system"
                                }];
                            }
                        });

                        const workbook = XLSX.utils.book_new();
                        XLSX.utils.book_append_sheet(workbook, worksheet, 'Headers');

                        // Create an array of AJAX calls
                        const ajaxCalls = [
                            { url: "@Url.Action("GET", "UnitGroupMaster")", sheetName: 'Unit Group' },
                            { url: "@Url.Action("GET", "CountryMaster")", sheetName: 'Country Master' },
                            { url: "@Url.Action("GET", "PriceListMaster")", sheetName: 'Item Price List  Master' },
                            { url: "@Url.Action("ITEMGROUP", "GetDropdownData")", sheetName: 'Item Group' }

                        ];

                        // Function to process AJAX response and add sheets
                        function addSheetToWorkbook(data, sheetName) {
                            if (data.length > 0) {
                                var columnNames = Object.keys(data[0]);
                                var sheetData = [columnNames];
                                for (var i = 0; i < data.length; i++) {
                                    var row = [];
                                    for (var j = 0; j < columnNames.length; j++) {
                                        row.push(data[i][columnNames[j]]);
                                    }
                                    sheetData.push(row);
                                }
                                const worksheet = XLSX.utils.aoa_to_sheet(sheetData);
                                worksheet['!cols'] = columnNames.map(() => ({ width: columnWidth }));
                                XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);
                            }
                        }

                        // Perform all AJAX calls
                        $.when.apply($, ajaxCalls.map(call => $.ajax({
                            type: "get",
                            url: call.url,
                            contentType: "application/json; charset=utf-8"
                        })))
                            .then(function (...responses) {
                                responses.forEach((response, index) => {
                                    addSheetToWorkbook(response[0], ajaxCalls[index].sheetName);
                                });

                                const excelBuffer = XLSX.write(workbook, {
                                    bookType: 'xlsx',
                                    type: 'array'
                                });
                                const blob = new Blob([excelBuffer], { type: 'application/octet-stream' });
                                const link = document.createElement('a');
                                link.href = URL.createObjectURL(blob);
                                link.download = `${value}.xlsx`; // Corrected filename format
                                link.click();
                                URL.revokeObjectURL(link.href);
                            })
                            .fail(function (err) {
                                console.error('Error fetching data:', err);
                            });
                    },
                    error: function (error) {
                        console.error('Error fetching data:', error);
                    }
                });
            });

            $('#Upload_Xls').on('click', function () {
                Loader();

                var input = document.getElementById('Import');
                var file = input.files[0];
                var reader = new FileReader();

                reader.onload = function (e) {
                    var data = new Uint8Array(e.target.result);
                    let workbook = XLSX.read(data, { type: 'array' });
                    let firstSheetName = workbook.SheetNames[0];
                    let worksheet = workbook.Sheets[firstSheetName];
                    let excelData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
                    let Eheaders = excelData[0];
                    let headers = Eheaders.map(header => {
                        // Split the header on ',' and take the first part
                        return header.split(',')[0];
                    });
                    let rows = excelData.slice(1);
                    let dataArray = rows.map(row => {
                        let obj = {};
                        row.forEach((cell, i) => {
                            obj[headers[i]] = cell;
                        });
                        return obj;
                    });
                    $.ajax({
                        url: "@Url.Action("POSTDATAExcel", "ItemMaster")",
                        method: "POST",
                        data: { data: JSON.stringify(dataArray) },
                        success: function (response) {
                            if (response !== "") {
                                var jsondata = JSON.parse(response);
                                if (jsondata.length > 0) {
                                    createExcelFile(jsondata);
                                } else {
                                    Swal.fire("Bulk Post Successful...!", "", "success");
                                    LoadTableData();
                                }
                            }
                            Loader();
                            $('#Import').val("");
                        },
                        error: function (err) {
                            console.log(err.responseText);
                            Loader();
                        }
                    });
                };

                reader.readAsArrayBuffer(file);
            });

            function createExcelFile(jsonData) {
                const worksheet = XLSX.utils.json_to_sheet(jsonData);
                const workbook = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");
                const excelBuffer = XLSX.write(workbook, {
                    bookType: "xlsx",
                    type: "array"
                });
                const blob = new Blob([excelBuffer], { type: "application/octet-stream" });
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = 'error_log.xlsx';
                link.click();
                URL.revokeObjectURL(link.href);
            }
        }
    });
</script>

