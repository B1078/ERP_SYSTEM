@{
    string? UserName = ViewContext.HttpContext.Session.GetString("UserName");
    DateTime currentDate = DateTime.Now;
    string formattedDate = currentDate.ToString("dd-MM-yyyy");

}

<div class="col-xl-12 col-md-12">
    <div class="card table-card p-2 mb-0">
        <div class="row">
            <div class="col-md-12">
                <button class="btn text-center btn-sm btn-primary btn_first p-2" title="Get First Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_backward p-2" title="Get Privious Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-left"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary p-2 btn_forward" title="Get Next Record" style="width:50px; font-size:18px;">
                    <i class="fas fa-long-arrow-alt-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_last p-2" title="Get Last Document" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-right"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary btn_reload p-2" title="Reload" style="width:50px; font-size:18px;">
                    <i class="fa fa-refresh"></i>
                </button>
                <button class="btn text-center btn-sm btn-primary p-2 " id="XLS" title="Export" style="width:50px; font-size:18px;">
                    <i class="fa fa-arrow-circle-o-up"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="card table-card">
        <div class="card-header">
            <h5 class="webtitle">Unit Group Master</h5>
            <div class="card-header-right">
                <ul class="list-unstyled card-option">
                    <li><i class="fa fa-wrench open-card-option"></i></li>
                    <li><i class="fa fa-window-maximize full-card"></i></li>
                    <li><i class="fa fa-minus minimize-card"></i></li>
                    <li><i class="fa fa-refresh reload-card"></i></li>
                </ul>
            </div>
        </div>
        <div class="card-block shadow">
            <!-- Row start -->
            <div class="row p-2">
                <div class="col-lg-12 col-xl-12">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" id="Create_UnitGroupMaster_Tab" href="#Create_UnitGroupMaster" role="tab">Create Unit Group Master</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#All_UnitGroupMaster" role="tab">All Unit Group Master</a>
                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content tabs card-block">
                        <div class="tab-pane active p-0 m-0 mt-2" id="Create_UnitGroupMaster" role="tabpanel">
                            <form id="UnitGroupMaster_form" class="w-100 mt-4 p-4 border">
                                <div class="row justify-content-start mt-1 mb-3 p-1">
                                    <div class="col-md-6 col-lg-6">
                                        <label class="switch">
                                            <input type="checkbox" value="Y" checked name="IsActive" id="IsActive" class="toggleSwitch form-control form-control-sm">
                                            <span class="slider"></span>
                                        </label>
                                    </div>
                                    <div class="col-md-6 col-lg-6">
                                        <div class="row align-items-center">
                                            <div class="col-md-3"></div>
                                            <div class="col-md-3">
                                                <button type="button" id="DownloadTemplete" class="btn btn-sm btn-primary w-100">
                                                    Download Template
                                                </button>
                                            </div>
                                            <div class="col-md-3">
                                                <input class='p-1 form-control form-control-sm selectfile' id="Import" type='file' placeholder='Choose File' />
                                            </div>
                                            <div class="col-md-3 d-flex justify-content-end">
                                                <button type="button" id="Upload_Xls" class="btn btn-sm btn-success w-100">Upload</button>
                                                <button type="button" class="btn btn-sm btn-primary" id="ViewExcel"><i class="fa fa-eye"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr>
                                <div class="row mt-2">
                                    <input hidden name="UomGRPId" id="UomGRPId" value="" type="text" placeholder="Id" class="form-control form-control-sm UnitG_Elem" />

                                    <!-- Sales Employee Name -->
                                    <div class="col-md-4 mt-1 mb-1">
                                        <label for="UomGRPName"> Unit Group Master Name</label>
                                        <input id="UomGRPName" name="UomGRPName" type="text" placeholder="Unit Group Master Name" class="form-control form-control-sm UnitG_Elem" oninput="MaxLengthInp(this,20)" />
                                    </div>
                                    <div class="col-md-2  m mb-1">
                                        <div class="col-md-1 mb-1 ">
                                            <label for="IsManual" class="mt-2">IsManual</label>
                                            <div class="text-left ml-0">
                                                <label class="switch">
                                                    <input type="checkbox" value="N"  name="IsManual" id="IsManual" class="toggleSwitch form-control UnitG_Elem form-control-sm">
                                                    <span class="slider"></span>
                                                </label>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 mt-1 mb-1">
                                        <label for="BaseUomId">Base UoM </label>
                                        <select id="BaseUomId" name="BaseUomId" class="form-control form-control-sm  UnitG_Elem">
                                            <option value="">From UoM </option>

                                        </select>
                                    </div>
                                    <div class="col-md-3 mt-4">
                                        <button type="button" class="btn btn-sm btn-primary  mt-2 UnitGrpDef" disabled>Add Unit Defination Master</button>
                                    </div>
                                </div>
                                <!-- Update Date, Updated By, Create Date, Created By -->
                                <div class="row mt-2 mb-2">
                                    <div class="col-md-3 mt-1 mb-1 d-none ">
                                        <label for="UpdateDate">Updated On</label>
                                        <input readonly name="UpdateDate" id="UpdateDate" value="@formattedDate" type="text" placeholder="dd/mm/yy" class="form-control form-control-sm  UnitG_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1 d-none ">
                                        <label for="UpdatedBy">Updated By</label>
                                        <input readonly name="UpdatedBy" id="UpdatedBy" value="@UserName" type="text" placeholder="Updated By" class="form-control form-control-sm  UnitG_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1 d-none">
                                        <label for="CreateDate">Created On</label>
                                        <input readonly name="CreateDate" id="CreateDate" value="@formattedDate" type="text" placeholder="dd/mm/yy" class="form-control form-control-sm  UnitG_Elem" />
                                    </div>
                                    <div class="col-md-3 mt-1 mb-1 d-none">
                                        <label for="CreatedBy">Created By</label>
                                        <input readonly name="CreatedBy" id="CreatedBy" value="@UserName" type="text" placeholder="Created By" class="form-control form-control-sm  UnitG_Elem" />
                                    </div>
                                </div>
                                <!-- Buttons -->
                                <div class="row mt-4 mb-2">
                                    <div class="col-md-12 mt-3">
                                        <button type="button" id="Form_Delete_btn" style="display:none; width:80px;" class="btn ml-1 mr-1 btn-sm btn-danger">Delete</button>
                                        <button type="button" id="Form_Update_btn" style="display:none; width:80px;" class="btn ml-1 mr-1 btn-sm text-white btn-info">Update</button>
                                        <button type="button" id="Form_Save_btn" style="width:80px;" class="btn ml-1 mr-1 btn-sm btn-success">Save</button>
                                        <button type="reset" id="Form_reset_btn" style="width:80px;" class="btn ml-1 mr-1 btn-sm btn-dark">Reset</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="tab-pane p-3" id="All_UnitGroupMaster" role="tabpanel">
                            <div class="row p-3 mt-2 border">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-striped table-hover w-100" id="Table">
                                        <!-- Table Content Goes Here -->
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Row end -->
        </div>
    </div>
</div>

<!-- modals -->
<div class="modal" id="UnitGrpDModal">
    <div class="modal-content">
        <div class="card-header bg-white border-0 p-1">
            <div class="row">
                <div class="col-6">
                    <h4>Unit Group Definition Master</h4>
                </div>
                <div class="col-6 text-right  ">
                    <span class="close closeModal" id="">&times;</span>
                </div>
            </div>
        </div>
        <div class="card-body border">
            <div class="row mb-3 mt-1">


                <div class="col-md-3">
                    <label>Base UoM</label>
                    <input class="form-control form-control-sm" readonly id="UOMGRP" name="UOMGRP" />
                </div>
                <div class="col-md-3 mt-1  mb-1"></div>


            </div>
            <div class="row mb-3 mt-1">
                <div class="col-md-10"></div>
                <div class="col-md-1 ml-5 text-center mb-1">
                    <button type="button" id="AddUnitGrpDef" class="btn btn-sm btn-primary mt-3 btn-sm mr-3">Add New Row</button>
                </div>
            </div>
            <div class="table-responsive" style="height:500px;">
                <table class="table border  table-striped   table-hover table-bordered w-100" id="UnitGrpDeftbl">
                    <thead>
                        <tr>
                            <th class='p-2 text-center' owrap>Sr.No</th>
                            <th class='p-2 text-center' owrap>Action</th>
                            <th class='p-2 text-center' owrap>Active</th>
                            <th class='p-2 text-center' owrap>Stock UoM</th>
                            <th class='p-2 text-center' owrap>Stock Qty</th>
                            <th class='p-2 text-center' owrap>Base Qty</th>
                            <th class='p-2 text-center' nowrap hidden>UnitDefId</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="row mb-3">
                <div class="col-md-12">
                    <button type="button" id="Unit_def_Btn" class="btn ml-1 mr-1 btn-sm btn-success">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal" id="excelModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Excel Sheet data</h5>
            <span class="close closeModalInstallments" data-bs-dismiss="modal" id="">&times;</span>
        </div>
        <div class="modal-body">
            <div class="card-body border">
                <div class="table-responsive" style="height:500px;">
                    <table class="table table-bordered table-striped table-hover w-100" cellspacing="0" cellpadding="0" border="1" id="excelTable">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        function Loader() {
            $(".Loader1").toggleClass('d-none');
        }
        // import excel
        {
            $("#XLS").click(function (event) {
                event.preventDefault(); // Prevent the default behavior
                var table = $("#Table")[0];
                if (!table) {
                    console.error("Table not found");
                    return;
                }
                var columnsToExport = [
                    { index: 0, name: 'Sr No' },
                    { index: 3, name: 'IsManual' },
                    { index: 4, name: 'UomGRPId' },
                    { index: 5, name: 'Base Unit Name' },
                    { index: 6, name: 'Code' },
                    { index: 7, name: ' Unit Group Name' },

                ];
                var filteredData = [];
                var columnNamesRow = [];
                columnsToExport.forEach(function (column) {
                    columnNamesRow.push(column.name);
                });
                filteredData.push(columnNamesRow);
                $(table).find('tbody tr').each(function (rowIndex, row) {
                    var rowData = [];
                    $(row).find('td').each(function (cellIndex, cell) {
                        columnsToExport.forEach(function (column) {
                            if (cellIndex === column.index) {
                                rowData.push(cell.textContent);
                            }
                        });
                    });
                    filteredData.push(rowData);
                });
                var ws = XLSX.utils.aoa_to_sheet(filteredData);
                var wb = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(wb, ws, "Sheet JS");
                XLSX.writeFile(wb, 'Project-Config.xlsx');
            });
        }
        var UOMCODEDATA = []
        var UnitGrpMstData = []
        var UnitDefMstData = []

        {
            // Open modal
            $(".UnitGrpDef").click(function () {
                $("#BarItemCode").val($("#ItemCode").val())
                $("#BarItemCodeDescription").val($("#ItemName").val())
                $("#UOMGRP").val($("#UomGrpId option:selected").text())
                $("#UnitGrpDModal").fadeIn();
                for (var j = 0; j < UOMCODEDATA.length; j++) {
                    var BaseUomId = $('#BaseUomId').val();
                    if (UOMCODEDATA[j].UomId == BaseUomId) {
                        $("#UOMGRP").val(UOMCODEDATA[j].UomCode + " - " + UOMCODEDATA[j].UomName);

                    }
                }

            });

            //Data Bind
            $("#AddUnitGrpDef").click(function () {
                AddRow();
            });
            function AddRow(StrData, Index) {
                var UOMDrp = ""; // Initialize the dropdown HTML

                for (var i = 0; i < UOMCODEDATA.length; i++) {
                    //   console.log('UOMCODEDATA:', UOMCODEDATA[i]);
                    var BaseUomId = $('#BaseUomId').val();
                    if (BaseUomId != UOMCODEDATA[i].UomId) {
                        UOMDrp += "<option value=" + UOMCODEDATA[i].UomId + ">" + UOMCODEDATA[i].UomCode + " - " + UOMCODEDATA[i].UomName + "</option>";
                    }

                }
                var list = "<tr>";
                if (StrData) {
                    var Index = $("#UnitGrpDeftbl tbody tr").length;
                    var selectedUomId = StrData.UomId;

                    UOMDrp = "<select class='form-control form-control-sm StockUom'>";
                    for (var i = 0; i < UOMCODEDATA.length; i++) {
                        var BaseUomId = $('#BaseUomId').val();
                        if (BaseUomId != UOMCODEDATA[i].UomId) {
                            if (UOMCODEDATA[i].UomId == selectedUomId) {
                                UOMDrp += "<option value=" + UOMCODEDATA[i].UomId + " selected>" + UOMCODEDATA[i].UomCode + " - " + UOMCODEDATA[i].UomName + "</option>";
                            } else {
                                UOMDrp += "<option value=" + UOMCODEDATA[i].UomId + ">" + UOMCODEDATA[i].UomCode + " - " + UOMCODEDATA[i].UomName + "</option>";
                            }
                        }
                    }
                    UOMDrp += "</select>";


                    list += "<td class='text-center'>" + parseInt(Index + 1) + "</td>"; // Add the index to the first column
                    list += '<td class="p-0 text-center" nowrap><i class="fa fa-trash text-danger mt-2 Unit_table_delete"></i></td>';
                    // Assuming StrData.IsActive contains the value "Y" or "N"
                    var isChecked = StrData.IsActive === 'Y';

                    list += '<td class="p-0 text-center" nowrap> ' +
                        '<label style="margin:5px!important; padding:0px!important;" class="tblswitch p-0 m-0">' +
                        '<input type="checkbox" value="' + StrData.IsActive + '" ' + (isChecked ? 'checked' : '') + ' name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">' +
                        '<span class="tblslider"></span>' +
                        '</label>' +
                        '</td>';


                    list += "<td class='p-0 text-center' nowrap>" + UOMDrp + "</td>"; // Bind the dropdown to the table
                    list += "<td class='p-0 text-center' nowrap><input style='height: 33px;' class='p-1 form-control form-control-sm StockQty' type='text' placeholder='Stock Qty' value='" + StrData.StkQty + "'/></td>";
                    list += "<td class='p-0 text-center' nowrap><input style='height: 33px;' class='p-1 form-control form-control-sm BaseQty' type='text' placeholder='Base Qty' value='" + StrData.BaseQty + "'/></td>";
                    list += "<td class='p-0 text-center' nowrap hidden><input style='height: 33px;' class='p-1 form-control form-control-sm UomGRPDefId' type='text' placeholder='' value='" + StrData.UomGRPDefId + "'/></td>";

                    // list += "</tr>";

                }
                else {
                    var Index = $("#UnitGrpDeftbl tbody tr").length;

                    UOMDrp = "<select class='form-control form-control-sm StockUom'>" + UOMDrp + "</select>"; // Wrap options in select tag
                    // var list = "<tr>";
                    list += "<td class='text-center'>" + parseInt(Index + 1) + "</td>"; // Add the index to the first column
                    list += '<td class="p-0 text-center" nowrap><i class="fa fa-trash text-danger mt-2 Unit_table_delete"></i></td>';
                    list += `<td class="p-0 text-center" nowrap> <label style="margin:5px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                                        <input type="checkbox"  value="Y" checked name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                            <span class="tblslider"></span>
                                                                                            </label></td>`;
                    list += "<td class='p-0 text-center' nowrap>" + UOMDrp + "</td>"; // Bind the dropdown to the table
                    list += "<td class='p-0 text-center' nowrap><input style='height: 33px;' class='p-1 form-control form-control-sm StockQty' type='text' placeholder='Stock Qty'/></td>";
                    list += "<td class='p-0 text-center' nowrap><input style='height: 33px;' class='p-1 form-control form-control-sm BaseQty' type='text' placeholder='Base Qty' /></td>";
                    list += "<td class='p-0 text-center' nowrap hidden><input style='height: 33px;' class='p-1 form-control form-control-sm UomGRPDefId' type='text' placeholder='' /></td>";

                    list += "</tr>";
                }

                $("#UnitGrpDeftbl tbody").append(list);
            }
        }

        $.ajax({
            url: '@Url.Action("UOMCODE", "GetDropdownData")',
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                UOMCODEDATA = response;
                if (response.length > 0) {
                    let list = "<option value=''>Select UOM </option>";
                    for (var i = 0; i < response.length; i++) {
                        list += "<option value='" + response[i].UomId + "'>" + response[i].UomCode + "-" + response[i].UomName + "</option>";
                    }
                    $("#BaseUomId").html(list);
                    let list1 = "<option value=''>UOM</option>";
                    for (var i = 0; i < response.length; i++) {
                        list1 += "<option value='" + response[i].UomId + "-" + response[i].UomCode + "</option>";
                    }
                    $(".UOMCODE").html(list1);
                }
            },
            error: function (error) {
                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                console.error('Error:', error.responseText);
            }
        });

        //Region Add
        {
            $("#Form_Save_btn").click(function () {
                let isValid = true;
                let formData = {};
                $("#UnitGroupMaster_form input,select,textarea").each(function () {
                    var inputName = $(this).attr('name')
                    var inputValue = "";
                    if ($(this).find('textarea').lenght) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = ["BaseUomId", "UomGRPName"];
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {

                        formData[inputName] = inputValue;
                    }
                });
                //Call Api
                if (isValid && formData != "") {
                    $.ajax({
                        url: '@Url.Action("POSTDATA", "UnitGroupMaster")',
                        type: 'POST',
                        dataType: 'json',
                        data: formData,
                        success: function (response) {
                            if (response !== "") {
                                $("#Form_reset_btn").click()
                                notify("Unit Group Master Added Succefully ..!", "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                $("#UnitGroupMaster_form")[0].reset();
                                LoadTableData();
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
            })
        }
        //Region Update
        {
            $("#Form_Update_btn").click(function () {

                let isValid = true;
                let formData = {};
                $("#UnitGroupMaster_form input,select,textarea").each(function () {
                    var inputName = $(this).attr('name')
                    var inputValue = "";
                    if ($(this).find('textarea').lenght) {
                        inputValue = $(this).text();
                    } else {
                        inputValue = $(this).val();
                    }
                    var mandatoryfields = ["UomGRPId", "BaseUomId", "UomGRPName", "IsManual"];
                    var inputElement = $("#" + inputName);
                    var inputId = inputElement.attr('id');
                    var labelText = $("label[for='" + inputId + "']").text();
                    if (mandatoryfields.includes(inputName) && inputValue === "") {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').addClass("select2-error");
                        } else {
                            inputElement.addClass("border-danger");
                        }
                        isValid = false;
                        notify("Please Fill " + labelText + " Details..!", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                        return false;
                    } else {
                        if (inputElement.hasClass("select2-hidden-accessible")) {
                            inputElement.next('.select2-container').removeClass("select2-error");
                        } else {
                            inputElement.removeClass("border-danger");
                        }
                    }
                    if (inputName !== undefined && inputName !== "" && inputName !== null) {

                        formData[inputName] = inputValue;

                    }
                });
                //Call Api
                if (isValid && formData !== "") {
                    $.ajax({
                        url: '@Url.Action("UPDATEDATA", "UnitGroupMaster")',
                        type: 'POST',
                        dataType: 'json',
                        data: formData,
                        success: function (response) {
                            if (response.success) {
                                $("#UnitGroupMaster_form")[0].reset();
                                LoadTableData();
                                $("#Form_reset_btn").click()
                                HideBtn()
                                notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                            } else {
                                notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                }
            })
        }
        //Region Delete
        {
            $("#Form_Delete_btn").click(function () {
                Delete($("#UomGRPId").val());
            })
            $(document).on("click", ".table_delete", function () {
                var $row = $(this).closest("tr");
                var id = $row.find('td.tbl_Main_ID').text();
                Delete(id);
            })


            $(document).on("click", ".Unit_table_delete", function () {
                var $row = $(this).closest("tr");
                var id = $row.find('td .UomGRPDefId').val();
                Delete1(id);
            })
        }
        //Region Select Row Data
        {
            $(document).on("click", ".table_edit", function () {
                var $row = $(this).closest("tr");
                $row.addClass("active");
                bindrecord($row)
            })

            function bindrecord($row) {
                var rowObject = {};
                $row.find('td').each(function (index) {
                    var $td = $(this);
                    var key = $td.closest('table').find('th').eq(index).text().trim().replace(/[.,()%\- ]/g, '');
                    if ($td.find('input').length) {
                        rowObject[key] = $td.find('input').val();
                    }
                    else if ($td.find('textarea').length) {
                        rowObject[key] = $td.find('textarea').val();
                    }
                    else if ($td.find('img').length) {
                        rowObject[key] = $td.find('img').attr("src");
                    } else if ($td.find('select').length) {
                        //  rowObject[key] = $td.find('select option:selected').text().trim();
                        //  rowObject['TaxCodeval'] = $td.closest('tr').find('.Taxc option:selected').val();
                        //  rowObject['UomEntryVal'] = $td.closest('tr').find('.Uomc1 option:selected').val();
                    } else {
                        rowObject[key] = $td.text().trim();
                    }
                });
                $("#UomGRPId").val(rowObject.UomGRPId)
                $(".UnitGrpDef").removeAttr('disabled', 'disabled');
                $(".UnitGrpDef").prop('disabled', false);
                $("#BaseUomId").val(rowObject.Code).trigger("change")
                $("#UomGRPName").val(rowObject.UnitGroupName)

                $("#IsManual").val(rowObject.IsManual)
                if (rowObject.IsManual == "Y") {
                    $("#IsManual").prop("checked", true);
                }
                if (rowObject.IsManual == "N") {
                    $("#IsManual").prop("checked", false);
                }
                $("#CreatedBy").val(rowObject.CreatedBy)
                $("#UpdatedBy").val(rowObject.UpdatedBy)
                var UpdateDate = SplitDatebyspace(rowObject.UpdateDate)
                $("#UpdateDate").val(UpdateDate)
                var CreateDate = SplitDatebyspace(rowObject.CreateDate)
                $("#CreateDate").val(CreateDate)
                $("#IsActive").val(rowObject.Active)
                if (rowObject.Active == "Y") {
                    $("#IsActive").prop("checked", true);
                }
                if (rowObject.Active == "N") {
                    $("#IsActive").prop("checked", false);
                }
                ShowBtn()
                $("#Create_UnitGroupMaster_Tab").click();
            }
        }
        //Function to handle form reset
        {
            $("#Form_reset_btn").click(function () {
                $(".UnitG_Elem").removeClass("border-danger");
            });
        }
        //Function Btn Opration
        {
            $("#Form_reset_btn").click(function () { HideBtn() })
            function ShowBtn() {

                $("#Form_Delete_btn").show();
                $("#Form_Update_btn").show();
                $("#Form_Save_btn").hide();
            }
            function HideBtn() {
                $(".UnitGrpDef").prop('disabled', true);
             
                $("#Form_Save_btn").show();
                $("#Form_Delete_btn").hide();
                $("#Form_Update_btn").hide();
            }
        }
        //region All functions
        {
            // Function to retrieve menu data
            LoadTableData();
            function LoadTableData() {
                $.ajax({
                    url: '@Url.Action("GET", "UnitGroupMaster")', // Update with your API endpoint for retrieving menu data
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        UnitGrpMstData = response;
                        ApplyDatatable(response, "Table")
                    },
                    error: function (error) {
                        notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                        console.error('Error:', error.responseText);
                    }
                });
            }
            //format date
            function formatAndSetDate(inputDate) {
                const parts = inputDate.split(' ');
                const datePart = parts[0];
                const timePart = parts[1];
                const [day, month, year] = datePart.split('-');
                const formattedDate = `${year}-${month}-${day}`;
                const formattedDateTime = `${formattedDate} ${timePart}`;
                return formattedDate;
            }
            function SplitDatebyspace(inputDate) {
                const parts = inputDate.split(' ');
                return parts[0];

            }
            //Apply Datatable
            function ApplyDatatable(jsonData, Table_Id) {
                if ($.fn.DataTable.isDataTable('#' + Table_Id)) {
                    $('#' + Table_Id).DataTable().destroy();
                }

                $('#' + Table_Id).DataTable({
                    scrollX: true,
                    scrollY: '600px',
                    scrollCollapse: true,
                    autoWidth: false,
                    fixedHeader: true,
                    data: jsonData,
                    columns: [
                        {
                            data: null,
                            title: "Sr No",
                            className: 'tbl_Sr_no no-wrap text-center',
                            render: function (data, type, row, meta) {
                                return meta.row + 1;
                            }
                        },
                        {
                            data: null,
                            title: 'Action',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                return '<i class="fa fa-edit table_edit text-primary mr-1"></i> <i class="fa fa-trash text-danger mr-2  table_delete"></i>';
                            }
                        },
                        {
                            data: 'IsActive',
                            title: 'Active',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                                            <input type="checkbox" disabled value="`+ data + `" checked name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                    <span class="tblslider"></span>
                                                                                                    </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                                <input type="checkbox" disabled value="`+ data + `"  name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                        <span class="tblslider"></span>
                                                                                                    </label></center>`;
                                }

                            }
                        },
                        {
                            data: 'IsManual',
                            title: 'IsManual',
                            className: 'text-center',
                            render: function (data, type, row) {
                                // Customize the content of the image column
                                if (data == "Y") {
                                    return `<center><label style="margin:0px!important; padding:0px!important;" class="tblswitch p-0 m-0">
                                                                                                                    <input type="checkbox" disabled value="`+ data + `" checked name="IsManual" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                        <span class="tblslider"></span>
                                                                                                        </label></center>`;
                                } else {
                                    return `<center><label class="tblswitch">
                                                                                                                    <input type="checkbox" disabled value="`+ data + `"  name="IsActive" class="tbltoggleSwitch form-control form-control-sm ">
                                                                                                            <span class="tblslider"></span>
                                                                                                        </label></center>`;
                                }

                            }
                        },
                        { data: 'UomGRPId', title: 'UomGRPId', className: 'tbl_UomGRPId d-none tbl_Main_ID' },
                        { data: 'BaseUomName', title: 'Base Unit Name', className: 'BaseUomName text-left' },
                        { data: 'BaseUomId', title: 'Code', className: 'tbl_BaseUomId text-center d-none' },
                        { data: 'UomGRPName', title: ' Unit Group Name', className: 'UomGRPName text-left' },
                        { data: 'CreatedBy', title: 'Created By', className: 'tbl_CreatedBy d-none' },
                        { data: 'CreateDate', title: 'Create Date', className: 'tbl_CreateDate d-none' },
                        { data: 'UpdatedBy', title: 'Updated By', className: 'tbl_UpdatedBy d-none' },
                        { data: 'UpdateDate', title: 'Update Date', className: 'tbl_UpdateDate d-none' },
                        // Add more columns as needed
                    ],
                    columnDefs: [
                        {
                            targets: '_all',
                            className: 'dt-no-wrap',
                            createdCell: function (td, cellData, rowData, row, col) {
                                $(td).css('padding', '5px');
                                $(td).attr('nowrap', 'nowrap');
                            }
                        }
                    ],
                    ordering: true,
                    paging: true,
                    retrieve: true,
                    searching: true,
                    responsive: true,
                    colReorder: false,
                    orderCellsTop: true,
                });
            }
            //Delete
            function Delete(ID) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This Unit Group Master Is Permanetly Delete Form Systeam..!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    confirmButtonColor: 'red',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DELETE", "UnitGroupMaster")',
                            type: 'POST',
                            dataType: 'json',
                            data: { Id: ID },
                            success: function (response) {
                                if (response.success) {
                                    $("#Form_reset_btn").click()
                                    $("#UnitGroupMaster_form")[0].reset();
                                    LoadTableData();
                                    HideBtn()
                                    notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                    Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                                } else {
                                    notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                }
                            },
                            error: function (error) {
                                notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                                console.error('Error:', error.responseText);
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                    }
                });

            }
        }

        // Add the function to get table data
        // Add the function to get table data
        // Add the function to get table data
        function getTableData() {
            var tableData = []; // Initialize an array to store table data

            $("#UnitGrpDeftbl tbody tr").each(function (index) {
                var rowData = {};

                var checkboxValue = $(this).find('.tbltoggleSwitch').prop('checked') ? 'Y' : 'N';

                rowData.IsActive = checkboxValue;

                var UomGRPDefIdValue = $(this).find('.UomGRPDefId').val();
                rowData.UomGRPDefId = UomGRPDefIdValue;

                var stockUomValue = $(this).find('.StockUom').val();
                rowData.UomId = stockUomValue;

                var stockQtyValue = $(this).find('.StockQty').val();
                rowData.StkQty = stockQtyValue;

                var baseQtyValue = $(this).find('.BaseQty').val();

                rowData.BaseQty = baseQtyValue;
                rowData.UomGRPId = $('#UomGRPId').val();
                tableData.push(rowData);
            });

            return tableData; // Return the array directly (already in JSON format)
        }

        // Add an event listener to send table data to the backend
        $("#Unit_def_Btn").click(function () {
            var tableData = getTableData();
            $.ajax({
                url: '@Url.Action("POSTUNITDEFGRPDATA", "UnitGroupMaster")', // Replace with your backend action URL
                type: 'POST',
                contentType: 'application/json', // Set content type to JSON
                data: JSON.stringify(tableData), // Send JSON data directly
                success: function (response) {
                    if (response.success) {

                        notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight");
                        UnitDefMst($("#UomGRPId").val());
                        $("#UnitGrpDModal").hide();

                    } else {
                        notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    }
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                }
            });
        });

        function UnitDefMst(ID) {
            $.ajax({
                url: '@Url.Action("GETUNITDEFMST", "UnitGroupMaster")', // Update with your API endpoint for retrieving menu data
                type: 'GET',
                dataType: 'json',
                data: { "ID": ID },
                success: function (response) {
                    UnitDefMstData = response;
                    $("#UnitGrpDeftbl tbody").empty();
                    for (var bc = 0; bc < UnitGrpMstData.length; bc++) {
                        var UomGRPId = UnitGrpMstData[bc].UomGRPId;
                        for (var bp = 0; bp < UnitDefMstData.length; bp++) {
                            var UomGRPIdDef = UnitDefMstData[bp].UomGRPId;
                            if (UomGRPIdDef == UomGRPId) {
                                var StrData = UnitDefMstData[bp];
                                AddRow(StrData);
                            }
                        }
                    }
                    //console.log(response)
                },
                error: function (error) {
                    notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight");
                    console.error('Error:', error.responseText);
                }
            });
        }

        $('.UnitGrpDef').click(function () {

            UnitDefMst($("#UomGRPId").val());
            for (var bc = 0; bc < UnitGrpMstData.length; bc++) {
                var UomGRPId = UnitGrpMstData[bc].UomGRPId;
                for (var bp = 0; bp < UnitDefMstData.length; bp++) {
                    var UomGRPIdDef = UnitDefMstData[bp].UomGRPId;
                    if (UomGRPIdDef == UomGRPId) {
                        var StrData = UnitDefMstData[bp];
                        AddRow(StrData, bp + 1);
                    }
                }
            }
        });
        function Delete1(ID) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'This Unit Group Definiation Master Is Permanetly Delete Form Systeam..!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Delete',
                confirmButtonColor: 'red',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DELETEDATA", "UnitGroupMaster")',
                        type: 'POST',
                        dataType: 'json',
                        data: { Id: ID },
                        success: function (response) {
                            if (response.success) {
                                UnitDefMst($("#UomGRPId").val());
                                notify(response.message, "", "top", "right", "fa fa-check mr-2", "success", "animated fadeInRight", "animated fadeOutRight")
                                Swal.fire('Deleted!', 'Your data has been deleted.', 'success');
                            } else {
                                notify("Error To Updating Data", "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            }
                        },
                        error: function (error) {
                            notify(error.responseText, "", "top", "right", "fa fa-warning mr-2", "danger", "animated fadeInRight", "animated fadeOutRight")
                            console.error('Error:', error.responseText);
                        }
                    });
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire('Cancelled', 'Your action has been cancelled.', 'error');
                }
            });

        }
        // Region Navigation
        {
            var $table = $("#Table");
            $table.find("tbody tr:first").addClass("active");
            $(".btn_forward").click(function () {
                var $currentRow = $table.find(".active");
                var $nextRow = $currentRow.next("tr");
                if ($nextRow.length > 0) {
                    $currentRow.removeClass("active");
                    $nextRow.addClass("active");
                    bindrecord($nextRow);
                } else {
                    var $firstRow = $table.find("tbody tr:first");
                    $table.find(".active").removeClass("active");
                    $firstRow.addClass("active");
                    bindrecord($firstRow);

                }
            });
            $(".btn_backward").click(function () {
                var $currentRow = $table.find(".active");
                var $prevRow = $currentRow.prev("tr");
                if ($prevRow.length > 0) {
                    $currentRow.removeClass("active");
                    $prevRow.addClass("active");
                    bindrecord($prevRow);
                } else {
                    var $lastRow = $table.find("tr:last");
                    $table.find(".active").removeClass("active");
                    $lastRow.addClass("active");
                    bindrecord($lastRow);
                }
            });
            $(".btn_first").click(function () {
                var $firstRow = $table.find("tbody tr:first");
                $table.find(".active").removeClass("active");
                $firstRow.addClass("active");
                bindrecord($firstRow);
            });
            $(".btn_last").click(function () {
                var $lastRow = $table.find("tr:last");
                $table.find(".active").removeClass("active");
                $lastRow.addClass("active");
                bindrecord($lastRow);
            });
            $(".btn_reload").click(function () {
                $("#UnitGroupMaster_form")[0].reset();
                $("#Form_reset_btn").click();
                HideBtn()
            });
        }
        //         //Bulk Post
        // {
        //     var objectsArray = []; // Initialize an empty array to store the parsed data

        //     $('#Import').on('change', function () {
        //         var file = this.files[0];
        //         if (file) {
        //             var reader = new FileReader();
        //             reader.onload = function (e) {
        //                 var data = new Uint8Array(e.target.result);
        //                 var workbook = XLSX.read(data, { type: 'array' });
        //                 var firstSheet = workbook.Sheets[workbook.SheetNames[0]];
        //                 var jsonData = XLSX.utils.sheet_to_json(firstSheet, { header: 1 });

        //                 if (jsonData.length > 0) {
        //                     var headers = jsonData[0];
        //                     var rows = jsonData.slice(1);
        //                     objectsArray = rows.map(function (row) {
        //                         var obj = {};
        //                         row.forEach(function (cell, i) {
        //                             obj[headers[i]] = cell;
        //                         });
        //                         return obj;
        //                     });
        //                 }
        //             };
        //             reader.readAsArrayBuffer(file);
        //         }
        //     });

        //     $('#Upload_Xls').on('click', function () {
        //         Loader()

        //         $.ajax({
        //             url: "@Url.Action("POSTDATAExcel", "UnitGroupMaster")",
        //             method: "POST",
        //             data: { data: JSON.stringify(objectsArray) },
        //             success: function (response) {
        //                 if (response!==""){
        //                     var jsondata = JSON.parse(response);
        //                     if (jsondata.length >0 ) {
        //                       createExcelFile(jsondata);
        //                     }else{
        //                         Swal.fire("Bulk Post Successfull...!","","success")
        //                         LoadTableData();
        //                     }
        //                 }
        //                 Loader()
        //                 $('#Import').val("")
        //             },
        //             error: function (err) {
        //                 console.log(err.responseText)
        //                 Loader()
        //             }
        //         });
        //     });

        //     function createExcelFile(jsonData) {
        //         const worksheet = XLSX.utils.json_to_sheet(jsonData);
        //         // Create a new workbook
        //         const workbook = XLSX.utils.book_new();
        //         XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");
        //         // Convert workbook to binary string
        //         const excelBuffer = XLSX.write(workbook, {
        //             bookType: "xlsx",
        //             type: "array"
        //         });
        //         // Create a blob from the binary string
        //         const blob = new Blob([excelBuffer], { type: "application/octet-stream" });
        //         // Create a download link and trigger the download
        //         const link = document.createElement('a');
        //         link.href = URL.createObjectURL(blob);
        //         link.download = 'error_log.xlsx';
        //         link.click();
        //         // Clean up the URL object
        //         URL.revokeObjectURL(link.href);
        //     }
        // }

        // bulk Post
        {
            $('#DownloadTemplete').click(function () {
                var value = 'Unit_GRP_Mst';
                $.ajax({
                    type: "get",
                    url: "@Url.Action("GetHeader", "UnitMaster")",
                    data: { data: value },
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var obj = data;
                        var headers = [];

                        // Populate headers array with column names and metadata
                        for (var i = 0; i < obj.length; i++) {
                            var header = obj[i].name;
                            var dp_field_dname = obj[i].name;
                            var MYDATA_TYPE = obj[i].dataType;
                            var MYLength = obj[i].maxLength;
                            var headerText = `${dp_field_dname},(${MYDATA_TYPE}, ${MYLength})`;
                            var tooltipText = '';
                            if (header.includes('BaseUomId')) {
                                tooltipText = "Tooltip for BaseUomId Use Unit Master Sheet for fill value in  " + header;
                            }

                            var headerObj = {
                                text: headerText,
                                tooltip: tooltipText
                            };

                            headers.push(headerObj);
                        }
                        const worksheetData = [headers.map(header => header.text)];
                        const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);
                        const columnWidth = 30; // Set desired width (in characters)
                        worksheet['!cols'] = headers.map(() => ({ width: columnWidth }));
                        headers.forEach((header, index) => {
                            if (header.tooltip) {
                                const cellAddress = XLSX.utils.encode_cell({ r: 0, c: index });
                                worksheet[cellAddress].c = [{
                                    t: header.tooltip,
                                    a: "system"
                                }];
                            }
                        });
                        const workbook = XLSX.utils.book_new();
                        XLSX.utils.book_append_sheet(workbook, worksheet, 'Headers');
                        $.ajax({
                            type: "get",
                            url: "@Url.Action("GETUNITDATA", "UnitMaster")",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                var obj = data;
                                if (obj.length > 0) {
                                    var columnNames = Object.keys(obj[0]);
                                    var sheetData = [columnNames];
                                    for (var i = 0; i < obj.length; i++) {
                                        var row = [];
                                        for (var j = 0; j < columnNames.length; j++) {
                                            row.push(obj[i][columnNames[j]]);
                                        }
                                        sheetData.push(row);
                                    }
                                    const worksheet2 = XLSX.utils.aoa_to_sheet(sheetData);
                                    worksheet2['!cols'] = columnNames.map(() => ({ width: columnWidth }));
                                    XLSX.utils.book_append_sheet(workbook, worksheet2, 'Unit Master');
                                }
                                const excelBuffer = XLSX.write(workbook, {
                                    bookType: 'xlsx',
                                    type: 'array'
                                });
                                const blob = new Blob([excelBuffer], { type: 'application/octet-stream' });
                                const link = document.createElement('a');
                                link.href = URL.createObjectURL(blob);
                                link.download = `${value}.xlsx`; // Corrected filename format
                                link.click();
                                URL.revokeObjectURL(link.href);
                            },
                            error: function (error) {
                                console.error('Error fetching EWB data:', error);
                            }
                        });
                    },
                    error: function (error) {
                        console.error('Error fetching data:', error);
                    }
                });
            });
            $('#Upload_Xls').on('click', function () {
                Loader();

                var input = document.getElementById('Import');
                var file = input.files[0];
                var reader = new FileReader();

                reader.onload = function (e) {
                    var data = new Uint8Array(e.target.result);
                    let workbook = XLSX.read(data, { type: 'array' });
                    let firstSheetName = workbook.SheetNames[0];
                    let worksheet = workbook.Sheets[firstSheetName];
                    let excelData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
                    let Eheaders = excelData[0];
                    let headers = Eheaders.map(header => {
                        // Split the header on ',' and take the first part
                        return header.split(',')[0];
                    });
                    let rows = excelData.slice(1);
                    let dataArray = rows.map(row => {
                        let obj = {};
                        row.forEach((cell, i) => {
                            obj[headers[i]] = cell;
                        });
                        return obj;
                    });
                    $.ajax({
                        url: "@Url.Action("POSTDATAExcel", "UnitGroupMaster")",
                        method: "POST",
                        data: { data: JSON.stringify(dataArray) },
                        success: function (response) {
                            if (response !== "") {
                                var jsondata = JSON.parse(response);
                                if (jsondata.length > 0) {
                                    createExcelFile(jsondata);
                                } else {
                                    Swal.fire("Bulk Post Successful...!", "", "success");
                                    LoadTableData();
                                }
                            }
                            Loader();
                            $('#Import').val("");
                        },
                        error: function (err) {
                            console.log(err.responseText);
                            Loader();
                        }
                    });
                };

                reader.readAsArrayBuffer(file);
            });

            function createExcelFile(jsonData) {
                const worksheet = XLSX.utils.json_to_sheet(jsonData);
                const workbook = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");
                const excelBuffer = XLSX.write(workbook, {
                    bookType: "xlsx",
                    type: "array"
                });
                const blob = new Blob([excelBuffer], { type: "application/octet-stream" });
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = 'error_log.xlsx';
                link.click();
                URL.revokeObjectURL(link.href);
            }
        }
        // View excl sheet
        {
            $('.closeModalInstallments').click(function () {
                $('#excelModal').modal('hide');
                $('#CopyFromModal').modal('hide');
            });

            document.getElementById('ViewExcel').addEventListener('click', function () {
                let fileInput = document.getElementById('Import');
                let file = fileInput.files[0];
                let fileName = file.name;
                let baseName = fileName.split('.').slice(0, -1).join('.');
                let reader = new FileReader();

                reader.onload = function (e) {
                    let data = new Uint8Array(e.target.result);
                    let workbook = XLSX.read(data, { type: 'array' });
                    let firstSheetName = workbook.SheetNames[0];
                    let worksheet = workbook.Sheets[firstSheetName];

                    let excelData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
                    let Eheaders = excelData[0];
                    let headers = Eheaders.map(header => header.split(',')[0]);

                    let rows = excelData.slice(1);
                    let dataArray = rows.map(row => {
                        let obj = {};
                        row.forEach((cell, i) => {
                            obj[headers[i]] = cell;
                        });
                        return obj;
                    });

                    let table = document.getElementById('excelTable');
                    table.innerHTML = '';

                    let thead = document.createElement('thead');
                    let tr = document.createElement('tr');
                    headers.forEach(header => {
                        let th = document.createElement('th');
                        th.textContent = header;
                        tr.appendChild(th);
                    });
                    thead.appendChild(tr);
                    table.appendChild(thead);

                    let tbody = document.createElement('tbody');
                    dataArray.forEach(row => {
                        let tr = document.createElement('tr');
                        headers.forEach(header => {
                            let td = document.createElement('td');
                            td.textContent = row[header];
                            tr.appendChild(td);
                        });
                        tbody.appendChild(tr);
                    });
                    table.appendChild(tbody);

                    $('#excelTable').DataTable({
                        ordering: true,
                        paging: true,
                        retrieve: true,
                        searching: false,
                        responsive: true,
                        colReorder: false,
                        orderCellsTop: false,
                        scrollY: '300px', // Set the height for the scroll
                        scrollX: true, // Enable horizontal scrolling if needed
                        scrollCollapse: true, // Enable collapse of the scroll area
                        paging: true, // Enable pagination
                        fixedHeader: true // Keep the header fixed
                    });
                    $('#excelModal').modal('show');
                };

                reader.readAsArrayBuffer(file);
            });



        }
    });
</script>





